name:                lnd-client
version:             0.1.0.0
github:              "coingaming/lnd-client"
license:             BSD3
author:              "Mikhail Prushinskiy <mprushinsky@gmail.com>, Ilja Tkachuk <21it@protonmail.com>, Artem Markov <drownbes@gmail.com>"
maintainer:          "Mikhail Prushinskiy <mprushinsky@gmail.com>, Ilja Tkachuk <21it@protonmail.com>, Artem Markov <drownbes@gmail.com>"
copyright:           "2022 Coingaming <hello@coingaming.io>"
synopsis:            Lightning Network Daemon (LND) client library for Haskell
category:            Lightning, Bitcoin, Finance, Network, Payments
description:         You can find documentation at <https://hackage.haskell.org/package/lnd-client>

extra-source-files:
- README.md
- ChangeLog.md

deps: &deps
  dependencies:
  # foundation
  - base
  - universum             >= 1.5.0 && < 1.8
  # time
  - time
  - chronos               >= 1.0.7 && < 1.2
  - unbounded-delays      >= 0.1.1.0 && < 0.1.2
  # storage
  - persistent            >= 2.11.0.2
  # logging
  - katip                 >= 0.8.3.0 && < 0.9
  - GenericPretty
  - generic-pretty-instances
  # byte and text
  - bytestring            >= 0.10.8.2 && < 0.13
  - base16-bytestring     >= 1.0.1.0 && < 1.1
  - base64-bytestring     >= 1.0.0.2 && < 1.3
  - text                  >= 1.2.3.1 && < 2.1
  - aeson                 >= 1.4.4.0
  # images
  - qrcode-core           >= 0.9 && < 0.10
  - qrcode-juicypixels    >= 0.8.0 && < 0.9
  - JuicyPixels           >= 3.3.3 && < 3.4
  # system and threading
  - envparse              >= 0.4.1 && < 0.4.2
  - async                 >= 2.2.2 && < 2.3
  - stm                   >= 2.5.0.0 && < 2.5.1
  # crypto
  - cryptonite            >= 0.25 && < 0.31
  - cryptohash-sha256     >= 0.11.101.0 && < 0.12
  - x509                  >= 1.7.5 && < 1.7.6
  - x509-store
  - pem                   >= 0.2.4 && < 0.3
  # bitcoin
  - network-bitcoin       >= 1.8.3
  # protobuf
  - microlens             >= 0.4.10
  - proto-lens            >= 0.7.0
  - proto-lens-runtime    >= 0.7.0
  # grpc
  - http2-grpc-proto-lens >= 0.1.0.0
  - http2-client
  - http2-client-grpc     >= 0.8.0.0
  - http2-grpc-types      >= 0.5.0.0
  - http2                 >= 3.0.3
  - tls
  # general
  - unliftio              >= 0.2.12
  - extra                 >= 1.6.18 && < 1.8
  - scientific            >= 0.3.6.2 && < 0.3.7
  - containers            >= 0.6.0.1 && < 0.6.6
  - template-haskell      >= 2.14.0.0 && < 2.19


default-extensions:
- NoImplicitPrelude
- MultiParamTypeClasses
- LambdaCase
- OverloadedStrings
- ScopedTypeVariables
- DerivingStrategies
- GeneralizedNewtypeDeriving
- DataKinds
- KindSignatures
- StrictData
- DeriveGeneric
- TypeOperators
ghc-options:
# For details on warnings: https://downloads.haskell.org/~ghc/master/users-guide/using-warnings.html
# Enable all warnings with -Weverything, then disable the ones we don’t care about
- -Weverything
- -Werror
- -Wno-missing-export-lists
- -Wno-missing-exported-signatures # missing-exported-signatures turns off the more strict -Wmissing-signatures. See https://ghc.haskell.org/trac/ghc/ticket/14794#ticket
- -Wno-missing-import-lists # Requires explicit imports of _every_ function (e.g. ‘$’); too strict
- -Wno-missed-specialisations # When GHC can’t specialize a polymorphic function. No big deal and requires fixing underlying libraries to solve.
- -Wno-all-missed-specialisations # See missed-specialisations
- -Wno-unsafe # Don’t use Safe Haskell warnings
- -Wno-safe # Don’t use Safe Haskell warnings
- -Wno-missing-local-signatures # Warning for polymorphic local bindings; nothing wrong with those.
when:
  - condition: impl(ghc >= 8.10.7)
    ghc-options:
    - -Wno-missing-safe-haskell-mode
    - -Wno-prepositive-qualified-module
    - -fenable-th-splice-warnings
    - -fprint-potential-instances

flags:
  ghcid:
    manual: true
    default: false

library:
  <<: *deps
  source-dirs:
  - src

internal-libraries:
  lnd-client-tkit:
    source-dirs:
    - tkit
    dependencies:
    - base
    - network-bitcoin
    - http2-client-grpc
    - lnd-client

executables:
  lnd-client-prof:
    main: LndClient/Main.hs
    source-dirs:
    - prof
    ghc-options:
    - -main-is LndClient.Main
    - -O2
    - -optc-O3
    - -funfolding-use-threshold=16
    - -threaded
    - -rtsopts
    - "\"-with-rtsopts=-N -s -p -h -xt\""
    - -prof
    - -fprof-auto
    - -optl-fuse-ld=gold
    ld-options:
    - -fuse-ld=gold
    dependencies:
    - base
    - lnd-client
    - lnd-client-tkit

tests:
  lnd-client-test:
    main: Spec.hs
    source-dirs:
    - test
    ghc-options:
    - -O2
    - -optc-O3
    - -funfolding-use-threshold=16
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    - -optl-fuse-ld=gold
    ld-options:
    - -fuse-ld=gold
    dependencies:
    - base
    - async
    - containers
    - hspec
    when:
      - condition: flag(ghcid)
        then:
          <<: *deps
          source-dirs:
          - src
          - tkit
          ghc-options:
          - -Wno-unused-packages
        else:
          dependencies:
          - lnd-client
          - lnd-client-tkit
