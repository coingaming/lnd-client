name:                lnd-client
version:             0.1.0.0
github:              "githubuser/lnd-client"
license:             BSD3
author:              "Author name here"
maintainer:          "example@example.com"
copyright:           "2020 Author name here"

extra-source-files:
- README.md
- ChangeLog.md

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            Web

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:         Please see the README on GitHub at <https://github.com/githubuser/lnd-client#readme>

#
# TODO : rm unused dependencies!!!
#
dependencies:
# foundation
- base >= 4.7 && < 5
- universum
# time
- chronos
- unbounded-delays
# storage
- persistent
# logging
- katip
# byte and text
- bytestring
- base16-bytestring
- text
- aeson
# protobuf and gRPC
- grpc-haskell
- grpc-haskell-core
- proto3-suite
- proto3-wire
- containers
- deepseq
- vector
# images
- qrcode-core
- qrcode-juicypixels
- JuicyPixels
# system and threading
- envparse
- async
# crypto
- cryptohash-sha256
# bitcoin
- network-bitcoin
# general
- unliftio
- x509
- pem
- extra

library:
  source-dirs: src
  default-extensions:
  - NoImplicitPrelude
  - MultiParamTypeClasses
  - LambdaCase
  - OverloadedStrings
  - ScopedTypeVariables
  ghc-options:
  # For details on warnings: https://downloads.haskell.org/~ghc/master/users-guide/using-warnings.html
  # Enable all warnings with -Weverything, then disable the ones we don’t care about
  - -Weverything
  - -Werror
  - -Wno-missing-exported-signatures # missing-exported-signatures turns off the more strict -Wmissing-signatures. See https://ghc.haskell.org/trac/ghc/ticket/14794#ticket
  - -Wno-missing-import-lists # Requires explicit imports of _every_ function (e.g. ‘$’); too strict
  - -Wno-missed-specialisations # When GHC can’t specialize a polymorphic function. No big deal and requires fixing underlying libraries to solve.
  - -Wno-all-missed-specialisations # See missed-specialisations
  - -Wno-unsafe # Don’t use Safe Haskell warnings
  - -Wno-safe # Don’t use Safe Haskell warnings
  - -Wno-missing-local-signatures # Warning for polymorphic local bindings; nothing wrong with those.
  - -Wno-monomorphism-restriction # Don’t warn if the monomorphism restriction is used
  dependencies:
  - hspec

tests:
  lnd-client-test:
    main:                Spec.hs
    source-dirs:         test
    default-extensions:
    - NoImplicitPrelude
    - MultiParamTypeClasses
    - LambdaCase
    - OverloadedStrings
    - ScopedTypeVariables
    ghc-options:
    # For details on warnings: https://downloads.haskell.org/~ghc/master/users-guide/using-warnings.html
    # Enable all warnings with -Weverything, then disable the ones we don’t care about
    - -Weverything
    - -Werror
    - -Wno-missing-exported-signatures # missing-exported-signatures turns off the more strict -Wmissing-signatures. See https://ghc.haskell.org/trac/ghc/ticket/14794#ticket
    - -Wno-missing-import-lists # Requires explicit imports of _every_ function (e.g. ‘$’); too strict
    - -Wno-missed-specialisations # When GHC can’t specialize a polymorphic function. No big deal and requires fixing underlying libraries to solve.
    - -Wno-all-missed-specialisations # See missed-specialisations
    - -Wno-unsafe # Don’t use Safe Haskell warnings
    - -Wno-safe # Don’t use Safe Haskell warnings
    - -Wno-missing-local-signatures # Warning for polymorphic local bindings; nothing wrong with those.
    - -Wno-monomorphism-restriction # Don’t warn if the monomorphism restriction is used
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - lnd-client
    - hspec
