{-# LANGUAGE DataKinds #-}
{-# LANGUAGE DeriveAnyClass #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE GADTs #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE TypeApplications #-}
{-# OPTIONS_GHC -Wno-missing-export-lists #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module RouterGrpc where

import qualified Control.Applicative as Hs
import Control.Applicative ((<$>), (<*>), (<|>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty (..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified LndGrpc
import Network.GRPC.HighLevel.Client as HsGRPC
import Network.GRPC.HighLevel.Generated as HsGRPC
import Network.GRPC.HighLevel.Server as HsGRPC hiding (serverLoop)
import Network.GRPC.HighLevel.Server.Unregistered as HsGRPC
  ( serverLoop,
  )
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.:), (.=))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Unsafe.Coerce as Hs
import qualified Prelude as Hs

data Router request response
  = Router
      { routerSendPaymentV2 ::
          request 'HsGRPC.ServerStreaming RouterGrpc.SendPaymentRequest
            LndGrpc.Payment ->
          Hs.IO (response 'HsGRPC.ServerStreaming LndGrpc.Payment),
        routerTrackPaymentV2 ::
          request 'HsGRPC.ServerStreaming RouterGrpc.TrackPaymentRequest
            LndGrpc.Payment ->
          Hs.IO (response 'HsGRPC.ServerStreaming LndGrpc.Payment),
        routerEstimateRouteFee ::
          request 'HsGRPC.Normal RouterGrpc.RouteFeeRequest
            RouterGrpc.RouteFeeResponse ->
          Hs.IO (response 'HsGRPC.Normal RouterGrpc.RouteFeeResponse),
        routerSendToRoute ::
          request 'HsGRPC.Normal RouterGrpc.SendToRouteRequest
            RouterGrpc.SendToRouteResponse ->
          Hs.IO
            (response 'HsGRPC.Normal RouterGrpc.SendToRouteResponse),
        routerSendToRouteV2 ::
          request 'HsGRPC.Normal RouterGrpc.SendToRouteRequest
            LndGrpc.HTLCAttempt ->
          Hs.IO (response 'HsGRPC.Normal LndGrpc.HTLCAttempt),
        routerResetMissionControl ::
          request 'HsGRPC.Normal RouterGrpc.ResetMissionControlRequest
            RouterGrpc.ResetMissionControlResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                RouterGrpc.ResetMissionControlResponse
            ),
        routerQueryMissionControl ::
          request 'HsGRPC.Normal RouterGrpc.QueryMissionControlRequest
            RouterGrpc.QueryMissionControlResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                RouterGrpc.QueryMissionControlResponse
            ),
        routerQueryProbability ::
          request 'HsGRPC.Normal RouterGrpc.QueryProbabilityRequest
            RouterGrpc.QueryProbabilityResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                RouterGrpc.QueryProbabilityResponse
            ),
        routerBuildRoute ::
          request 'HsGRPC.Normal RouterGrpc.BuildRouteRequest
            RouterGrpc.BuildRouteResponse ->
          Hs.IO
            (response 'HsGRPC.Normal RouterGrpc.BuildRouteResponse),
        routerSubscribeHtlcEvents ::
          request 'HsGRPC.ServerStreaming
            RouterGrpc.SubscribeHtlcEventsRequest
            RouterGrpc.HtlcEvent ->
          Hs.IO
            (response 'HsGRPC.ServerStreaming RouterGrpc.HtlcEvent),
        routerSendPayment ::
          request 'HsGRPC.ServerStreaming RouterGrpc.SendPaymentRequest
            RouterGrpc.PaymentStatus ->
          Hs.IO
            ( response 'HsGRPC.ServerStreaming
                RouterGrpc.PaymentStatus
            ),
        routerTrackPayment ::
          request 'HsGRPC.ServerStreaming RouterGrpc.TrackPaymentRequest
            RouterGrpc.PaymentStatus ->
          Hs.IO
            ( response 'HsGRPC.ServerStreaming
                RouterGrpc.PaymentStatus
            ),
        routerHtlcInterceptor ::
          request 'HsGRPC.BiDiStreaming
            RouterGrpc.ForwardHtlcInterceptResponse
            RouterGrpc.ForwardHtlcInterceptRequest ->
          Hs.IO
            ( response 'HsGRPC.BiDiStreaming
                RouterGrpc.ForwardHtlcInterceptRequest
            )
      }
  deriving (Hs.Generic)

routerServer ::
  Router HsGRPC.ServerRequest HsGRPC.ServerResponse ->
  HsGRPC.ServiceOptions ->
  Hs.IO ()
routerServer
  Router
    { routerSendPaymentV2 = routerSendPaymentV2,
      routerTrackPaymentV2 = routerTrackPaymentV2,
      routerEstimateRouteFee = routerEstimateRouteFee,
      routerSendToRoute = routerSendToRoute,
      routerSendToRouteV2 = routerSendToRouteV2,
      routerResetMissionControl = routerResetMissionControl,
      routerQueryMissionControl = routerQueryMissionControl,
      routerQueryProbability = routerQueryProbability,
      routerBuildRoute = routerBuildRoute,
      routerSubscribeHtlcEvents = routerSubscribeHtlcEvents,
      routerSendPayment = routerSendPayment,
      routerTrackPayment = routerTrackPayment,
      routerHtlcInterceptor = routerHtlcInterceptor
    }
  ( ServiceOptions
      serverHost
      serverPort
      useCompression
      userAgentPrefix
      userAgentSuffix
      initialMetadata
      sslConfig
      logger
      serverMaxReceiveMessageLength
    ) =
    ( HsGRPC.serverLoop
        HsGRPC.defaultOptions
          { HsGRPC.optNormalHandlers =
              [ ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/routerrpc.Router/EstimateRouteFee")
                    (HsGRPC.convertGeneratedServerHandler routerEstimateRouteFee)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/routerrpc.Router/SendToRoute")
                    (HsGRPC.convertGeneratedServerHandler routerSendToRoute)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/routerrpc.Router/SendToRouteV2")
                    (HsGRPC.convertGeneratedServerHandler routerSendToRouteV2)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/routerrpc.Router/ResetMissionControl")
                    ( HsGRPC.convertGeneratedServerHandler
                        routerResetMissionControl
                    )
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/routerrpc.Router/QueryMissionControl")
                    ( HsGRPC.convertGeneratedServerHandler
                        routerQueryMissionControl
                    )
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/routerrpc.Router/QueryProbability")
                    (HsGRPC.convertGeneratedServerHandler routerQueryProbability)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/routerrpc.Router/BuildRoute")
                    (HsGRPC.convertGeneratedServerHandler routerBuildRoute)
                )
              ],
            HsGRPC.optClientStreamHandlers = [],
            HsGRPC.optServerStreamHandlers =
              [ ( HsGRPC.ServerStreamHandler
                    (HsGRPC.MethodName "/routerrpc.Router/SendPaymentV2")
                    ( HsGRPC.convertGeneratedServerWriterHandler
                        routerSendPaymentV2
                    )
                ),
                ( HsGRPC.ServerStreamHandler
                    (HsGRPC.MethodName "/routerrpc.Router/TrackPaymentV2")
                    ( HsGRPC.convertGeneratedServerWriterHandler
                        routerTrackPaymentV2
                    )
                ),
                ( HsGRPC.ServerStreamHandler
                    (HsGRPC.MethodName "/routerrpc.Router/SubscribeHtlcEvents")
                    ( HsGRPC.convertGeneratedServerWriterHandler
                        routerSubscribeHtlcEvents
                    )
                ),
                ( HsGRPC.ServerStreamHandler
                    (HsGRPC.MethodName "/routerrpc.Router/SendPayment")
                    (HsGRPC.convertGeneratedServerWriterHandler routerSendPayment)
                ),
                ( HsGRPC.ServerStreamHandler
                    (HsGRPC.MethodName "/routerrpc.Router/TrackPayment")
                    ( HsGRPC.convertGeneratedServerWriterHandler
                        routerTrackPayment
                    )
                )
              ],
            HsGRPC.optBiDiStreamHandlers =
              [ ( HsGRPC.BiDiStreamHandler
                    (HsGRPC.MethodName "/routerrpc.Router/HtlcInterceptor")
                    (HsGRPC.convertGeneratedServerRWHandler routerHtlcInterceptor)
                )
              ],
            optServerHost = serverHost,
            optServerPort = serverPort,
            optUseCompression = useCompression,
            optUserAgentPrefix = userAgentPrefix,
            optUserAgentSuffix = userAgentSuffix,
            optInitialMetadata = initialMetadata,
            optSSLConfig = sslConfig,
            optLogger = logger,
            optMaxReceiveMessageLength = serverMaxReceiveMessageLength
          }
    )

routerClient ::
  HsGRPC.Client ->
  Hs.IO (Router HsGRPC.ClientRequest HsGRPC.ClientResult)
routerClient client =
  (Hs.pure Router)
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/routerrpc.Router/SendPaymentV2")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/routerrpc.Router/TrackPaymentV2")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/routerrpc.Router/EstimateRouteFee")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/routerrpc.Router/SendToRoute")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/routerrpc.Router/SendToRouteV2")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/routerrpc.Router/ResetMissionControl")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/routerrpc.Router/QueryMissionControl")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/routerrpc.Router/QueryProbability")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/routerrpc.Router/BuildRoute")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/routerrpc.Router/SubscribeHtlcEvents")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/routerrpc.Router/SendPayment")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/routerrpc.Router/TrackPayment")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/routerrpc.Router/HtlcInterceptor")
                )
        )

data SendPaymentRequest
  = SendPaymentRequest
      { sendPaymentRequestDest ::
          Hs.ByteString,
        sendPaymentRequestAmt :: Hs.Int64,
        sendPaymentRequestAmtMsat :: Hs.Int64,
        sendPaymentRequestPaymentHash :: Hs.ByteString,
        sendPaymentRequestFinalCltvDelta :: Hs.Int32,
        sendPaymentRequestPaymentAddr :: Hs.ByteString,
        sendPaymentRequestPaymentRequest :: Hs.Text,
        sendPaymentRequestTimeoutSeconds :: Hs.Int32,
        sendPaymentRequestFeeLimitSat :: Hs.Int64,
        sendPaymentRequestFeeLimitMsat :: Hs.Int64,
        sendPaymentRequestOutgoingChanId :: Hs.Word64,
        sendPaymentRequestOutgoingChanIds ::
          Hs.Vector
            Hs.Word64,
        sendPaymentRequestLastHopPubkey :: Hs.ByteString,
        sendPaymentRequestCltvLimit :: Hs.Int32,
        sendPaymentRequestRouteHints ::
          Hs.Vector
            LndGrpc.RouteHint,
        sendPaymentRequestDestCustomRecords ::
          Hs.Map Hs.Word64
            Hs.ByteString,
        sendPaymentRequestAllowSelfPayment :: Hs.Bool,
        sendPaymentRequestDestFeatures ::
          Hs.Vector
            (HsProtobuf.Enumerated LndGrpc.FeatureBit),
        sendPaymentRequestMaxParts :: Hs.Word32,
        sendPaymentRequestNoInflightUpdates :: Hs.Bool
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SendPaymentRequest where
  nameOf _ = (Hs.fromString "SendPaymentRequest")

instance HsProtobuf.HasDefault SendPaymentRequest

instance HsProtobuf.Message SendPaymentRequest where
  encodeMessage
    _
    SendPaymentRequest
      { sendPaymentRequestDest = sendPaymentRequestDest,
        sendPaymentRequestAmt = sendPaymentRequestAmt,
        sendPaymentRequestAmtMsat = sendPaymentRequestAmtMsat,
        sendPaymentRequestPaymentHash = sendPaymentRequestPaymentHash,
        sendPaymentRequestFinalCltvDelta =
          sendPaymentRequestFinalCltvDelta,
        sendPaymentRequestPaymentAddr = sendPaymentRequestPaymentAddr,
        sendPaymentRequestPaymentRequest =
          sendPaymentRequestPaymentRequest,
        sendPaymentRequestTimeoutSeconds =
          sendPaymentRequestTimeoutSeconds,
        sendPaymentRequestFeeLimitSat = sendPaymentRequestFeeLimitSat,
        sendPaymentRequestFeeLimitMsat = sendPaymentRequestFeeLimitMsat,
        sendPaymentRequestOutgoingChanId =
          sendPaymentRequestOutgoingChanId,
        sendPaymentRequestOutgoingChanIds =
          sendPaymentRequestOutgoingChanIds,
        sendPaymentRequestLastHopPubkey = sendPaymentRequestLastHopPubkey,
        sendPaymentRequestCltvLimit = sendPaymentRequestCltvLimit,
        sendPaymentRequestRouteHints = sendPaymentRequestRouteHints,
        sendPaymentRequestDestCustomRecords =
          sendPaymentRequestDestCustomRecords,
        sendPaymentRequestAllowSelfPayment =
          sendPaymentRequestAllowSelfPayment,
        sendPaymentRequestDestFeatures = sendPaymentRequestDestFeatures,
        sendPaymentRequestMaxParts = sendPaymentRequestMaxParts,
        sendPaymentRequestNoInflightUpdates =
          sendPaymentRequestNoInflightUpdates
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                sendPaymentRequestDest
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                sendPaymentRequestAmt
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 12)
                sendPaymentRequestAmtMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                sendPaymentRequestPaymentHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                sendPaymentRequestFinalCltvDelta
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 20)
                sendPaymentRequestPaymentAddr
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                sendPaymentRequestPaymentRequest
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                sendPaymentRequestTimeoutSeconds
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                sendPaymentRequestFeeLimitSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 13)
                sendPaymentRequestFeeLimitMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                sendPaymentRequestOutgoingChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 19)
                ( Hs.coerce @(Hs.Vector Hs.Word64) @(HsProtobuf.PackedVec Hs.Word64)
                    sendPaymentRequestOutgoingChanIds
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 14)
                sendPaymentRequestLastHopPubkey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                sendPaymentRequestCltvLimit
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                ( Hs.coerce @(Hs.Vector LndGrpc.RouteHint)
                    @(HsProtobuf.NestedVec LndGrpc.RouteHint)
                    sendPaymentRequestRouteHints
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                sendPaymentRequestDestCustomRecords
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 15)
                sendPaymentRequestAllowSelfPayment
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 16)
                ( Hs.coerce @(Hs.Vector (HsProtobuf.Enumerated LndGrpc.FeatureBit))
                    @(HsProtobuf.PackedVec (HsProtobuf.Enumerated LndGrpc.FeatureBit))
                    sendPaymentRequestDestFeatures
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 17)
                sendPaymentRequestMaxParts
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 18)
                sendPaymentRequestNoInflightUpdates
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SendPaymentRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 12)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 20)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 13)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.PackedVec Hs.Word64))
              @(_ (Hs.Vector Hs.Word64))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 19)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 14)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.RouteHint))
              @(_ (Hs.Vector LndGrpc.RouteHint))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 10)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 11)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 15)
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.PackedVec (HsProtobuf.Enumerated LndGrpc.FeatureBit)))
              @(_ (Hs.Vector (HsProtobuf.Enumerated LndGrpc.FeatureBit)))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 16)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 17)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 18)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "dest")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amt")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 12)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amt_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "payment_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "final_cltv_delta")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 20)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "payment_addr")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "payment_request")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "timeout_seconds")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "fee_limit_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 13)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "fee_limit_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "outgoing_chan_id")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            ),
            ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 19)
          (HsProtobuf.Repeated HsProtobuf.UInt64)
          (HsProtobuf.Single "outgoing_chan_ids")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 14)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "last_hop_pubkey")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "cltv_limit")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          ( HsProtobuf.Repeated
              ( HsProtobuf.Named
                  (HsProtobuf.Dots (HsProtobuf.Path ("lnrpc" Hs.:| ["RouteHint"])))
              )
          )
          (HsProtobuf.Single "route_hints")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          (HsProtobuf.Map HsProtobuf.UInt64 HsProtobuf.Bytes)
          (HsProtobuf.Single "dest_custom_records")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 15)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "allow_self_payment")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 16)
          ( HsProtobuf.Repeated
              ( HsProtobuf.Named
                  ( HsProtobuf.Dots
                      (HsProtobuf.Path ("lnrpc" Hs.:| ["FeatureBit"]))
                  )
              )
          )
          (HsProtobuf.Single "dest_features")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 17)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "max_parts")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 18)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "no_inflight_updates")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SendPaymentRequest where
  toJSONPB
    ( SendPaymentRequest
        f1
        f2
        f12
        f3
        f4
        f20
        f5
        f6
        f7
        f13
        f8
        f19
        f14
        f9
        f10
        f11
        f15
        f16
        f17
        f18
      ) =
      ( HsJSONPB.object
          [ "dest" .= f1,
            "amt" .= f2,
            "amt_msat" .= f12,
            "payment_hash" .= f3,
            "final_cltv_delta" .= f4,
            "payment_addr" .= f20,
            "payment_request" .= f5,
            "timeout_seconds" .= f6,
            "fee_limit_sat" .= f7,
            "fee_limit_msat" .= f13,
            "outgoing_chan_id" .= f8,
            "outgoing_chan_ids" .= f19,
            "last_hop_pubkey" .= f14,
            "cltv_limit" .= f9,
            "route_hints" .= f10,
            "dest_custom_records" .= f11,
            "allow_self_payment" .= f15,
            "dest_features" .= f16,
            "max_parts" .= f17,
            "no_inflight_updates" .= f18
          ]
      )
  toEncodingPB
    ( SendPaymentRequest
        f1
        f2
        f12
        f3
        f4
        f20
        f5
        f6
        f7
        f13
        f8
        f19
        f14
        f9
        f10
        f11
        f15
        f16
        f17
        f18
      ) =
      ( HsJSONPB.pairs
          [ "dest" .= f1,
            "amt" .= f2,
            "amt_msat" .= f12,
            "payment_hash" .= f3,
            "final_cltv_delta" .= f4,
            "payment_addr" .= f20,
            "payment_request" .= f5,
            "timeout_seconds" .= f6,
            "fee_limit_sat" .= f7,
            "fee_limit_msat" .= f13,
            "outgoing_chan_id" .= f8,
            "outgoing_chan_ids" .= f19,
            "last_hop_pubkey" .= f14,
            "cltv_limit" .= f9,
            "route_hints" .= f10,
            "dest_custom_records" .= f11,
            "allow_self_payment" .= f15,
            "dest_features" .= f16,
            "max_parts" .= f17,
            "no_inflight_updates" .= f18
          ]
      )

instance HsJSONPB.FromJSONPB SendPaymentRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SendPaymentRequest"
        ( \obj ->
            (Hs.pure SendPaymentRequest) <*> obj .: "dest" <*> obj .: "amt"
              <*> obj .: "amt_msat"
              <*> obj .: "payment_hash"
              <*> obj .: "final_cltv_delta"
              <*> obj .: "payment_addr"
              <*> obj .: "payment_request"
              <*> obj .: "timeout_seconds"
              <*> obj .: "fee_limit_sat"
              <*> obj .: "fee_limit_msat"
              <*> obj .: "outgoing_chan_id"
              <*> obj .: "outgoing_chan_ids"
              <*> obj .: "last_hop_pubkey"
              <*> obj .: "cltv_limit"
              <*> obj .: "route_hints"
              <*> obj .: "dest_custom_records"
              <*> obj .: "allow_self_payment"
              <*> obj .: "dest_features"
              <*> obj .: "max_parts"
              <*> obj .: "no_inflight_updates"
        )
    )

instance HsJSONPB.ToJSON SendPaymentRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SendPaymentRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SendPaymentRequest where
  declareNamedSchema _ =
    do
      let declare_dest = HsJSONPB.declareSchemaRef
      sendPaymentRequestDest <- declare_dest Proxy.Proxy
      let declare_amt = HsJSONPB.declareSchemaRef
      sendPaymentRequestAmt <- declare_amt Proxy.Proxy
      let declare_amt_msat = HsJSONPB.declareSchemaRef
      sendPaymentRequestAmtMsat <- declare_amt_msat Proxy.Proxy
      let declare_payment_hash = HsJSONPB.declareSchemaRef
      sendPaymentRequestPaymentHash <- declare_payment_hash Proxy.Proxy
      let declare_final_cltv_delta = HsJSONPB.declareSchemaRef
      sendPaymentRequestFinalCltvDelta <-
        declare_final_cltv_delta
          Proxy.Proxy
      let declare_payment_addr = HsJSONPB.declareSchemaRef
      sendPaymentRequestPaymentAddr <- declare_payment_addr Proxy.Proxy
      let declare_payment_request = HsJSONPB.declareSchemaRef
      sendPaymentRequestPaymentRequest <-
        declare_payment_request
          Proxy.Proxy
      let declare_timeout_seconds = HsJSONPB.declareSchemaRef
      sendPaymentRequestTimeoutSeconds <-
        declare_timeout_seconds
          Proxy.Proxy
      let declare_fee_limit_sat = HsJSONPB.declareSchemaRef
      sendPaymentRequestFeeLimitSat <- declare_fee_limit_sat Proxy.Proxy
      let declare_fee_limit_msat = HsJSONPB.declareSchemaRef
      sendPaymentRequestFeeLimitMsat <-
        declare_fee_limit_msat
          Proxy.Proxy
      let declare_outgoing_chan_id = HsJSONPB.declareSchemaRef
      sendPaymentRequestOutgoingChanId <-
        declare_outgoing_chan_id
          Proxy.Proxy
      let declare_outgoing_chan_ids = HsJSONPB.declareSchemaRef
      sendPaymentRequestOutgoingChanIds <-
        declare_outgoing_chan_ids
          Proxy.Proxy
      let declare_last_hop_pubkey = HsJSONPB.declareSchemaRef
      sendPaymentRequestLastHopPubkey <-
        declare_last_hop_pubkey
          Proxy.Proxy
      let declare_cltv_limit = HsJSONPB.declareSchemaRef
      sendPaymentRequestCltvLimit <- declare_cltv_limit Proxy.Proxy
      let declare_route_hints = HsJSONPB.declareSchemaRef
      sendPaymentRequestRouteHints <- declare_route_hints Proxy.Proxy
      let declare_dest_custom_records = HsJSONPB.declareSchemaRef
      sendPaymentRequestDestCustomRecords <-
        declare_dest_custom_records
          Proxy.Proxy
      let declare_allow_self_payment = HsJSONPB.declareSchemaRef
      sendPaymentRequestAllowSelfPayment <-
        declare_allow_self_payment
          Proxy.Proxy
      let declare_dest_features = HsJSONPB.declareSchemaRef
      sendPaymentRequestDestFeatures <- declare_dest_features Proxy.Proxy
      let declare_max_parts = HsJSONPB.declareSchemaRef
      sendPaymentRequestMaxParts <- declare_max_parts Proxy.Proxy
      let declare_no_inflight_updates = HsJSONPB.declareSchemaRef
      sendPaymentRequestNoInflightUpdates <-
        declare_no_inflight_updates
          Proxy.Proxy
      let _ =
            Hs.pure SendPaymentRequest
              <*> HsJSONPB.asProxy declare_dest
              <*> HsJSONPB.asProxy declare_amt
              <*> HsJSONPB.asProxy declare_amt_msat
              <*> HsJSONPB.asProxy declare_payment_hash
              <*> HsJSONPB.asProxy declare_final_cltv_delta
              <*> HsJSONPB.asProxy declare_payment_addr
              <*> HsJSONPB.asProxy declare_payment_request
              <*> HsJSONPB.asProxy declare_timeout_seconds
              <*> HsJSONPB.asProxy declare_fee_limit_sat
              <*> HsJSONPB.asProxy declare_fee_limit_msat
              <*> HsJSONPB.asProxy declare_outgoing_chan_id
              <*> HsJSONPB.asProxy declare_outgoing_chan_ids
              <*> HsJSONPB.asProxy declare_last_hop_pubkey
              <*> HsJSONPB.asProxy declare_cltv_limit
              <*> HsJSONPB.asProxy declare_route_hints
              <*> HsJSONPB.asProxy declare_dest_custom_records
              <*> HsJSONPB.asProxy declare_allow_self_payment
              <*> HsJSONPB.asProxy declare_dest_features
              <*> HsJSONPB.asProxy declare_max_parts
              <*> HsJSONPB.asProxy declare_no_inflight_updates
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SendPaymentRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("dest", sendPaymentRequestDest),
                          ("amt", sendPaymentRequestAmt),
                          ("amt_msat", sendPaymentRequestAmtMsat),
                          ( "payment_hash",
                            sendPaymentRequestPaymentHash
                          ),
                          ( "final_cltv_delta",
                            sendPaymentRequestFinalCltvDelta
                          ),
                          ( "payment_addr",
                            sendPaymentRequestPaymentAddr
                          ),
                          ( "payment_request",
                            sendPaymentRequestPaymentRequest
                          ),
                          ( "timeout_seconds",
                            sendPaymentRequestTimeoutSeconds
                          ),
                          ( "fee_limit_sat",
                            sendPaymentRequestFeeLimitSat
                          ),
                          ( "fee_limit_msat",
                            sendPaymentRequestFeeLimitMsat
                          ),
                          ( "outgoing_chan_id",
                            sendPaymentRequestOutgoingChanId
                          ),
                          ( "outgoing_chan_ids",
                            sendPaymentRequestOutgoingChanIds
                          ),
                          ( "last_hop_pubkey",
                            sendPaymentRequestLastHopPubkey
                          ),
                          ("cltv_limit", sendPaymentRequestCltvLimit),
                          ( "route_hints",
                            sendPaymentRequestRouteHints
                          ),
                          ( "dest_custom_records",
                            sendPaymentRequestDestCustomRecords
                          ),
                          ( "allow_self_payment",
                            sendPaymentRequestAllowSelfPayment
                          ),
                          ( "dest_features",
                            sendPaymentRequestDestFeatures
                          ),
                          ("max_parts", sendPaymentRequestMaxParts),
                          ( "no_inflight_updates",
                            sendPaymentRequestNoInflightUpdates
                          )
                        ]
                  }
            }
        )

data TrackPaymentRequest
  = TrackPaymentRequest
      { trackPaymentRequestPaymentHash ::
          Hs.ByteString,
        trackPaymentRequestNoInflightUpdates :: Hs.Bool
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named TrackPaymentRequest where
  nameOf _ = (Hs.fromString "TrackPaymentRequest")

instance HsProtobuf.HasDefault TrackPaymentRequest

instance HsProtobuf.Message TrackPaymentRequest where
  encodeMessage
    _
    TrackPaymentRequest
      { trackPaymentRequestPaymentHash =
          trackPaymentRequestPaymentHash,
        trackPaymentRequestNoInflightUpdates =
          trackPaymentRequestNoInflightUpdates
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                trackPaymentRequestPaymentHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                trackPaymentRequestNoInflightUpdates
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure TrackPaymentRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "payment_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "no_inflight_updates")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB TrackPaymentRequest where
  toJSONPB (TrackPaymentRequest f1 f2) =
    ( HsJSONPB.object
        ["payment_hash" .= f1, "no_inflight_updates" .= f2]
    )
  toEncodingPB (TrackPaymentRequest f1 f2) =
    ( HsJSONPB.pairs
        ["payment_hash" .= f1, "no_inflight_updates" .= f2]
    )

instance HsJSONPB.FromJSONPB TrackPaymentRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "TrackPaymentRequest"
        ( \obj ->
            (Hs.pure TrackPaymentRequest) <*> obj .: "payment_hash"
              <*> obj .: "no_inflight_updates"
        )
    )

instance HsJSONPB.ToJSON TrackPaymentRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON TrackPaymentRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema TrackPaymentRequest where
  declareNamedSchema _ =
    do
      let declare_payment_hash = HsJSONPB.declareSchemaRef
      trackPaymentRequestPaymentHash <- declare_payment_hash Proxy.Proxy
      let declare_no_inflight_updates = HsJSONPB.declareSchemaRef
      trackPaymentRequestNoInflightUpdates <-
        declare_no_inflight_updates
          Proxy.Proxy
      let _ =
            Hs.pure TrackPaymentRequest
              <*> HsJSONPB.asProxy declare_payment_hash
              <*> HsJSONPB.asProxy declare_no_inflight_updates
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "TrackPaymentRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "payment_hash",
                            trackPaymentRequestPaymentHash
                          ),
                          ( "no_inflight_updates",
                            trackPaymentRequestNoInflightUpdates
                          )
                        ]
                  }
            }
        )

data RouteFeeRequest
  = RouteFeeRequest
      { routeFeeRequestDest ::
          Hs.ByteString,
        routeFeeRequestAmtSat :: Hs.Int64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named RouteFeeRequest where
  nameOf _ = (Hs.fromString "RouteFeeRequest")

instance HsProtobuf.HasDefault RouteFeeRequest

instance HsProtobuf.Message RouteFeeRequest where
  encodeMessage
    _
    RouteFeeRequest
      { routeFeeRequestDest = routeFeeRequestDest,
        routeFeeRequestAmtSat = routeFeeRequestAmtSat
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                routeFeeRequestDest
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                routeFeeRequestAmtSat
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure RouteFeeRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "dest")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amt_sat")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB RouteFeeRequest where
  toJSONPB (RouteFeeRequest f1 f2) =
    (HsJSONPB.object ["dest" .= f1, "amt_sat" .= f2])
  toEncodingPB (RouteFeeRequest f1 f2) =
    (HsJSONPB.pairs ["dest" .= f1, "amt_sat" .= f2])

instance HsJSONPB.FromJSONPB RouteFeeRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "RouteFeeRequest"
        ( \obj ->
            (Hs.pure RouteFeeRequest) <*> obj .: "dest" <*> obj .: "amt_sat"
        )
    )

instance HsJSONPB.ToJSON RouteFeeRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON RouteFeeRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema RouteFeeRequest where
  declareNamedSchema _ =
    do
      let declare_dest = HsJSONPB.declareSchemaRef
      routeFeeRequestDest <- declare_dest Proxy.Proxy
      let declare_amt_sat = HsJSONPB.declareSchemaRef
      routeFeeRequestAmtSat <- declare_amt_sat Proxy.Proxy
      let _ =
            Hs.pure RouteFeeRequest <*> HsJSONPB.asProxy declare_dest
              <*> HsJSONPB.asProxy declare_amt_sat
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "RouteFeeRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("dest", routeFeeRequestDest),
                          ("amt_sat", routeFeeRequestAmtSat)
                        ]
                  }
            }
        )

data RouteFeeResponse
  = RouteFeeResponse
      { routeFeeResponseRoutingFeeMsat ::
          Hs.Int64,
        routeFeeResponseTimeLockDelay :: Hs.Int64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named RouteFeeResponse where
  nameOf _ = (Hs.fromString "RouteFeeResponse")

instance HsProtobuf.HasDefault RouteFeeResponse

instance HsProtobuf.Message RouteFeeResponse where
  encodeMessage
    _
    RouteFeeResponse
      { routeFeeResponseRoutingFeeMsat =
          routeFeeResponseRoutingFeeMsat,
        routeFeeResponseTimeLockDelay = routeFeeResponseTimeLockDelay
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                routeFeeResponseRoutingFeeMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                routeFeeResponseTimeLockDelay
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure RouteFeeResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "routing_fee_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "time_lock_delay")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB RouteFeeResponse where
  toJSONPB (RouteFeeResponse f1 f2) =
    ( HsJSONPB.object
        ["routing_fee_msat" .= f1, "time_lock_delay" .= f2]
    )
  toEncodingPB (RouteFeeResponse f1 f2) =
    ( HsJSONPB.pairs
        ["routing_fee_msat" .= f1, "time_lock_delay" .= f2]
    )

instance HsJSONPB.FromJSONPB RouteFeeResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "RouteFeeResponse"
        ( \obj ->
            (Hs.pure RouteFeeResponse) <*> obj .: "routing_fee_msat"
              <*> obj .: "time_lock_delay"
        )
    )

instance HsJSONPB.ToJSON RouteFeeResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON RouteFeeResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema RouteFeeResponse where
  declareNamedSchema _ =
    do
      let declare_routing_fee_msat = HsJSONPB.declareSchemaRef
      routeFeeResponseRoutingFeeMsat <-
        declare_routing_fee_msat
          Proxy.Proxy
      let declare_time_lock_delay = HsJSONPB.declareSchemaRef
      routeFeeResponseTimeLockDelay <-
        declare_time_lock_delay
          Proxy.Proxy
      let _ =
            Hs.pure RouteFeeResponse
              <*> HsJSONPB.asProxy declare_routing_fee_msat
              <*> HsJSONPB.asProxy declare_time_lock_delay
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "RouteFeeResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "routing_fee_msat",
                            routeFeeResponseRoutingFeeMsat
                          ),
                          ( "time_lock_delay",
                            routeFeeResponseTimeLockDelay
                          )
                        ]
                  }
            }
        )

data SendToRouteRequest
  = SendToRouteRequest
      { sendToRouteRequestPaymentHash ::
          Hs.ByteString,
        sendToRouteRequestRoute :: Hs.Maybe LndGrpc.Route
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SendToRouteRequest where
  nameOf _ = (Hs.fromString "SendToRouteRequest")

instance HsProtobuf.HasDefault SendToRouteRequest

instance HsProtobuf.Message SendToRouteRequest where
  encodeMessage
    _
    SendToRouteRequest
      { sendToRouteRequestPaymentHash =
          sendToRouteRequestPaymentHash,
        sendToRouteRequestRoute = sendToRouteRequestRoute
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                sendToRouteRequestPaymentHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce @(Hs.Maybe LndGrpc.Route)
                    @(HsProtobuf.Nested LndGrpc.Route)
                    sendToRouteRequestRoute
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SendToRouteRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.Route))
              @(_ (Hs.Maybe LndGrpc.Route))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "payment_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          ( HsProtobuf.Prim
              ( HsProtobuf.Named
                  (HsProtobuf.Dots (HsProtobuf.Path ("lnrpc" Hs.:| ["Route"])))
              )
          )
          (HsProtobuf.Single "route")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SendToRouteRequest where
  toJSONPB (SendToRouteRequest f1 f2) =
    (HsJSONPB.object ["payment_hash" .= f1, "route" .= f2])
  toEncodingPB (SendToRouteRequest f1 f2) =
    (HsJSONPB.pairs ["payment_hash" .= f1, "route" .= f2])

instance HsJSONPB.FromJSONPB SendToRouteRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SendToRouteRequest"
        ( \obj ->
            (Hs.pure SendToRouteRequest) <*> obj .: "payment_hash"
              <*> obj .: "route"
        )
    )

instance HsJSONPB.ToJSON SendToRouteRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SendToRouteRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SendToRouteRequest where
  declareNamedSchema _ =
    do
      let declare_payment_hash = HsJSONPB.declareSchemaRef
      sendToRouteRequestPaymentHash <- declare_payment_hash Proxy.Proxy
      let declare_route = HsJSONPB.declareSchemaRef
      sendToRouteRequestRoute <- declare_route Proxy.Proxy
      let _ =
            Hs.pure SendToRouteRequest
              <*> HsJSONPB.asProxy declare_payment_hash
              <*> HsJSONPB.asProxy declare_route
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SendToRouteRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "payment_hash",
                            sendToRouteRequestPaymentHash
                          ),
                          ("route", sendToRouteRequestRoute)
                        ]
                  }
            }
        )

data SendToRouteResponse
  = SendToRouteResponse
      { sendToRouteResponsePreimage ::
          Hs.ByteString,
        sendToRouteResponseFailure ::
          Hs.Maybe
            LndGrpc.Failure
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SendToRouteResponse where
  nameOf _ = (Hs.fromString "SendToRouteResponse")

instance HsProtobuf.HasDefault SendToRouteResponse

instance HsProtobuf.Message SendToRouteResponse where
  encodeMessage
    _
    SendToRouteResponse
      { sendToRouteResponsePreimage =
          sendToRouteResponsePreimage,
        sendToRouteResponseFailure = sendToRouteResponseFailure
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                sendToRouteResponsePreimage
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce @(Hs.Maybe LndGrpc.Failure)
                    @(HsProtobuf.Nested LndGrpc.Failure)
                    sendToRouteResponseFailure
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SendToRouteResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.Failure))
              @(_ (Hs.Maybe LndGrpc.Failure))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "preimage")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          ( HsProtobuf.Prim
              ( HsProtobuf.Named
                  (HsProtobuf.Dots (HsProtobuf.Path ("lnrpc" Hs.:| ["Failure"])))
              )
          )
          (HsProtobuf.Single "failure")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SendToRouteResponse where
  toJSONPB (SendToRouteResponse f1 f2) =
    (HsJSONPB.object ["preimage" .= f1, "failure" .= f2])
  toEncodingPB (SendToRouteResponse f1 f2) =
    (HsJSONPB.pairs ["preimage" .= f1, "failure" .= f2])

instance HsJSONPB.FromJSONPB SendToRouteResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SendToRouteResponse"
        ( \obj ->
            (Hs.pure SendToRouteResponse) <*> obj .: "preimage"
              <*> obj .: "failure"
        )
    )

instance HsJSONPB.ToJSON SendToRouteResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SendToRouteResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SendToRouteResponse where
  declareNamedSchema _ =
    do
      let declare_preimage = HsJSONPB.declareSchemaRef
      sendToRouteResponsePreimage <- declare_preimage Proxy.Proxy
      let declare_failure = HsJSONPB.declareSchemaRef
      sendToRouteResponseFailure <- declare_failure Proxy.Proxy
      let _ =
            Hs.pure SendToRouteResponse
              <*> HsJSONPB.asProxy declare_preimage
              <*> HsJSONPB.asProxy declare_failure
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SendToRouteResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("preimage", sendToRouteResponsePreimage),
                          ("failure", sendToRouteResponseFailure)
                        ]
                  }
            }
        )

data ResetMissionControlRequest = ResetMissionControlRequest {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ResetMissionControlRequest where
  nameOf _ = (Hs.fromString "ResetMissionControlRequest")

instance HsProtobuf.HasDefault ResetMissionControlRequest

instance HsProtobuf.Message ResetMissionControlRequest where
  encodeMessage _ ResetMissionControlRequest {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure ResetMissionControlRequest)
  dotProto _ = []

instance HsJSONPB.ToJSONPB ResetMissionControlRequest where
  toJSONPB (ResetMissionControlRequest) = (HsJSONPB.object [])
  toEncodingPB (ResetMissionControlRequest) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB ResetMissionControlRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ResetMissionControlRequest"
        (\obj -> (Hs.pure ResetMissionControlRequest))
    )

instance HsJSONPB.ToJSON ResetMissionControlRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ResetMissionControlRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ResetMissionControlRequest where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ResetMissionControlRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data ResetMissionControlResponse = ResetMissionControlResponse {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ResetMissionControlResponse where
  nameOf _ = (Hs.fromString "ResetMissionControlResponse")

instance HsProtobuf.HasDefault ResetMissionControlResponse

instance HsProtobuf.Message ResetMissionControlResponse where
  encodeMessage _ ResetMissionControlResponse {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure ResetMissionControlResponse)
  dotProto _ = []

instance HsJSONPB.ToJSONPB ResetMissionControlResponse where
  toJSONPB (ResetMissionControlResponse) = (HsJSONPB.object [])
  toEncodingPB (ResetMissionControlResponse) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB ResetMissionControlResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ResetMissionControlResponse"
        (\obj -> (Hs.pure ResetMissionControlResponse))
    )

instance HsJSONPB.ToJSON ResetMissionControlResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ResetMissionControlResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ResetMissionControlResponse where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ResetMissionControlResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data QueryMissionControlRequest = QueryMissionControlRequest {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named QueryMissionControlRequest where
  nameOf _ = (Hs.fromString "QueryMissionControlRequest")

instance HsProtobuf.HasDefault QueryMissionControlRequest

instance HsProtobuf.Message QueryMissionControlRequest where
  encodeMessage _ QueryMissionControlRequest {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure QueryMissionControlRequest)
  dotProto _ = []

instance HsJSONPB.ToJSONPB QueryMissionControlRequest where
  toJSONPB (QueryMissionControlRequest) = (HsJSONPB.object [])
  toEncodingPB (QueryMissionControlRequest) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB QueryMissionControlRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "QueryMissionControlRequest"
        (\obj -> (Hs.pure QueryMissionControlRequest))
    )

instance HsJSONPB.ToJSON QueryMissionControlRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON QueryMissionControlRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema QueryMissionControlRequest where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "QueryMissionControlRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

newtype QueryMissionControlResponse
  = QueryMissionControlResponse
      { queryMissionControlResponsePairs ::
          Hs.Vector
            RouterGrpc.PairHistory
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named QueryMissionControlResponse where
  nameOf _ = (Hs.fromString "QueryMissionControlResponse")

instance HsProtobuf.HasDefault QueryMissionControlResponse

instance HsProtobuf.Message QueryMissionControlResponse where
  encodeMessage
    _
    QueryMissionControlResponse
      { queryMissionControlResponsePairs =
          queryMissionControlResponsePairs
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce @(Hs.Vector RouterGrpc.PairHistory)
                    @(HsProtobuf.NestedVec RouterGrpc.PairHistory)
                    queryMissionControlResponsePairs
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure QueryMissionControlResponse)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec RouterGrpc.PairHistory))
              @(_ (Hs.Vector RouterGrpc.PairHistory))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "PairHistory"))
          )
          (HsProtobuf.Single "pairs")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB QueryMissionControlResponse where
  toJSONPB (QueryMissionControlResponse f2) =
    (HsJSONPB.object ["pairs" .= f2])
  toEncodingPB (QueryMissionControlResponse f2) =
    (HsJSONPB.pairs ["pairs" .= f2])

instance HsJSONPB.FromJSONPB QueryMissionControlResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "QueryMissionControlResponse"
        ( \obj ->
            (Hs.pure QueryMissionControlResponse) <*> obj .: "pairs"
        )
    )

instance HsJSONPB.ToJSON QueryMissionControlResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON QueryMissionControlResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema QueryMissionControlResponse where
  declareNamedSchema _ =
    do
      let declare_pairs = HsJSONPB.declareSchemaRef
      queryMissionControlResponsePairs <- declare_pairs Proxy.Proxy
      let _ =
            Hs.pure QueryMissionControlResponse
              <*> HsJSONPB.asProxy declare_pairs
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "QueryMissionControlResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "pairs",
                            queryMissionControlResponsePairs
                          )
                        ]
                  }
            }
        )

data PairHistory
  = PairHistory
      { pairHistoryNodeFrom ::
          Hs.ByteString,
        pairHistoryNodeTo :: Hs.ByteString,
        pairHistoryHistory :: Hs.Maybe RouterGrpc.PairData
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PairHistory where
  nameOf _ = (Hs.fromString "PairHistory")

instance HsProtobuf.HasDefault PairHistory

instance HsProtobuf.Message PairHistory where
  encodeMessage
    _
    PairHistory
      { pairHistoryNodeFrom = pairHistoryNodeFrom,
        pairHistoryNodeTo = pairHistoryNodeTo,
        pairHistoryHistory = pairHistoryHistory
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                pairHistoryNodeFrom
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                pairHistoryNodeTo
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                ( Hs.coerce @(Hs.Maybe RouterGrpc.PairData)
                    @(HsProtobuf.Nested RouterGrpc.PairData)
                    pairHistoryHistory
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PairHistory)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested RouterGrpc.PairData))
              @(_ (Hs.Maybe RouterGrpc.PairData))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 7)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "node_from")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "node_to")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "PairData")))
          (HsProtobuf.Single "history")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB PairHistory where
  toJSONPB (PairHistory f1 f2 f7) =
    ( HsJSONPB.object
        ["node_from" .= f1, "node_to" .= f2, "history" .= f7]
    )
  toEncodingPB (PairHistory f1 f2 f7) =
    ( HsJSONPB.pairs
        ["node_from" .= f1, "node_to" .= f2, "history" .= f7]
    )

instance HsJSONPB.FromJSONPB PairHistory where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PairHistory"
        ( \obj ->
            (Hs.pure PairHistory) <*> obj .: "node_from" <*> obj .: "node_to"
              <*> obj
              .: "history"
        )
    )

instance HsJSONPB.ToJSON PairHistory where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PairHistory where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PairHistory where
  declareNamedSchema _ =
    do
      let declare_node_from = HsJSONPB.declareSchemaRef
      pairHistoryNodeFrom <- declare_node_from Proxy.Proxy
      let declare_node_to = HsJSONPB.declareSchemaRef
      pairHistoryNodeTo <- declare_node_to Proxy.Proxy
      let declare_history = HsJSONPB.declareSchemaRef
      pairHistoryHistory <- declare_history Proxy.Proxy
      let _ =
            Hs.pure PairHistory <*> HsJSONPB.asProxy declare_node_from
              <*> HsJSONPB.asProxy declare_node_to
              <*> HsJSONPB.asProxy declare_history
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PairHistory",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("node_from", pairHistoryNodeFrom),
                          ("node_to", pairHistoryNodeTo),
                          ("history", pairHistoryHistory)
                        ]
                  }
            }
        )

data PairData
  = PairData
      { pairDataFailTime :: Hs.Int64,
        pairDataFailAmtSat :: Hs.Int64,
        pairDataFailAmtMsat :: Hs.Int64,
        pairDataSuccessTime :: Hs.Int64,
        pairDataSuccessAmtSat :: Hs.Int64,
        pairDataSuccessAmtMsat :: Hs.Int64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PairData where
  nameOf _ = (Hs.fromString "PairData")

instance HsProtobuf.HasDefault PairData

instance HsProtobuf.Message PairData where
  encodeMessage
    _
    PairData
      { pairDataFailTime = pairDataFailTime,
        pairDataFailAmtSat = pairDataFailAmtSat,
        pairDataFailAmtMsat = pairDataFailAmtMsat,
        pairDataSuccessTime = pairDataSuccessTime,
        pairDataSuccessAmtSat = pairDataSuccessAmtSat,
        pairDataSuccessAmtMsat = pairDataSuccessAmtMsat
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                pairDataFailTime
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                pairDataFailAmtSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                pairDataFailAmtMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                pairDataSuccessTime
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                pairDataSuccessAmtSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                pairDataSuccessAmtMsat
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PairData)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "fail_time")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "fail_amt_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "fail_amt_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "success_time")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "success_amt_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "success_amt_msat")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB PairData where
  toJSONPB (PairData f1 f2 f4 f5 f6 f7) =
    ( HsJSONPB.object
        [ "fail_time" .= f1,
          "fail_amt_sat" .= f2,
          "fail_amt_msat" .= f4,
          "success_time" .= f5,
          "success_amt_sat" .= f6,
          "success_amt_msat" .= f7
        ]
    )
  toEncodingPB (PairData f1 f2 f4 f5 f6 f7) =
    ( HsJSONPB.pairs
        [ "fail_time" .= f1,
          "fail_amt_sat" .= f2,
          "fail_amt_msat" .= f4,
          "success_time" .= f5,
          "success_amt_sat" .= f6,
          "success_amt_msat" .= f7
        ]
    )

instance HsJSONPB.FromJSONPB PairData where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PairData"
        ( \obj ->
            (Hs.pure PairData) <*> obj .: "fail_time" <*> obj .: "fail_amt_sat"
              <*> obj .: "fail_amt_msat"
              <*> obj .: "success_time"
              <*> obj .: "success_amt_sat"
              <*> obj .: "success_amt_msat"
        )
    )

instance HsJSONPB.ToJSON PairData where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PairData where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PairData where
  declareNamedSchema _ =
    do
      let declare_fail_time = HsJSONPB.declareSchemaRef
      pairDataFailTime <- declare_fail_time Proxy.Proxy
      let declare_fail_amt_sat = HsJSONPB.declareSchemaRef
      pairDataFailAmtSat <- declare_fail_amt_sat Proxy.Proxy
      let declare_fail_amt_msat = HsJSONPB.declareSchemaRef
      pairDataFailAmtMsat <- declare_fail_amt_msat Proxy.Proxy
      let declare_success_time = HsJSONPB.declareSchemaRef
      pairDataSuccessTime <- declare_success_time Proxy.Proxy
      let declare_success_amt_sat = HsJSONPB.declareSchemaRef
      pairDataSuccessAmtSat <- declare_success_amt_sat Proxy.Proxy
      let declare_success_amt_msat = HsJSONPB.declareSchemaRef
      pairDataSuccessAmtMsat <- declare_success_amt_msat Proxy.Proxy
      let _ =
            Hs.pure PairData <*> HsJSONPB.asProxy declare_fail_time
              <*> HsJSONPB.asProxy declare_fail_amt_sat
              <*> HsJSONPB.asProxy declare_fail_amt_msat
              <*> HsJSONPB.asProxy declare_success_time
              <*> HsJSONPB.asProxy declare_success_amt_sat
              <*> HsJSONPB.asProxy declare_success_amt_msat
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PairData",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("fail_time", pairDataFailTime),
                          ("fail_amt_sat", pairDataFailAmtSat),
                          ("fail_amt_msat", pairDataFailAmtMsat),
                          ("success_time", pairDataSuccessTime),
                          ("success_amt_sat", pairDataSuccessAmtSat),
                          ( "success_amt_msat",
                            pairDataSuccessAmtMsat
                          )
                        ]
                  }
            }
        )

data QueryProbabilityRequest
  = QueryProbabilityRequest
      { queryProbabilityRequestFromNode ::
          Hs.ByteString,
        queryProbabilityRequestToNode ::
          Hs.ByteString,
        queryProbabilityRequestAmtMsat :: Hs.Int64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named QueryProbabilityRequest where
  nameOf _ = (Hs.fromString "QueryProbabilityRequest")

instance HsProtobuf.HasDefault QueryProbabilityRequest

instance HsProtobuf.Message QueryProbabilityRequest where
  encodeMessage
    _
    QueryProbabilityRequest
      { queryProbabilityRequestFromNode =
          queryProbabilityRequestFromNode,
        queryProbabilityRequestToNode = queryProbabilityRequestToNode,
        queryProbabilityRequestAmtMsat = queryProbabilityRequestAmtMsat
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                queryProbabilityRequestFromNode
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                queryProbabilityRequestToNode
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                queryProbabilityRequestAmtMsat
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure QueryProbabilityRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "from_node")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "to_node")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amt_msat")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB QueryProbabilityRequest where
  toJSONPB (QueryProbabilityRequest f1 f2 f3) =
    ( HsJSONPB.object
        ["from_node" .= f1, "to_node" .= f2, "amt_msat" .= f3]
    )
  toEncodingPB (QueryProbabilityRequest f1 f2 f3) =
    ( HsJSONPB.pairs
        ["from_node" .= f1, "to_node" .= f2, "amt_msat" .= f3]
    )

instance HsJSONPB.FromJSONPB QueryProbabilityRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "QueryProbabilityRequest"
        ( \obj ->
            (Hs.pure QueryProbabilityRequest) <*> obj .: "from_node"
              <*> obj .: "to_node"
              <*> obj .: "amt_msat"
        )
    )

instance HsJSONPB.ToJSON QueryProbabilityRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON QueryProbabilityRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema QueryProbabilityRequest where
  declareNamedSchema _ =
    do
      let declare_from_node = HsJSONPB.declareSchemaRef
      queryProbabilityRequestFromNode <- declare_from_node Proxy.Proxy
      let declare_to_node = HsJSONPB.declareSchemaRef
      queryProbabilityRequestToNode <- declare_to_node Proxy.Proxy
      let declare_amt_msat = HsJSONPB.declareSchemaRef
      queryProbabilityRequestAmtMsat <- declare_amt_msat Proxy.Proxy
      let _ =
            Hs.pure QueryProbabilityRequest
              <*> HsJSONPB.asProxy declare_from_node
              <*> HsJSONPB.asProxy declare_to_node
              <*> HsJSONPB.asProxy declare_amt_msat
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "QueryProbabilityRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "from_node",
                            queryProbabilityRequestFromNode
                          ),
                          ("to_node", queryProbabilityRequestToNode),
                          ( "amt_msat",
                            queryProbabilityRequestAmtMsat
                          )
                        ]
                  }
            }
        )

data QueryProbabilityResponse
  = QueryProbabilityResponse
      { queryProbabilityResponseProbability ::
          Hs.Double,
        queryProbabilityResponseHistory ::
          Hs.Maybe
            RouterGrpc.PairData
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named QueryProbabilityResponse where
  nameOf _ = (Hs.fromString "QueryProbabilityResponse")

instance HsProtobuf.HasDefault QueryProbabilityResponse

instance HsProtobuf.Message QueryProbabilityResponse where
  encodeMessage
    _
    QueryProbabilityResponse
      { queryProbabilityResponseProbability =
          queryProbabilityResponseProbability,
        queryProbabilityResponseHistory =
          queryProbabilityResponseHistory
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                queryProbabilityResponseProbability
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce @(Hs.Maybe RouterGrpc.PairData)
                    @(HsProtobuf.Nested RouterGrpc.PairData)
                    queryProbabilityResponseHistory
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure QueryProbabilityResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested RouterGrpc.PairData))
              @(_ (Hs.Maybe RouterGrpc.PairData))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Double)
          (HsProtobuf.Single "probability")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "PairData")))
          (HsProtobuf.Single "history")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB QueryProbabilityResponse where
  toJSONPB (QueryProbabilityResponse f1 f2) =
    (HsJSONPB.object ["probability" .= f1, "history" .= f2])
  toEncodingPB (QueryProbabilityResponse f1 f2) =
    (HsJSONPB.pairs ["probability" .= f1, "history" .= f2])

instance HsJSONPB.FromJSONPB QueryProbabilityResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "QueryProbabilityResponse"
        ( \obj ->
            (Hs.pure QueryProbabilityResponse) <*> obj .: "probability"
              <*> obj .: "history"
        )
    )

instance HsJSONPB.ToJSON QueryProbabilityResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON QueryProbabilityResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema QueryProbabilityResponse where
  declareNamedSchema _ =
    do
      let declare_probability = HsJSONPB.declareSchemaRef
      queryProbabilityResponseProbability <-
        declare_probability
          Proxy.Proxy
      let declare_history = HsJSONPB.declareSchemaRef
      queryProbabilityResponseHistory <- declare_history Proxy.Proxy
      let _ =
            Hs.pure QueryProbabilityResponse
              <*> HsJSONPB.asProxy declare_probability
              <*> HsJSONPB.asProxy declare_history
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "QueryProbabilityResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "probability",
                            queryProbabilityResponseProbability
                          ),
                          ( "history",
                            queryProbabilityResponseHistory
                          )
                        ]
                  }
            }
        )

data BuildRouteRequest
  = BuildRouteRequest
      { buildRouteRequestAmtMsat ::
          Hs.Int64,
        buildRouteRequestFinalCltvDelta :: Hs.Int32,
        buildRouteRequestOutgoingChanId :: Hs.Word64,
        buildRouteRequestHopPubkeys :: Hs.Vector Hs.ByteString,
        buildRouteRequestPaymentAddr :: Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named BuildRouteRequest where
  nameOf _ = (Hs.fromString "BuildRouteRequest")

instance HsProtobuf.HasDefault BuildRouteRequest

instance HsProtobuf.Message BuildRouteRequest where
  encodeMessage
    _
    BuildRouteRequest
      { buildRouteRequestAmtMsat =
          buildRouteRequestAmtMsat,
        buildRouteRequestFinalCltvDelta = buildRouteRequestFinalCltvDelta,
        buildRouteRequestOutgoingChanId = buildRouteRequestOutgoingChanId,
        buildRouteRequestHopPubkeys = buildRouteRequestHopPubkeys,
        buildRouteRequestPaymentAddr = buildRouteRequestPaymentAddr
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                buildRouteRequestAmtMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                buildRouteRequestFinalCltvDelta
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                buildRouteRequestOutgoingChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                ( Hs.coerce @(Hs.Vector Hs.ByteString)
                    @(HsProtobuf.UnpackedVec Hs.ByteString)
                    buildRouteRequestHopPubkeys
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                buildRouteRequestPaymentAddr
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure BuildRouteRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.ByteString))
              @(_ (Hs.Vector Hs.ByteString))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amt_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "final_cltv_delta")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "outgoing_chan_id")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Repeated HsProtobuf.Bytes)
          (HsProtobuf.Single "hop_pubkeys")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "payment_addr")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB BuildRouteRequest where
  toJSONPB (BuildRouteRequest f1 f2 f3 f4 f5) =
    ( HsJSONPB.object
        [ "amt_msat" .= f1,
          "final_cltv_delta" .= f2,
          "outgoing_chan_id" .= f3,
          "hop_pubkeys" .= f4,
          "payment_addr" .= f5
        ]
    )
  toEncodingPB (BuildRouteRequest f1 f2 f3 f4 f5) =
    ( HsJSONPB.pairs
        [ "amt_msat" .= f1,
          "final_cltv_delta" .= f2,
          "outgoing_chan_id" .= f3,
          "hop_pubkeys" .= f4,
          "payment_addr" .= f5
        ]
    )

instance HsJSONPB.FromJSONPB BuildRouteRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "BuildRouteRequest"
        ( \obj ->
            (Hs.pure BuildRouteRequest) <*> obj .: "amt_msat"
              <*> obj .: "final_cltv_delta"
              <*> obj .: "outgoing_chan_id"
              <*> obj .: "hop_pubkeys"
              <*> obj .: "payment_addr"
        )
    )

instance HsJSONPB.ToJSON BuildRouteRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON BuildRouteRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema BuildRouteRequest where
  declareNamedSchema _ =
    do
      let declare_amt_msat = HsJSONPB.declareSchemaRef
      buildRouteRequestAmtMsat <- declare_amt_msat Proxy.Proxy
      let declare_final_cltv_delta = HsJSONPB.declareSchemaRef
      buildRouteRequestFinalCltvDelta <-
        declare_final_cltv_delta
          Proxy.Proxy
      let declare_outgoing_chan_id = HsJSONPB.declareSchemaRef
      buildRouteRequestOutgoingChanId <-
        declare_outgoing_chan_id
          Proxy.Proxy
      let declare_hop_pubkeys = HsJSONPB.declareSchemaRef
      buildRouteRequestHopPubkeys <- declare_hop_pubkeys Proxy.Proxy
      let declare_payment_addr = HsJSONPB.declareSchemaRef
      buildRouteRequestPaymentAddr <- declare_payment_addr Proxy.Proxy
      let _ =
            Hs.pure BuildRouteRequest
              <*> HsJSONPB.asProxy declare_amt_msat
              <*> HsJSONPB.asProxy declare_final_cltv_delta
              <*> HsJSONPB.asProxy declare_outgoing_chan_id
              <*> HsJSONPB.asProxy declare_hop_pubkeys
              <*> HsJSONPB.asProxy declare_payment_addr
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "BuildRouteRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("amt_msat", buildRouteRequestAmtMsat),
                          ( "final_cltv_delta",
                            buildRouteRequestFinalCltvDelta
                          ),
                          ( "outgoing_chan_id",
                            buildRouteRequestOutgoingChanId
                          ),
                          ( "hop_pubkeys",
                            buildRouteRequestHopPubkeys
                          ),
                          ( "payment_addr",
                            buildRouteRequestPaymentAddr
                          )
                        ]
                  }
            }
        )

newtype BuildRouteResponse
  = BuildRouteResponse
      { buildRouteResponseRoute ::
          Hs.Maybe
            LndGrpc.Route
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named BuildRouteResponse where
  nameOf _ = (Hs.fromString "BuildRouteResponse")

instance HsProtobuf.HasDefault BuildRouteResponse

instance HsProtobuf.Message BuildRouteResponse where
  encodeMessage
    _
    BuildRouteResponse
      { buildRouteResponseRoute =
          buildRouteResponseRoute
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Maybe LndGrpc.Route)
                    @(HsProtobuf.Nested LndGrpc.Route)
                    buildRouteResponseRoute
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure BuildRouteResponse)
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.Route))
              @(_ (Hs.Maybe LndGrpc.Route))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              ( HsProtobuf.Named
                  (HsProtobuf.Dots (HsProtobuf.Path ("lnrpc" Hs.:| ["Route"])))
              )
          )
          (HsProtobuf.Single "route")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB BuildRouteResponse where
  toJSONPB (BuildRouteResponse f1) =
    (HsJSONPB.object ["route" .= f1])
  toEncodingPB (BuildRouteResponse f1) =
    (HsJSONPB.pairs ["route" .= f1])

instance HsJSONPB.FromJSONPB BuildRouteResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "BuildRouteResponse"
        (\obj -> (Hs.pure BuildRouteResponse) <*> obj .: "route")
    )

instance HsJSONPB.ToJSON BuildRouteResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON BuildRouteResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema BuildRouteResponse where
  declareNamedSchema _ =
    do
      let declare_route = HsJSONPB.declareSchemaRef
      buildRouteResponseRoute <- declare_route Proxy.Proxy
      let _ =
            Hs.pure BuildRouteResponse
              <*> HsJSONPB.asProxy declare_route
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "BuildRouteResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("route", buildRouteResponseRoute)]
                  }
            }
        )

data SubscribeHtlcEventsRequest = SubscribeHtlcEventsRequest {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SubscribeHtlcEventsRequest where
  nameOf _ = (Hs.fromString "SubscribeHtlcEventsRequest")

instance HsProtobuf.HasDefault SubscribeHtlcEventsRequest

instance HsProtobuf.Message SubscribeHtlcEventsRequest where
  encodeMessage _ SubscribeHtlcEventsRequest {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure SubscribeHtlcEventsRequest)
  dotProto _ = []

instance HsJSONPB.ToJSONPB SubscribeHtlcEventsRequest where
  toJSONPB (SubscribeHtlcEventsRequest) = (HsJSONPB.object [])
  toEncodingPB (SubscribeHtlcEventsRequest) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB SubscribeHtlcEventsRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SubscribeHtlcEventsRequest"
        (\obj -> (Hs.pure SubscribeHtlcEventsRequest))
    )

instance HsJSONPB.ToJSON SubscribeHtlcEventsRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubscribeHtlcEventsRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubscribeHtlcEventsRequest where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SubscribeHtlcEventsRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data HtlcEvent
  = HtlcEvent
      { htlcEventIncomingChannelId :: Hs.Word64,
        htlcEventOutgoingChannelId :: Hs.Word64,
        htlcEventIncomingHtlcId :: Hs.Word64,
        htlcEventOutgoingHtlcId :: Hs.Word64,
        htlcEventTimestampNs :: Hs.Word64,
        htlcEventEventType ::
          HsProtobuf.Enumerated
            RouterGrpc.HtlcEvent_EventType,
        htlcEventEvent :: Hs.Maybe HtlcEventEvent
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named HtlcEvent where
  nameOf _ = (Hs.fromString "HtlcEvent")

instance HsProtobuf.HasDefault HtlcEvent

instance HsProtobuf.Message HtlcEvent where
  encodeMessage
    _
    HtlcEvent
      { htlcEventIncomingChannelId = htlcEventIncomingChannelId,
        htlcEventOutgoingChannelId = htlcEventOutgoingChannelId,
        htlcEventIncomingHtlcId = htlcEventIncomingHtlcId,
        htlcEventOutgoingHtlcId = htlcEventOutgoingHtlcId,
        htlcEventTimestampNs = htlcEventTimestampNs,
        htlcEventEventType = htlcEventEventType,
        htlcEventEvent = htlcEventEvent
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                htlcEventIncomingChannelId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                htlcEventOutgoingChannelId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                htlcEventIncomingHtlcId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                htlcEventOutgoingHtlcId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                htlcEventTimestampNs
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                htlcEventEventType
            ),
            case htlcEventEvent of
              Hs.Nothing -> Hs.mempty
              Hs.Just x ->
                case x of
                  HtlcEventEventForwardEvent y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 7)
                        ( Hs.coerce @(Hs.Maybe RouterGrpc.ForwardEvent)
                            @(HsProtobuf.Nested RouterGrpc.ForwardEvent)
                            (Hs.Just y)
                        )
                    )
                  HtlcEventEventForwardFailEvent y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 8)
                        ( Hs.coerce @(Hs.Maybe RouterGrpc.ForwardFailEvent)
                            @(HsProtobuf.Nested RouterGrpc.ForwardFailEvent)
                            (Hs.Just y)
                        )
                    )
                  HtlcEventEventSettleEvent y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 9)
                        ( Hs.coerce @(Hs.Maybe RouterGrpc.SettleEvent)
                            @(HsProtobuf.Nested RouterGrpc.SettleEvent)
                            (Hs.Just y)
                        )
                    )
                  HtlcEventEventLinkFailEvent y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 10)
                        ( Hs.coerce @(Hs.Maybe RouterGrpc.LinkFailEvent)
                            @(HsProtobuf.Nested RouterGrpc.LinkFailEvent)
                            (Hs.Just y)
                        )
                    )
          ]
      )
  decodeMessage _ =
    (Hs.pure HtlcEvent)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.oneof
              Hs.Nothing
              [ ( (HsProtobuf.FieldNumber 7),
                  (Hs.pure (Hs.fmap HtlcEventEventForwardEvent))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested RouterGrpc.ForwardEvent))
                            @(_ (Hs.Maybe RouterGrpc.ForwardEvent))
                            HsProtobuf.decodeMessageField
                        )
                ),
                ( (HsProtobuf.FieldNumber 8),
                  (Hs.pure (Hs.fmap HtlcEventEventForwardFailEvent))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested RouterGrpc.ForwardFailEvent))
                            @(_ (Hs.Maybe RouterGrpc.ForwardFailEvent))
                            HsProtobuf.decodeMessageField
                        )
                ),
                ( (HsProtobuf.FieldNumber 9),
                  (Hs.pure (Hs.fmap HtlcEventEventSettleEvent))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested RouterGrpc.SettleEvent))
                            @(_ (Hs.Maybe RouterGrpc.SettleEvent))
                            HsProtobuf.decodeMessageField
                        )
                ),
                ( (HsProtobuf.FieldNumber 10),
                  (Hs.pure (Hs.fmap HtlcEventEventLinkFailEvent))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested RouterGrpc.LinkFailEvent))
                            @(_ (Hs.Maybe RouterGrpc.LinkFailEvent))
                            HsProtobuf.decodeMessageField
                        )
                )
              ]
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "incoming_channel_id")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "outgoing_channel_id")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "incoming_htlc_id")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "outgoing_htlc_id")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "timestamp_ns")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "EventType"))
          )
          (HsProtobuf.Single "event_type")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB HtlcEvent where
  toJSONPB (HtlcEvent f1 f2 f3 f4 f5 f6 f7_or_f8_or_f9_or_f10) =
    ( HsJSONPB.object
        [ "incoming_channel_id" .= f1,
          "outgoing_channel_id" .= f2,
          "incoming_htlc_id" .= f3,
          "outgoing_htlc_id" .= f4,
          "timestamp_ns" .= f5,
          "event_type" .= f6,
          ( let encodeEvent =
                  ( case f7_or_f8_or_f9_or_f10 of
                      Hs.Just (HtlcEventEventForwardEvent f7) ->
                        (HsJSONPB.pair "forward_event" f7)
                      Hs.Just (HtlcEventEventForwardFailEvent f8) ->
                        (HsJSONPB.pair "forward_fail_event" f8)
                      Hs.Just (HtlcEventEventSettleEvent f9) ->
                        (HsJSONPB.pair "settle_event" f9)
                      Hs.Just (HtlcEventEventLinkFailEvent f10) ->
                        (HsJSONPB.pair "link_fail_event" f10)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then ("event" .= (HsJSONPB.objectOrNull [encodeEvent] options)) options
                    else encodeEvent options
          )
        ]
    )
  toEncodingPB (HtlcEvent f1 f2 f3 f4 f5 f6 f7_or_f8_or_f9_or_f10) =
    ( HsJSONPB.pairs
        [ "incoming_channel_id" .= f1,
          "outgoing_channel_id" .= f2,
          "incoming_htlc_id" .= f3,
          "outgoing_htlc_id" .= f4,
          "timestamp_ns" .= f5,
          "event_type" .= f6,
          ( let encodeEvent =
                  ( case f7_or_f8_or_f9_or_f10 of
                      Hs.Just (HtlcEventEventForwardEvent f7) ->
                        (HsJSONPB.pair "forward_event" f7)
                      Hs.Just (HtlcEventEventForwardFailEvent f8) ->
                        (HsJSONPB.pair "forward_fail_event" f8)
                      Hs.Just (HtlcEventEventSettleEvent f9) ->
                        (HsJSONPB.pair "settle_event" f9)
                      Hs.Just (HtlcEventEventLinkFailEvent f10) ->
                        (HsJSONPB.pair "link_fail_event" f10)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then ("event" .= (HsJSONPB.pairsOrNull [encodeEvent] options)) options
                    else encodeEvent options
          )
        ]
    )

instance HsJSONPB.FromJSONPB HtlcEvent where
  parseJSONPB =
    ( HsJSONPB.withObject
        "HtlcEvent"
        ( \obj ->
            (Hs.pure HtlcEvent) <*> obj .: "incoming_channel_id"
              <*> obj .: "outgoing_channel_id"
              <*> obj .: "incoming_htlc_id"
              <*> obj .: "outgoing_htlc_id"
              <*> obj .: "timestamp_ns"
              <*> obj .: "event_type"
              <*> ( let parseEvent parseObj =
                          Hs.msum
                            [ Hs.Just Hs.. HtlcEventEventForwardEvent
                                <$> (HsJSONPB.parseField parseObj "forward_event"),
                              Hs.Just Hs.. HtlcEventEventForwardFailEvent
                                <$> (HsJSONPB.parseField parseObj "forward_fail_event"),
                              Hs.Just Hs.. HtlcEventEventSettleEvent
                                <$> (HsJSONPB.parseField parseObj "settle_event"),
                              Hs.Just Hs.. HtlcEventEventLinkFailEvent
                                <$> (HsJSONPB.parseField parseObj "link_fail_event"),
                              Hs.pure Hs.Nothing
                            ]
                     in ((obj .: "event") Hs.>>= (HsJSONPB.withObject "event" parseEvent))
                          <|> (parseEvent obj)
                  )
        )
    )

instance HsJSONPB.ToJSON HtlcEvent where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON HtlcEvent where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema HtlcEvent where
  declareNamedSchema _ =
    do
      let declare_incoming_channel_id = HsJSONPB.declareSchemaRef
      htlcEventIncomingChannelId <-
        declare_incoming_channel_id
          Proxy.Proxy
      let declare_outgoing_channel_id = HsJSONPB.declareSchemaRef
      htlcEventOutgoingChannelId <-
        declare_outgoing_channel_id
          Proxy.Proxy
      let declare_incoming_htlc_id = HsJSONPB.declareSchemaRef
      htlcEventIncomingHtlcId <- declare_incoming_htlc_id Proxy.Proxy
      let declare_outgoing_htlc_id = HsJSONPB.declareSchemaRef
      htlcEventOutgoingHtlcId <- declare_outgoing_htlc_id Proxy.Proxy
      let declare_timestamp_ns = HsJSONPB.declareSchemaRef
      htlcEventTimestampNs <- declare_timestamp_ns Proxy.Proxy
      let declare_event_type = HsJSONPB.declareSchemaRef
      htlcEventEventType <- declare_event_type Proxy.Proxy
      let declare_event = HsJSONPB.declareSchemaRef
      htlcEventEvent <- declare_event Proxy.Proxy
      let _ =
            Hs.pure HtlcEvent
              <*> HsJSONPB.asProxy declare_incoming_channel_id
              <*> HsJSONPB.asProxy declare_outgoing_channel_id
              <*> HsJSONPB.asProxy declare_incoming_htlc_id
              <*> HsJSONPB.asProxy declare_outgoing_htlc_id
              <*> HsJSONPB.asProxy declare_timestamp_ns
              <*> HsJSONPB.asProxy declare_event_type
              <*> HsJSONPB.asProxy declare_event
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "HtlcEvent",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "incoming_channel_id",
                            htlcEventIncomingChannelId
                          ),
                          ( "outgoing_channel_id",
                            htlcEventOutgoingChannelId
                          ),
                          ( "incoming_htlc_id",
                            htlcEventIncomingHtlcId
                          ),
                          ( "outgoing_htlc_id",
                            htlcEventOutgoingHtlcId
                          ),
                          ("timestamp_ns", htlcEventTimestampNs),
                          ("event_type", htlcEventEventType),
                          ("event", htlcEventEvent)
                        ]
                  }
            }
        )

data HtlcEvent_EventType
  = HtlcEvent_EventTypeUNKNOWN
  | HtlcEvent_EventTypeSEND
  | HtlcEvent_EventTypeRECEIVE
  | HtlcEvent_EventTypeFORWARD
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named HtlcEvent_EventType where
  nameOf _ = (Hs.fromString "HtlcEvent_EventType")

instance HsProtobuf.HasDefault HtlcEvent_EventType

instance Hs.Bounded HtlcEvent_EventType where
  minBound = HtlcEvent_EventTypeUNKNOWN
  maxBound = HtlcEvent_EventTypeFORWARD

instance Hs.Ord HtlcEvent_EventType where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum HtlcEvent_EventType where
  toProtoEnumMay 0 = Hs.Just HtlcEvent_EventTypeUNKNOWN
  toProtoEnumMay 1 = Hs.Just HtlcEvent_EventTypeSEND
  toProtoEnumMay 2 = Hs.Just HtlcEvent_EventTypeRECEIVE
  toProtoEnumMay 3 = Hs.Just HtlcEvent_EventTypeFORWARD
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (HtlcEvent_EventTypeUNKNOWN) = 0
  fromProtoEnum (HtlcEvent_EventTypeSEND) = 1
  fromProtoEnum (HtlcEvent_EventTypeRECEIVE) = 2
  fromProtoEnum (HtlcEvent_EventTypeFORWARD) = 3

instance HsJSONPB.ToJSONPB HtlcEvent_EventType where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB HtlcEvent_EventType where
  parseJSONPB (HsJSONPB.String "UNKNOWN") =
    Hs.pure HtlcEvent_EventTypeUNKNOWN
  parseJSONPB (HsJSONPB.String "SEND") =
    Hs.pure HtlcEvent_EventTypeSEND
  parseJSONPB (HsJSONPB.String "RECEIVE") =
    Hs.pure HtlcEvent_EventTypeRECEIVE
  parseJSONPB (HsJSONPB.String "FORWARD") =
    Hs.pure HtlcEvent_EventTypeFORWARD
  parseJSONPB v = (HsJSONPB.typeMismatch "HtlcEvent_EventType" v)

instance HsJSONPB.ToJSON HtlcEvent_EventType where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON HtlcEvent_EventType where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite HtlcEvent_EventType

data HtlcEventEvent
  = HtlcEventEventForwardEvent RouterGrpc.ForwardEvent
  | HtlcEventEventForwardFailEvent RouterGrpc.ForwardFailEvent
  | HtlcEventEventSettleEvent RouterGrpc.SettleEvent
  | HtlcEventEventLinkFailEvent RouterGrpc.LinkFailEvent
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named HtlcEventEvent where
  nameOf _ = (Hs.fromString "HtlcEventEvent")

instance HsJSONPB.ToSchema HtlcEventEvent where
  declareNamedSchema _ =
    do
      let declare_forward_event = HsJSONPB.declareSchemaRef
      htlcEventEventForwardEvent <- declare_forward_event Proxy.Proxy
      let _ =
            Hs.pure HtlcEventEventForwardEvent
              <*> HsJSONPB.asProxy declare_forward_event
      let declare_forward_fail_event = HsJSONPB.declareSchemaRef
      htlcEventEventForwardFailEvent <-
        declare_forward_fail_event
          Proxy.Proxy
      let _ =
            Hs.pure HtlcEventEventForwardFailEvent
              <*> HsJSONPB.asProxy declare_forward_fail_event
      let declare_settle_event = HsJSONPB.declareSchemaRef
      htlcEventEventSettleEvent <- declare_settle_event Proxy.Proxy
      let _ =
            Hs.pure HtlcEventEventSettleEvent
              <*> HsJSONPB.asProxy declare_settle_event
      let declare_link_fail_event = HsJSONPB.declareSchemaRef
      htlcEventEventLinkFailEvent <- declare_link_fail_event Proxy.Proxy
      let _ =
            Hs.pure HtlcEventEventLinkFailEvent
              <*> HsJSONPB.asProxy declare_link_fail_event
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "HtlcEventEvent",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "forward_event",
                            htlcEventEventForwardEvent
                          ),
                          ( "forward_fail_event",
                            htlcEventEventForwardFailEvent
                          ),
                          ("settle_event", htlcEventEventSettleEvent),
                          ( "link_fail_event",
                            htlcEventEventLinkFailEvent
                          )
                        ],
                    HsJSONPB._schemaMinProperties = Hs.Just 1,
                    HsJSONPB._schemaMaxProperties = Hs.Just 1
                  }
            }
        )

data HtlcInfo
  = HtlcInfo
      { htlcInfoIncomingTimelock :: Hs.Word32,
        htlcInfoOutgoingTimelock :: Hs.Word32,
        htlcInfoIncomingAmtMsat :: Hs.Word64,
        htlcInfoOutgoingAmtMsat :: Hs.Word64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named HtlcInfo where
  nameOf _ = (Hs.fromString "HtlcInfo")

instance HsProtobuf.HasDefault HtlcInfo

instance HsProtobuf.Message HtlcInfo where
  encodeMessage
    _
    HtlcInfo
      { htlcInfoIncomingTimelock = htlcInfoIncomingTimelock,
        htlcInfoOutgoingTimelock = htlcInfoOutgoingTimelock,
        htlcInfoIncomingAmtMsat = htlcInfoIncomingAmtMsat,
        htlcInfoOutgoingAmtMsat = htlcInfoOutgoingAmtMsat
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                htlcInfoIncomingTimelock
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                htlcInfoOutgoingTimelock
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                htlcInfoIncomingAmtMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                htlcInfoOutgoingAmtMsat
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure HtlcInfo)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "incoming_timelock")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "outgoing_timelock")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "incoming_amt_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "outgoing_amt_msat")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB HtlcInfo where
  toJSONPB (HtlcInfo f1 f2 f3 f4) =
    ( HsJSONPB.object
        [ "incoming_timelock" .= f1,
          "outgoing_timelock" .= f2,
          "incoming_amt_msat" .= f3,
          "outgoing_amt_msat" .= f4
        ]
    )
  toEncodingPB (HtlcInfo f1 f2 f3 f4) =
    ( HsJSONPB.pairs
        [ "incoming_timelock" .= f1,
          "outgoing_timelock" .= f2,
          "incoming_amt_msat" .= f3,
          "outgoing_amt_msat" .= f4
        ]
    )

instance HsJSONPB.FromJSONPB HtlcInfo where
  parseJSONPB =
    ( HsJSONPB.withObject
        "HtlcInfo"
        ( \obj ->
            (Hs.pure HtlcInfo) <*> obj .: "incoming_timelock"
              <*> obj .: "outgoing_timelock"
              <*> obj .: "incoming_amt_msat"
              <*> obj .: "outgoing_amt_msat"
        )
    )

instance HsJSONPB.ToJSON HtlcInfo where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON HtlcInfo where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema HtlcInfo where
  declareNamedSchema _ =
    do
      let declare_incoming_timelock = HsJSONPB.declareSchemaRef
      htlcInfoIncomingTimelock <- declare_incoming_timelock Proxy.Proxy
      let declare_outgoing_timelock = HsJSONPB.declareSchemaRef
      htlcInfoOutgoingTimelock <- declare_outgoing_timelock Proxy.Proxy
      let declare_incoming_amt_msat = HsJSONPB.declareSchemaRef
      htlcInfoIncomingAmtMsat <- declare_incoming_amt_msat Proxy.Proxy
      let declare_outgoing_amt_msat = HsJSONPB.declareSchemaRef
      htlcInfoOutgoingAmtMsat <- declare_outgoing_amt_msat Proxy.Proxy
      let _ =
            Hs.pure HtlcInfo
              <*> HsJSONPB.asProxy declare_incoming_timelock
              <*> HsJSONPB.asProxy declare_outgoing_timelock
              <*> HsJSONPB.asProxy declare_incoming_amt_msat
              <*> HsJSONPB.asProxy declare_outgoing_amt_msat
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "HtlcInfo",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "incoming_timelock",
                            htlcInfoIncomingTimelock
                          ),
                          ( "outgoing_timelock",
                            htlcInfoOutgoingTimelock
                          ),
                          ( "incoming_amt_msat",
                            htlcInfoIncomingAmtMsat
                          ),
                          ( "outgoing_amt_msat",
                            htlcInfoOutgoingAmtMsat
                          )
                        ]
                  }
            }
        )

data ForwardEvent
  = ForwardEvent
      { forwardEventInfo ::
          Hs.Maybe
            RouterGrpc.HtlcInfo,
        forwardEventPreimageHash :: Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ForwardEvent where
  nameOf _ = (Hs.fromString "ForwardEvent")

instance HsProtobuf.HasDefault ForwardEvent

instance HsProtobuf.Message ForwardEvent where
  encodeMessage
    _
    ForwardEvent
      { forwardEventInfo = forwardEventInfo,
        forwardEventPreimageHash = forwardEventPreimageHash
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Maybe RouterGrpc.HtlcInfo)
                    @(HsProtobuf.Nested RouterGrpc.HtlcInfo)
                    forwardEventInfo
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                forwardEventPreimageHash
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ForwardEvent)
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested RouterGrpc.HtlcInfo))
              @(_ (Hs.Maybe RouterGrpc.HtlcInfo))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "HtlcInfo")))
          (HsProtobuf.Single "info")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "preimage_hash")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ForwardEvent where
  toJSONPB (ForwardEvent f1 f2) =
    (HsJSONPB.object ["info" .= f1, "preimage_hash" .= f2])
  toEncodingPB (ForwardEvent f1 f2) =
    (HsJSONPB.pairs ["info" .= f1, "preimage_hash" .= f2])

instance HsJSONPB.FromJSONPB ForwardEvent where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ForwardEvent"
        ( \obj ->
            (Hs.pure ForwardEvent) <*> obj .: "info"
              <*> obj .: "preimage_hash"
        )
    )

instance HsJSONPB.ToJSON ForwardEvent where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ForwardEvent where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ForwardEvent where
  declareNamedSchema _ =
    do
      let declare_info = HsJSONPB.declareSchemaRef
      forwardEventInfo <- declare_info Proxy.Proxy
      let declare_preimage_hash = HsJSONPB.declareSchemaRef
      forwardEventPreimageHash <- declare_preimage_hash Proxy.Proxy
      let _ =
            Hs.pure ForwardEvent <*> HsJSONPB.asProxy declare_info
              <*> HsJSONPB.asProxy declare_preimage_hash
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ForwardEvent",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("info", forwardEventInfo),
                          ( "preimage_hash",
                            forwardEventPreimageHash
                          )
                        ]
                  }
            }
        )

data ForwardFailEvent = ForwardFailEvent {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ForwardFailEvent where
  nameOf _ = (Hs.fromString "ForwardFailEvent")

instance HsProtobuf.HasDefault ForwardFailEvent

instance HsProtobuf.Message ForwardFailEvent where
  encodeMessage _ ForwardFailEvent {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure ForwardFailEvent)
  dotProto _ = []

instance HsJSONPB.ToJSONPB ForwardFailEvent where
  toJSONPB (ForwardFailEvent) = (HsJSONPB.object [])
  toEncodingPB (ForwardFailEvent) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB ForwardFailEvent where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ForwardFailEvent"
        (\obj -> (Hs.pure ForwardFailEvent))
    )

instance HsJSONPB.ToJSON ForwardFailEvent where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ForwardFailEvent where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ForwardFailEvent where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ForwardFailEvent",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data SettleEvent
  = SettleEvent
      { settleEventIncomingAmtMsat ::
          Hs.Word64,
        settleEventPreimageHash :: Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SettleEvent where
  nameOf _ = (Hs.fromString "SettleEvent")

instance HsProtobuf.HasDefault SettleEvent

instance HsProtobuf.Message SettleEvent where
  encodeMessage
    _
    SettleEvent
      { settleEventIncomingAmtMsat =
          settleEventIncomingAmtMsat,
        settleEventPreimageHash = settleEventPreimageHash
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                settleEventIncomingAmtMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                settleEventPreimageHash
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SettleEvent)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "incoming_amt_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "preimage_hash")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SettleEvent where
  toJSONPB (SettleEvent f1 f2) =
    ( HsJSONPB.object
        ["incoming_amt_msat" .= f1, "preimage_hash" .= f2]
    )
  toEncodingPB (SettleEvent f1 f2) =
    ( HsJSONPB.pairs
        ["incoming_amt_msat" .= f1, "preimage_hash" .= f2]
    )

instance HsJSONPB.FromJSONPB SettleEvent where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SettleEvent"
        ( \obj ->
            (Hs.pure SettleEvent) <*> obj .: "incoming_amt_msat"
              <*> obj .: "preimage_hash"
        )
    )

instance HsJSONPB.ToJSON SettleEvent where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SettleEvent where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SettleEvent where
  declareNamedSchema _ =
    do
      let declare_incoming_amt_msat = HsJSONPB.declareSchemaRef
      settleEventIncomingAmtMsat <- declare_incoming_amt_msat Proxy.Proxy
      let declare_preimage_hash = HsJSONPB.declareSchemaRef
      settleEventPreimageHash <- declare_preimage_hash Proxy.Proxy
      let _ =
            Hs.pure SettleEvent
              <*> HsJSONPB.asProxy declare_incoming_amt_msat
              <*> HsJSONPB.asProxy declare_preimage_hash
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SettleEvent",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "incoming_amt_msat",
                            settleEventIncomingAmtMsat
                          ),
                          ( "preimage_hash",
                            settleEventPreimageHash
                          )
                        ]
                  }
            }
        )

data LinkFailEvent
  = LinkFailEvent
      { linkFailEventInfo ::
          Hs.Maybe
            RouterGrpc.HtlcInfo,
        linkFailEventWireFailure ::
          HsProtobuf.Enumerated
            LndGrpc.Failure_FailureCode,
        linkFailEventFailureDetail ::
          HsProtobuf.Enumerated
            RouterGrpc.FailureDetail,
        linkFailEventFailureString :: Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named LinkFailEvent where
  nameOf _ = (Hs.fromString "LinkFailEvent")

instance HsProtobuf.HasDefault LinkFailEvent

instance HsProtobuf.Message LinkFailEvent where
  encodeMessage
    _
    LinkFailEvent
      { linkFailEventInfo = linkFailEventInfo,
        linkFailEventWireFailure = linkFailEventWireFailure,
        linkFailEventFailureDetail = linkFailEventFailureDetail,
        linkFailEventFailureString = linkFailEventFailureString
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Maybe RouterGrpc.HtlcInfo)
                    @(HsProtobuf.Nested RouterGrpc.HtlcInfo)
                    linkFailEventInfo
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                linkFailEventWireFailure
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                linkFailEventFailureDetail
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                linkFailEventFailureString
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure LinkFailEvent)
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested RouterGrpc.HtlcInfo))
              @(_ (Hs.Maybe RouterGrpc.HtlcInfo))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "HtlcInfo")))
          (HsProtobuf.Single "info")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          ( HsProtobuf.Prim
              ( HsProtobuf.Named
                  ( HsProtobuf.Dots
                      (HsProtobuf.Path ("lnrpc" Hs.:| ["Failure", "FailureCode"]))
                  )
              )
          )
          (HsProtobuf.Single "wire_failure")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "FailureDetail"))
          )
          (HsProtobuf.Single "failure_detail")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "failure_string")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB LinkFailEvent where
  toJSONPB (LinkFailEvent f1 f2 f3 f4) =
    ( HsJSONPB.object
        [ "info" .= f1,
          "wire_failure" .= f2,
          "failure_detail" .= f3,
          "failure_string" .= f4
        ]
    )
  toEncodingPB (LinkFailEvent f1 f2 f3 f4) =
    ( HsJSONPB.pairs
        [ "info" .= f1,
          "wire_failure" .= f2,
          "failure_detail" .= f3,
          "failure_string" .= f4
        ]
    )

instance HsJSONPB.FromJSONPB LinkFailEvent where
  parseJSONPB =
    ( HsJSONPB.withObject
        "LinkFailEvent"
        ( \obj ->
            (Hs.pure LinkFailEvent) <*> obj .: "info" <*> obj .: "wire_failure"
              <*> obj .: "failure_detail"
              <*> obj .: "failure_string"
        )
    )

instance HsJSONPB.ToJSON LinkFailEvent where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON LinkFailEvent where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema LinkFailEvent where
  declareNamedSchema _ =
    do
      let declare_info = HsJSONPB.declareSchemaRef
      linkFailEventInfo <- declare_info Proxy.Proxy
      let declare_wire_failure = HsJSONPB.declareSchemaRef
      linkFailEventWireFailure <- declare_wire_failure Proxy.Proxy
      let declare_failure_detail = HsJSONPB.declareSchemaRef
      linkFailEventFailureDetail <- declare_failure_detail Proxy.Proxy
      let declare_failure_string = HsJSONPB.declareSchemaRef
      linkFailEventFailureString <- declare_failure_string Proxy.Proxy
      let _ =
            Hs.pure LinkFailEvent <*> HsJSONPB.asProxy declare_info
              <*> HsJSONPB.asProxy declare_wire_failure
              <*> HsJSONPB.asProxy declare_failure_detail
              <*> HsJSONPB.asProxy declare_failure_string
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "LinkFailEvent",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("info", linkFailEventInfo),
                          ("wire_failure", linkFailEventWireFailure),
                          ( "failure_detail",
                            linkFailEventFailureDetail
                          ),
                          ( "failure_string",
                            linkFailEventFailureString
                          )
                        ]
                  }
            }
        )

data FailureDetail
  = FailureDetailUNKNOWN
  | FailureDetailNO_DETAIL
  | FailureDetailONION_DECODE
  | FailureDetailLINK_NOT_ELIGIBLE
  | FailureDetailON_CHAIN_TIMEOUT
  | FailureDetailHTLC_EXCEEDS_MAX
  | FailureDetailINSUFFICIENT_BALANCE
  | FailureDetailINCOMPLETE_FORWARD
  | FailureDetailHTLC_ADD_FAILED
  | FailureDetailFORWARDS_DISABLED
  | FailureDetailINVOICE_CANCELED
  | FailureDetailINVOICE_UNDERPAID
  | FailureDetailINVOICE_EXPIRY_TOO_SOON
  | FailureDetailINVOICE_NOT_OPEN
  | FailureDetailMPP_INVOICE_TIMEOUT
  | FailureDetailADDRESS_MISMATCH
  | FailureDetailSET_TOTAL_MISMATCH
  | FailureDetailSET_TOTAL_TOO_LOW
  | FailureDetailSET_OVERPAID
  | FailureDetailUNKNOWN_INVOICE
  | FailureDetailINVALID_KEYSEND
  | FailureDetailMPP_IN_PROGRESS
  | FailureDetailCIRCULAR_ROUTE
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FailureDetail where
  nameOf _ = (Hs.fromString "FailureDetail")

instance HsProtobuf.HasDefault FailureDetail

instance Hs.Bounded FailureDetail where
  minBound = FailureDetailUNKNOWN
  maxBound = FailureDetailCIRCULAR_ROUTE

instance Hs.Ord FailureDetail where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum FailureDetail where
  toProtoEnumMay 0 = Hs.Just FailureDetailUNKNOWN
  toProtoEnumMay 1 = Hs.Just FailureDetailNO_DETAIL
  toProtoEnumMay 2 = Hs.Just FailureDetailONION_DECODE
  toProtoEnumMay 3 = Hs.Just FailureDetailLINK_NOT_ELIGIBLE
  toProtoEnumMay 4 = Hs.Just FailureDetailON_CHAIN_TIMEOUT
  toProtoEnumMay 5 = Hs.Just FailureDetailHTLC_EXCEEDS_MAX
  toProtoEnumMay 6 = Hs.Just FailureDetailINSUFFICIENT_BALANCE
  toProtoEnumMay 7 = Hs.Just FailureDetailINCOMPLETE_FORWARD
  toProtoEnumMay 8 = Hs.Just FailureDetailHTLC_ADD_FAILED
  toProtoEnumMay 9 = Hs.Just FailureDetailFORWARDS_DISABLED
  toProtoEnumMay 10 = Hs.Just FailureDetailINVOICE_CANCELED
  toProtoEnumMay 11 = Hs.Just FailureDetailINVOICE_UNDERPAID
  toProtoEnumMay 12 = Hs.Just FailureDetailINVOICE_EXPIRY_TOO_SOON
  toProtoEnumMay 13 = Hs.Just FailureDetailINVOICE_NOT_OPEN
  toProtoEnumMay 14 = Hs.Just FailureDetailMPP_INVOICE_TIMEOUT
  toProtoEnumMay 15 = Hs.Just FailureDetailADDRESS_MISMATCH
  toProtoEnumMay 16 = Hs.Just FailureDetailSET_TOTAL_MISMATCH
  toProtoEnumMay 17 = Hs.Just FailureDetailSET_TOTAL_TOO_LOW
  toProtoEnumMay 18 = Hs.Just FailureDetailSET_OVERPAID
  toProtoEnumMay 19 = Hs.Just FailureDetailUNKNOWN_INVOICE
  toProtoEnumMay 20 = Hs.Just FailureDetailINVALID_KEYSEND
  toProtoEnumMay 21 = Hs.Just FailureDetailMPP_IN_PROGRESS
  toProtoEnumMay 22 = Hs.Just FailureDetailCIRCULAR_ROUTE
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (FailureDetailUNKNOWN) = 0
  fromProtoEnum (FailureDetailNO_DETAIL) = 1
  fromProtoEnum (FailureDetailONION_DECODE) = 2
  fromProtoEnum (FailureDetailLINK_NOT_ELIGIBLE) = 3
  fromProtoEnum (FailureDetailON_CHAIN_TIMEOUT) = 4
  fromProtoEnum (FailureDetailHTLC_EXCEEDS_MAX) = 5
  fromProtoEnum (FailureDetailINSUFFICIENT_BALANCE) = 6
  fromProtoEnum (FailureDetailINCOMPLETE_FORWARD) = 7
  fromProtoEnum (FailureDetailHTLC_ADD_FAILED) = 8
  fromProtoEnum (FailureDetailFORWARDS_DISABLED) = 9
  fromProtoEnum (FailureDetailINVOICE_CANCELED) = 10
  fromProtoEnum (FailureDetailINVOICE_UNDERPAID) = 11
  fromProtoEnum (FailureDetailINVOICE_EXPIRY_TOO_SOON) = 12
  fromProtoEnum (FailureDetailINVOICE_NOT_OPEN) = 13
  fromProtoEnum (FailureDetailMPP_INVOICE_TIMEOUT) = 14
  fromProtoEnum (FailureDetailADDRESS_MISMATCH) = 15
  fromProtoEnum (FailureDetailSET_TOTAL_MISMATCH) = 16
  fromProtoEnum (FailureDetailSET_TOTAL_TOO_LOW) = 17
  fromProtoEnum (FailureDetailSET_OVERPAID) = 18
  fromProtoEnum (FailureDetailUNKNOWN_INVOICE) = 19
  fromProtoEnum (FailureDetailINVALID_KEYSEND) = 20
  fromProtoEnum (FailureDetailMPP_IN_PROGRESS) = 21
  fromProtoEnum (FailureDetailCIRCULAR_ROUTE) = 22

instance HsJSONPB.ToJSONPB FailureDetail where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB FailureDetail where
  parseJSONPB (HsJSONPB.String "UNKNOWN") =
    Hs.pure FailureDetailUNKNOWN
  parseJSONPB (HsJSONPB.String "NO_DETAIL") =
    Hs.pure FailureDetailNO_DETAIL
  parseJSONPB (HsJSONPB.String "ONION_DECODE") =
    Hs.pure FailureDetailONION_DECODE
  parseJSONPB (HsJSONPB.String "LINK_NOT_ELIGIBLE") =
    Hs.pure FailureDetailLINK_NOT_ELIGIBLE
  parseJSONPB (HsJSONPB.String "ON_CHAIN_TIMEOUT") =
    Hs.pure FailureDetailON_CHAIN_TIMEOUT
  parseJSONPB (HsJSONPB.String "HTLC_EXCEEDS_MAX") =
    Hs.pure FailureDetailHTLC_EXCEEDS_MAX
  parseJSONPB (HsJSONPB.String "INSUFFICIENT_BALANCE") =
    Hs.pure FailureDetailINSUFFICIENT_BALANCE
  parseJSONPB (HsJSONPB.String "INCOMPLETE_FORWARD") =
    Hs.pure FailureDetailINCOMPLETE_FORWARD
  parseJSONPB (HsJSONPB.String "HTLC_ADD_FAILED") =
    Hs.pure FailureDetailHTLC_ADD_FAILED
  parseJSONPB (HsJSONPB.String "FORWARDS_DISABLED") =
    Hs.pure FailureDetailFORWARDS_DISABLED
  parseJSONPB (HsJSONPB.String "INVOICE_CANCELED") =
    Hs.pure FailureDetailINVOICE_CANCELED
  parseJSONPB (HsJSONPB.String "INVOICE_UNDERPAID") =
    Hs.pure FailureDetailINVOICE_UNDERPAID
  parseJSONPB (HsJSONPB.String "INVOICE_EXPIRY_TOO_SOON") =
    Hs.pure FailureDetailINVOICE_EXPIRY_TOO_SOON
  parseJSONPB (HsJSONPB.String "INVOICE_NOT_OPEN") =
    Hs.pure FailureDetailINVOICE_NOT_OPEN
  parseJSONPB (HsJSONPB.String "MPP_INVOICE_TIMEOUT") =
    Hs.pure FailureDetailMPP_INVOICE_TIMEOUT
  parseJSONPB (HsJSONPB.String "ADDRESS_MISMATCH") =
    Hs.pure FailureDetailADDRESS_MISMATCH
  parseJSONPB (HsJSONPB.String "SET_TOTAL_MISMATCH") =
    Hs.pure FailureDetailSET_TOTAL_MISMATCH
  parseJSONPB (HsJSONPB.String "SET_TOTAL_TOO_LOW") =
    Hs.pure FailureDetailSET_TOTAL_TOO_LOW
  parseJSONPB (HsJSONPB.String "SET_OVERPAID") =
    Hs.pure FailureDetailSET_OVERPAID
  parseJSONPB (HsJSONPB.String "UNKNOWN_INVOICE") =
    Hs.pure FailureDetailUNKNOWN_INVOICE
  parseJSONPB (HsJSONPB.String "INVALID_KEYSEND") =
    Hs.pure FailureDetailINVALID_KEYSEND
  parseJSONPB (HsJSONPB.String "MPP_IN_PROGRESS") =
    Hs.pure FailureDetailMPP_IN_PROGRESS
  parseJSONPB (HsJSONPB.String "CIRCULAR_ROUTE") =
    Hs.pure FailureDetailCIRCULAR_ROUTE
  parseJSONPB v = (HsJSONPB.typeMismatch "FailureDetail" v)

instance HsJSONPB.ToJSON FailureDetail where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON FailureDetail where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite FailureDetail

data PaymentState
  = PaymentStateIN_FLIGHT
  | PaymentStateSUCCEEDED
  | PaymentStateFAILED_TIMEOUT
  | PaymentStateFAILED_NO_ROUTE
  | PaymentStateFAILED_ERROR
  | PaymentStateFAILED_INCORRECT_PAYMENT_DETAILS
  | PaymentStateFAILED_INSUFFICIENT_BALANCE
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PaymentState where
  nameOf _ = (Hs.fromString "PaymentState")

instance HsProtobuf.HasDefault PaymentState

instance Hs.Bounded PaymentState where
  minBound = PaymentStateIN_FLIGHT
  maxBound = PaymentStateFAILED_INSUFFICIENT_BALANCE

instance Hs.Ord PaymentState where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum PaymentState where
  toProtoEnumMay 0 = Hs.Just PaymentStateIN_FLIGHT
  toProtoEnumMay 1 = Hs.Just PaymentStateSUCCEEDED
  toProtoEnumMay 2 = Hs.Just PaymentStateFAILED_TIMEOUT
  toProtoEnumMay 3 = Hs.Just PaymentStateFAILED_NO_ROUTE
  toProtoEnumMay 4 = Hs.Just PaymentStateFAILED_ERROR
  toProtoEnumMay 5 =
    Hs.Just PaymentStateFAILED_INCORRECT_PAYMENT_DETAILS
  toProtoEnumMay 6 = Hs.Just PaymentStateFAILED_INSUFFICIENT_BALANCE
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (PaymentStateIN_FLIGHT) = 0
  fromProtoEnum (PaymentStateSUCCEEDED) = 1
  fromProtoEnum (PaymentStateFAILED_TIMEOUT) = 2
  fromProtoEnum (PaymentStateFAILED_NO_ROUTE) = 3
  fromProtoEnum (PaymentStateFAILED_ERROR) = 4
  fromProtoEnum (PaymentStateFAILED_INCORRECT_PAYMENT_DETAILS) = 5
  fromProtoEnum (PaymentStateFAILED_INSUFFICIENT_BALANCE) = 6

instance HsJSONPB.ToJSONPB PaymentState where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB PaymentState where
  parseJSONPB (HsJSONPB.String "IN_FLIGHT") =
    Hs.pure PaymentStateIN_FLIGHT
  parseJSONPB (HsJSONPB.String "SUCCEEDED") =
    Hs.pure PaymentStateSUCCEEDED
  parseJSONPB (HsJSONPB.String "FAILED_TIMEOUT") =
    Hs.pure PaymentStateFAILED_TIMEOUT
  parseJSONPB (HsJSONPB.String "FAILED_NO_ROUTE") =
    Hs.pure PaymentStateFAILED_NO_ROUTE
  parseJSONPB (HsJSONPB.String "FAILED_ERROR") =
    Hs.pure PaymentStateFAILED_ERROR
  parseJSONPB (HsJSONPB.String "FAILED_INCORRECT_PAYMENT_DETAILS") =
    Hs.pure PaymentStateFAILED_INCORRECT_PAYMENT_DETAILS
  parseJSONPB (HsJSONPB.String "FAILED_INSUFFICIENT_BALANCE") =
    Hs.pure PaymentStateFAILED_INSUFFICIENT_BALANCE
  parseJSONPB v = (HsJSONPB.typeMismatch "PaymentState" v)

instance HsJSONPB.ToJSON PaymentState where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PaymentState where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite PaymentState

data PaymentStatus
  = PaymentStatus
      { paymentStatusState ::
          HsProtobuf.Enumerated
            RouterGrpc.PaymentState,
        paymentStatusPreimage :: Hs.ByteString,
        paymentStatusHtlcs :: Hs.Vector LndGrpc.HTLCAttempt
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PaymentStatus where
  nameOf _ = (Hs.fromString "PaymentStatus")

instance HsProtobuf.HasDefault PaymentStatus

instance HsProtobuf.Message PaymentStatus where
  encodeMessage
    _
    PaymentStatus
      { paymentStatusState = paymentStatusState,
        paymentStatusPreimage = paymentStatusPreimage,
        paymentStatusHtlcs = paymentStatusHtlcs
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                paymentStatusState
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                paymentStatusPreimage
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                ( Hs.coerce @(Hs.Vector LndGrpc.HTLCAttempt)
                    @(HsProtobuf.NestedVec LndGrpc.HTLCAttempt)
                    paymentStatusHtlcs
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PaymentStatus)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.HTLCAttempt))
              @(_ (Hs.Vector LndGrpc.HTLCAttempt))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "PaymentState"))
          )
          (HsProtobuf.Single "state")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "preimage")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          ( HsProtobuf.Repeated
              ( HsProtobuf.Named
                  ( HsProtobuf.Dots
                      (HsProtobuf.Path ("lnrpc" Hs.:| ["HTLCAttempt"]))
                  )
              )
          )
          (HsProtobuf.Single "htlcs")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB PaymentStatus where
  toJSONPB (PaymentStatus f1 f2 f4) =
    ( HsJSONPB.object
        ["state" .= f1, "preimage" .= f2, "htlcs" .= f4]
    )
  toEncodingPB (PaymentStatus f1 f2 f4) =
    (HsJSONPB.pairs ["state" .= f1, "preimage" .= f2, "htlcs" .= f4])

instance HsJSONPB.FromJSONPB PaymentStatus where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PaymentStatus"
        ( \obj ->
            (Hs.pure PaymentStatus) <*> obj .: "state" <*> obj .: "preimage"
              <*> obj
              .: "htlcs"
        )
    )

instance HsJSONPB.ToJSON PaymentStatus where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PaymentStatus where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PaymentStatus where
  declareNamedSchema _ =
    do
      let declare_state = HsJSONPB.declareSchemaRef
      paymentStatusState <- declare_state Proxy.Proxy
      let declare_preimage = HsJSONPB.declareSchemaRef
      paymentStatusPreimage <- declare_preimage Proxy.Proxy
      let declare_htlcs = HsJSONPB.declareSchemaRef
      paymentStatusHtlcs <- declare_htlcs Proxy.Proxy
      let _ =
            Hs.pure PaymentStatus <*> HsJSONPB.asProxy declare_state
              <*> HsJSONPB.asProxy declare_preimage
              <*> HsJSONPB.asProxy declare_htlcs
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PaymentStatus",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("state", paymentStatusState),
                          ("preimage", paymentStatusPreimage),
                          ("htlcs", paymentStatusHtlcs)
                        ]
                  }
            }
        )

data CircuitKey
  = CircuitKey
      { circuitKeyChanId :: Hs.Word64,
        circuitKeyHtlcId :: Hs.Word64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named CircuitKey where
  nameOf _ = (Hs.fromString "CircuitKey")

instance HsProtobuf.HasDefault CircuitKey

instance HsProtobuf.Message CircuitKey where
  encodeMessage
    _
    CircuitKey
      { circuitKeyChanId = circuitKeyChanId,
        circuitKeyHtlcId = circuitKeyHtlcId
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                circuitKeyChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                circuitKeyHtlcId
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure CircuitKey)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "chan_id")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "htlc_id")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB CircuitKey where
  toJSONPB (CircuitKey f1 f2) =
    (HsJSONPB.object ["chan_id" .= f1, "htlc_id" .= f2])
  toEncodingPB (CircuitKey f1 f2) =
    (HsJSONPB.pairs ["chan_id" .= f1, "htlc_id" .= f2])

instance HsJSONPB.FromJSONPB CircuitKey where
  parseJSONPB =
    ( HsJSONPB.withObject
        "CircuitKey"
        ( \obj ->
            (Hs.pure CircuitKey) <*> obj .: "chan_id" <*> obj .: "htlc_id"
        )
    )

instance HsJSONPB.ToJSON CircuitKey where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON CircuitKey where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema CircuitKey where
  declareNamedSchema _ =
    do
      let declare_chan_id = HsJSONPB.declareSchemaRef
      circuitKeyChanId <- declare_chan_id Proxy.Proxy
      let declare_htlc_id = HsJSONPB.declareSchemaRef
      circuitKeyHtlcId <- declare_htlc_id Proxy.Proxy
      let _ =
            Hs.pure CircuitKey <*> HsJSONPB.asProxy declare_chan_id
              <*> HsJSONPB.asProxy declare_htlc_id
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "CircuitKey",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("chan_id", circuitKeyChanId),
                          ("htlc_id", circuitKeyHtlcId)
                        ]
                  }
            }
        )

data ForwardHtlcInterceptRequest
  = ForwardHtlcInterceptRequest
      { forwardHtlcInterceptRequestIncomingCircuitKey ::
          Hs.Maybe
            RouterGrpc.CircuitKey,
        forwardHtlcInterceptRequestIncomingAmountMsat ::
          Hs.Word64,
        forwardHtlcInterceptRequestIncomingExpiry ::
          Hs.Word32,
        forwardHtlcInterceptRequestPaymentHash ::
          Hs.ByteString,
        forwardHtlcInterceptRequestOutgoingRequestedChanId ::
          Hs.Word64,
        forwardHtlcInterceptRequestOutgoingAmountMsat ::
          Hs.Word64,
        forwardHtlcInterceptRequestOutgoingExpiry ::
          Hs.Word32,
        forwardHtlcInterceptRequestCustomRecords ::
          Hs.Map Hs.Word64
            Hs.ByteString,
        forwardHtlcInterceptRequestOnionBlob ::
          Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ForwardHtlcInterceptRequest where
  nameOf _ = (Hs.fromString "ForwardHtlcInterceptRequest")

instance HsProtobuf.HasDefault ForwardHtlcInterceptRequest

instance HsProtobuf.Message ForwardHtlcInterceptRequest where
  encodeMessage
    _
    ForwardHtlcInterceptRequest
      { forwardHtlcInterceptRequestIncomingCircuitKey =
          forwardHtlcInterceptRequestIncomingCircuitKey,
        forwardHtlcInterceptRequestIncomingAmountMsat =
          forwardHtlcInterceptRequestIncomingAmountMsat,
        forwardHtlcInterceptRequestIncomingExpiry =
          forwardHtlcInterceptRequestIncomingExpiry,
        forwardHtlcInterceptRequestPaymentHash =
          forwardHtlcInterceptRequestPaymentHash,
        forwardHtlcInterceptRequestOutgoingRequestedChanId =
          forwardHtlcInterceptRequestOutgoingRequestedChanId,
        forwardHtlcInterceptRequestOutgoingAmountMsat =
          forwardHtlcInterceptRequestOutgoingAmountMsat,
        forwardHtlcInterceptRequestOutgoingExpiry =
          forwardHtlcInterceptRequestOutgoingExpiry,
        forwardHtlcInterceptRequestCustomRecords =
          forwardHtlcInterceptRequestCustomRecords,
        forwardHtlcInterceptRequestOnionBlob =
          forwardHtlcInterceptRequestOnionBlob
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Maybe RouterGrpc.CircuitKey)
                    @(HsProtobuf.Nested RouterGrpc.CircuitKey)
                    forwardHtlcInterceptRequestIncomingCircuitKey
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                forwardHtlcInterceptRequestIncomingAmountMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                forwardHtlcInterceptRequestIncomingExpiry
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                forwardHtlcInterceptRequestPaymentHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                forwardHtlcInterceptRequestOutgoingRequestedChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                forwardHtlcInterceptRequestOutgoingAmountMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                forwardHtlcInterceptRequestOutgoingExpiry
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                forwardHtlcInterceptRequestCustomRecords
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                forwardHtlcInterceptRequestOnionBlob
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ForwardHtlcInterceptRequest)
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested RouterGrpc.CircuitKey))
              @(_ (Hs.Maybe RouterGrpc.CircuitKey))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "CircuitKey"))
          )
          (HsProtobuf.Single "incoming_circuit_key")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "incoming_amount_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "incoming_expiry")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "payment_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "outgoing_requested_chan_id")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "outgoing_amount_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "outgoing_expiry")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Map HsProtobuf.UInt64 HsProtobuf.Bytes)
          (HsProtobuf.Single "custom_records")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "onion_blob")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ForwardHtlcInterceptRequest where
  toJSONPB (ForwardHtlcInterceptRequest f1 f5 f6 f2 f7 f3 f4 f8 f9) =
    ( HsJSONPB.object
        [ "incoming_circuit_key" .= f1,
          "incoming_amount_msat" .= f5,
          "incoming_expiry" .= f6,
          "payment_hash" .= f2,
          "outgoing_requested_chan_id" .= f7,
          "outgoing_amount_msat" .= f3,
          "outgoing_expiry" .= f4,
          "custom_records" .= f8,
          "onion_blob" .= f9
        ]
    )
  toEncodingPB (ForwardHtlcInterceptRequest f1 f5 f6 f2 f7 f3 f4 f8 f9) =
    ( HsJSONPB.pairs
        [ "incoming_circuit_key" .= f1,
          "incoming_amount_msat" .= f5,
          "incoming_expiry" .= f6,
          "payment_hash" .= f2,
          "outgoing_requested_chan_id" .= f7,
          "outgoing_amount_msat" .= f3,
          "outgoing_expiry" .= f4,
          "custom_records" .= f8,
          "onion_blob" .= f9
        ]
    )

instance HsJSONPB.FromJSONPB ForwardHtlcInterceptRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ForwardHtlcInterceptRequest"
        ( \obj ->
            (Hs.pure ForwardHtlcInterceptRequest)
              <*> obj .: "incoming_circuit_key"
              <*> obj .: "incoming_amount_msat"
              <*> obj .: "incoming_expiry"
              <*> obj .: "payment_hash"
              <*> obj .: "outgoing_requested_chan_id"
              <*> obj .: "outgoing_amount_msat"
              <*> obj .: "outgoing_expiry"
              <*> obj .: "custom_records"
              <*> obj .: "onion_blob"
        )
    )

instance HsJSONPB.ToJSON ForwardHtlcInterceptRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ForwardHtlcInterceptRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ForwardHtlcInterceptRequest where
  declareNamedSchema _ =
    do
      let declare_incoming_circuit_key = HsJSONPB.declareSchemaRef
      forwardHtlcInterceptRequestIncomingCircuitKey <-
        declare_incoming_circuit_key
          Proxy.Proxy
      let declare_incoming_amount_msat = HsJSONPB.declareSchemaRef
      forwardHtlcInterceptRequestIncomingAmountMsat <-
        declare_incoming_amount_msat
          Proxy.Proxy
      let declare_incoming_expiry = HsJSONPB.declareSchemaRef
      forwardHtlcInterceptRequestIncomingExpiry <-
        declare_incoming_expiry
          Proxy.Proxy
      let declare_payment_hash = HsJSONPB.declareSchemaRef
      forwardHtlcInterceptRequestPaymentHash <-
        declare_payment_hash
          Proxy.Proxy
      let declare_outgoing_requested_chan_id = HsJSONPB.declareSchemaRef
      forwardHtlcInterceptRequestOutgoingRequestedChanId <-
        declare_outgoing_requested_chan_id
          Proxy.Proxy
      let declare_outgoing_amount_msat = HsJSONPB.declareSchemaRef
      forwardHtlcInterceptRequestOutgoingAmountMsat <-
        declare_outgoing_amount_msat
          Proxy.Proxy
      let declare_outgoing_expiry = HsJSONPB.declareSchemaRef
      forwardHtlcInterceptRequestOutgoingExpiry <-
        declare_outgoing_expiry
          Proxy.Proxy
      let declare_custom_records = HsJSONPB.declareSchemaRef
      forwardHtlcInterceptRequestCustomRecords <-
        declare_custom_records
          Proxy.Proxy
      let declare_onion_blob = HsJSONPB.declareSchemaRef
      forwardHtlcInterceptRequestOnionBlob <-
        declare_onion_blob
          Proxy.Proxy
      let _ =
            Hs.pure ForwardHtlcInterceptRequest
              <*> HsJSONPB.asProxy declare_incoming_circuit_key
              <*> HsJSONPB.asProxy declare_incoming_amount_msat
              <*> HsJSONPB.asProxy declare_incoming_expiry
              <*> HsJSONPB.asProxy declare_payment_hash
              <*> HsJSONPB.asProxy declare_outgoing_requested_chan_id
              <*> HsJSONPB.asProxy declare_outgoing_amount_msat
              <*> HsJSONPB.asProxy declare_outgoing_expiry
              <*> HsJSONPB.asProxy declare_custom_records
              <*> HsJSONPB.asProxy declare_onion_blob
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ForwardHtlcInterceptRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "incoming_circuit_key",
                            forwardHtlcInterceptRequestIncomingCircuitKey
                          ),
                          ( "incoming_amount_msat",
                            forwardHtlcInterceptRequestIncomingAmountMsat
                          ),
                          ( "incoming_expiry",
                            forwardHtlcInterceptRequestIncomingExpiry
                          ),
                          ( "payment_hash",
                            forwardHtlcInterceptRequestPaymentHash
                          ),
                          ( "outgoing_requested_chan_id",
                            forwardHtlcInterceptRequestOutgoingRequestedChanId
                          ),
                          ( "outgoing_amount_msat",
                            forwardHtlcInterceptRequestOutgoingAmountMsat
                          ),
                          ( "outgoing_expiry",
                            forwardHtlcInterceptRequestOutgoingExpiry
                          ),
                          ( "custom_records",
                            forwardHtlcInterceptRequestCustomRecords
                          ),
                          ( "onion_blob",
                            forwardHtlcInterceptRequestOnionBlob
                          )
                        ]
                  }
            }
        )

data ForwardHtlcInterceptResponse
  = ForwardHtlcInterceptResponse
      { forwardHtlcInterceptResponseIncomingCircuitKey ::
          Hs.Maybe
            RouterGrpc.CircuitKey,
        forwardHtlcInterceptResponseAction ::
          HsProtobuf.Enumerated
            RouterGrpc.ResolveHoldForwardAction,
        forwardHtlcInterceptResponsePreimage ::
          Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ForwardHtlcInterceptResponse where
  nameOf _ = (Hs.fromString "ForwardHtlcInterceptResponse")

instance HsProtobuf.HasDefault ForwardHtlcInterceptResponse

instance HsProtobuf.Message ForwardHtlcInterceptResponse where
  encodeMessage
    _
    ForwardHtlcInterceptResponse
      { forwardHtlcInterceptResponseIncomingCircuitKey =
          forwardHtlcInterceptResponseIncomingCircuitKey,
        forwardHtlcInterceptResponseAction =
          forwardHtlcInterceptResponseAction,
        forwardHtlcInterceptResponsePreimage =
          forwardHtlcInterceptResponsePreimage
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Maybe RouterGrpc.CircuitKey)
                    @(HsProtobuf.Nested RouterGrpc.CircuitKey)
                    forwardHtlcInterceptResponseIncomingCircuitKey
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                forwardHtlcInterceptResponseAction
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                forwardHtlcInterceptResponsePreimage
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ForwardHtlcInterceptResponse)
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested RouterGrpc.CircuitKey))
              @(_ (Hs.Maybe RouterGrpc.CircuitKey))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "CircuitKey"))
          )
          (HsProtobuf.Single "incoming_circuit_key")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "ResolveHoldForwardAction"))
          )
          (HsProtobuf.Single "action")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "preimage")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ForwardHtlcInterceptResponse where
  toJSONPB (ForwardHtlcInterceptResponse f1 f2 f3) =
    ( HsJSONPB.object
        ["incoming_circuit_key" .= f1, "action" .= f2, "preimage" .= f3]
    )
  toEncodingPB (ForwardHtlcInterceptResponse f1 f2 f3) =
    ( HsJSONPB.pairs
        ["incoming_circuit_key" .= f1, "action" .= f2, "preimage" .= f3]
    )

instance HsJSONPB.FromJSONPB ForwardHtlcInterceptResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ForwardHtlcInterceptResponse"
        ( \obj ->
            (Hs.pure ForwardHtlcInterceptResponse)
              <*> obj .: "incoming_circuit_key"
              <*> obj .: "action"
              <*> obj .: "preimage"
        )
    )

instance HsJSONPB.ToJSON ForwardHtlcInterceptResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ForwardHtlcInterceptResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ForwardHtlcInterceptResponse where
  declareNamedSchema _ =
    do
      let declare_incoming_circuit_key = HsJSONPB.declareSchemaRef
      forwardHtlcInterceptResponseIncomingCircuitKey <-
        declare_incoming_circuit_key
          Proxy.Proxy
      let declare_action = HsJSONPB.declareSchemaRef
      forwardHtlcInterceptResponseAction <- declare_action Proxy.Proxy
      let declare_preimage = HsJSONPB.declareSchemaRef
      forwardHtlcInterceptResponsePreimage <-
        declare_preimage
          Proxy.Proxy
      let _ =
            Hs.pure ForwardHtlcInterceptResponse
              <*> HsJSONPB.asProxy declare_incoming_circuit_key
              <*> HsJSONPB.asProxy declare_action
              <*> HsJSONPB.asProxy declare_preimage
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ForwardHtlcInterceptResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "incoming_circuit_key",
                            forwardHtlcInterceptResponseIncomingCircuitKey
                          ),
                          ( "action",
                            forwardHtlcInterceptResponseAction
                          ),
                          ( "preimage",
                            forwardHtlcInterceptResponsePreimage
                          )
                        ]
                  }
            }
        )

data ResolveHoldForwardAction
  = ResolveHoldForwardActionSETTLE
  | ResolveHoldForwardActionFAIL
  | ResolveHoldForwardActionRESUME
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ResolveHoldForwardAction where
  nameOf _ = (Hs.fromString "ResolveHoldForwardAction")

instance HsProtobuf.HasDefault ResolveHoldForwardAction

instance Hs.Bounded ResolveHoldForwardAction where
  minBound = ResolveHoldForwardActionSETTLE
  maxBound = ResolveHoldForwardActionRESUME

instance Hs.Ord ResolveHoldForwardAction where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum ResolveHoldForwardAction where
  toProtoEnumMay 0 = Hs.Just ResolveHoldForwardActionSETTLE
  toProtoEnumMay 1 = Hs.Just ResolveHoldForwardActionFAIL
  toProtoEnumMay 2 = Hs.Just ResolveHoldForwardActionRESUME
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (ResolveHoldForwardActionSETTLE) = 0
  fromProtoEnum (ResolveHoldForwardActionFAIL) = 1
  fromProtoEnum (ResolveHoldForwardActionRESUME) = 2

instance HsJSONPB.ToJSONPB ResolveHoldForwardAction where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB ResolveHoldForwardAction where
  parseJSONPB (HsJSONPB.String "SETTLE") =
    Hs.pure ResolveHoldForwardActionSETTLE
  parseJSONPB (HsJSONPB.String "FAIL") =
    Hs.pure ResolveHoldForwardActionFAIL
  parseJSONPB (HsJSONPB.String "RESUME") =
    Hs.pure ResolveHoldForwardActionRESUME
  parseJSONPB v =
    (HsJSONPB.typeMismatch "ResolveHoldForwardAction" v)

instance HsJSONPB.ToJSON ResolveHoldForwardAction where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ResolveHoldForwardAction where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite ResolveHoldForwardAction
