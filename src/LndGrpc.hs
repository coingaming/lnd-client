{-# LANGUAGE DataKinds #-}
{-# LANGUAGE DeriveAnyClass #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE GADTs #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE TypeApplications #-}
{-# OPTIONS_GHC -Wno-missing-export-lists #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module LndGrpc where

import qualified Control.Applicative as Hs
import Control.Applicative ((<$>), (<*>), (<|>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty (..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import LndGrpc.Orphan
import Network.GRPC.HighLevel.Client as HsGRPC
import Network.GRPC.HighLevel.Generated as HsGRPC
import Network.GRPC.HighLevel.Server as HsGRPC hiding (serverLoop)
import Network.GRPC.HighLevel.Server.Unregistered as HsGRPC
  ( serverLoop,
  )
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.:), (.=))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import Universum
import qualified Unsafe.Coerce as Hs
import qualified Prelude as Hs

data Lightning request response
  = Lightning
      { lightningWalletBalance ::
          request 'HsGRPC.Normal LndGrpc.WalletBalanceRequest
            LndGrpc.WalletBalanceResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.WalletBalanceResponse
            ),
        lightningChannelBalance ::
          request 'HsGRPC.Normal LndGrpc.ChannelBalanceRequest
            LndGrpc.ChannelBalanceResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.ChannelBalanceResponse
            ),
        lightningGetTransactions ::
          request 'HsGRPC.Normal LndGrpc.GetTransactionsRequest
            LndGrpc.TransactionDetails ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.TransactionDetails
            ),
        lightningEstimateFee ::
          request 'HsGRPC.Normal LndGrpc.EstimateFeeRequest
            LndGrpc.EstimateFeeResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.EstimateFeeResponse
            ),
        lightningSendCoins ::
          request 'HsGRPC.Normal LndGrpc.SendCoinsRequest
            LndGrpc.SendCoinsResponse ->
          Hs.IO
            (response 'HsGRPC.Normal LndGrpc.SendCoinsResponse),
        lightningListUnspent ::
          request 'HsGRPC.Normal LndGrpc.ListUnspentRequest
            LndGrpc.ListUnspentResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.ListUnspentResponse
            ),
        lightningSubscribeTransactions ::
          request 'HsGRPC.ServerStreaming
            LndGrpc.GetTransactionsRequest
            LndGrpc.Transaction ->
          Hs.IO
            ( response 'HsGRPC.ServerStreaming
                LndGrpc.Transaction
            ),
        lightningSendMany ::
          request 'HsGRPC.Normal LndGrpc.SendManyRequest
            LndGrpc.SendManyResponse ->
          Hs.IO
            (response 'HsGRPC.Normal LndGrpc.SendManyResponse),
        lightningNewAddress ::
          request 'HsGRPC.Normal LndGrpc.NewAddressRequest
            LndGrpc.NewAddressResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.NewAddressResponse
            ),
        lightningSignMessage ::
          request 'HsGRPC.Normal LndGrpc.SignMessageRequest
            LndGrpc.SignMessageResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.SignMessageResponse
            ),
        lightningVerifyMessage ::
          request 'HsGRPC.Normal LndGrpc.VerifyMessageRequest
            LndGrpc.VerifyMessageResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.VerifyMessageResponse
            ),
        lightningConnectPeer ::
          request 'HsGRPC.Normal LndGrpc.ConnectPeerRequest
            LndGrpc.ConnectPeerResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.ConnectPeerResponse
            ),
        lightningDisconnectPeer ::
          request 'HsGRPC.Normal LndGrpc.DisconnectPeerRequest
            LndGrpc.DisconnectPeerResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.DisconnectPeerResponse
            ),
        lightningListPeers ::
          request 'HsGRPC.Normal LndGrpc.ListPeersRequest
            LndGrpc.ListPeersResponse ->
          Hs.IO
            (response 'HsGRPC.Normal LndGrpc.ListPeersResponse),
        lightningSubscribePeerEvents ::
          request 'HsGRPC.ServerStreaming
            LndGrpc.PeerEventSubscription
            LndGrpc.PeerEvent ->
          Hs.IO
            ( response 'HsGRPC.ServerStreaming
                LndGrpc.PeerEvent
            ),
        lightningGetInfo ::
          request 'HsGRPC.Normal LndGrpc.GetInfoRequest
            LndGrpc.GetInfoResponse ->
          Hs.IO
            (response 'HsGRPC.Normal LndGrpc.GetInfoResponse),
        lightningPendingChannels ::
          request 'HsGRPC.Normal LndGrpc.PendingChannelsRequest
            LndGrpc.PendingChannelsResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.PendingChannelsResponse
            ),
        lightningListChannels ::
          request 'HsGRPC.Normal LndGrpc.ListChannelsRequest
            LndGrpc.ListChannelsResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.ListChannelsResponse
            ),
        lightningSubscribeChannelEvents ::
          request 'HsGRPC.ServerStreaming
            LndGrpc.ChannelEventSubscription
            LndGrpc.ChannelEventUpdate ->
          Hs.IO
            ( response 'HsGRPC.ServerStreaming
                LndGrpc.ChannelEventUpdate
            ),
        lightningClosedChannels ::
          request 'HsGRPC.Normal LndGrpc.ClosedChannelsRequest
            LndGrpc.ClosedChannelsResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.ClosedChannelsResponse
            ),
        lightningOpenChannelSync ::
          request 'HsGRPC.Normal LndGrpc.OpenChannelRequest
            LndGrpc.ChannelPoint ->
          Hs.IO (response 'HsGRPC.Normal LndGrpc.ChannelPoint),
        lightningOpenChannel ::
          request 'HsGRPC.ServerStreaming
            LndGrpc.OpenChannelRequest
            LndGrpc.OpenStatusUpdate ->
          Hs.IO
            ( response 'HsGRPC.ServerStreaming
                LndGrpc.OpenStatusUpdate
            ),
        lightningFundingStateStep ::
          request 'HsGRPC.Normal LndGrpc.FundingTransitionMsg
            LndGrpc.FundingStateStepResp ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.FundingStateStepResp
            ),
        lightningChannelAcceptor ::
          request 'HsGRPC.BiDiStreaming
            LndGrpc.ChannelAcceptResponse
            LndGrpc.ChannelAcceptRequest ->
          Hs.IO
            ( response 'HsGRPC.BiDiStreaming
                LndGrpc.ChannelAcceptRequest
            ),
        lightningCloseChannel ::
          request 'HsGRPC.ServerStreaming
            LndGrpc.CloseChannelRequest
            LndGrpc.CloseStatusUpdate ->
          Hs.IO
            ( response 'HsGRPC.ServerStreaming
                LndGrpc.CloseStatusUpdate
            ),
        lightningAbandonChannel ::
          request 'HsGRPC.Normal LndGrpc.AbandonChannelRequest
            LndGrpc.AbandonChannelResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.AbandonChannelResponse
            ),
        lightningSendPayment ::
          request 'HsGRPC.BiDiStreaming LndGrpc.SendRequest
            LndGrpc.SendResponse ->
          Hs.IO
            ( response 'HsGRPC.BiDiStreaming
                LndGrpc.SendResponse
            ),
        lightningSendPaymentSync ::
          request 'HsGRPC.Normal LndGrpc.SendRequest
            LndGrpc.SendResponse ->
          Hs.IO (response 'HsGRPC.Normal LndGrpc.SendResponse),
        lightningSendToRoute ::
          request 'HsGRPC.BiDiStreaming LndGrpc.SendToRouteRequest
            LndGrpc.SendResponse ->
          Hs.IO
            ( response 'HsGRPC.BiDiStreaming
                LndGrpc.SendResponse
            ),
        lightningSendToRouteSync ::
          request 'HsGRPC.Normal LndGrpc.SendToRouteRequest
            LndGrpc.SendResponse ->
          Hs.IO (response 'HsGRPC.Normal LndGrpc.SendResponse),
        lightningAddInvoice ::
          request 'HsGRPC.Normal LndGrpc.Invoice
            LndGrpc.AddInvoiceResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.AddInvoiceResponse
            ),
        lightningListInvoices ::
          request 'HsGRPC.Normal LndGrpc.ListInvoiceRequest
            LndGrpc.ListInvoiceResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.ListInvoiceResponse
            ),
        lightningLookupInvoice ::
          request 'HsGRPC.Normal LndGrpc.PaymentHash
            LndGrpc.Invoice ->
          Hs.IO (response 'HsGRPC.Normal LndGrpc.Invoice),
        lightningSubscribeInvoices ::
          request 'HsGRPC.ServerStreaming
            LndGrpc.InvoiceSubscription
            LndGrpc.Invoice ->
          Hs.IO
            (response 'HsGRPC.ServerStreaming LndGrpc.Invoice),
        lightningDecodePayReq ::
          request 'HsGRPC.Normal LndGrpc.PayReqString
            LndGrpc.PayReq ->
          Hs.IO (response 'HsGRPC.Normal LndGrpc.PayReq),
        lightningListPayments ::
          request 'HsGRPC.Normal LndGrpc.ListPaymentsRequest
            LndGrpc.ListPaymentsResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.ListPaymentsResponse
            ),
        lightningDeleteAllPayments ::
          request 'HsGRPC.Normal LndGrpc.DeleteAllPaymentsRequest
            LndGrpc.DeleteAllPaymentsResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.DeleteAllPaymentsResponse
            ),
        lightningDescribeGraph ::
          request 'HsGRPC.Normal LndGrpc.ChannelGraphRequest
            LndGrpc.ChannelGraph ->
          Hs.IO (response 'HsGRPC.Normal LndGrpc.ChannelGraph),
        lightningGetNodeMetrics ::
          request 'HsGRPC.Normal LndGrpc.NodeMetricsRequest
            LndGrpc.NodeMetricsResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.NodeMetricsResponse
            ),
        lightningGetChanInfo ::
          request 'HsGRPC.Normal LndGrpc.ChanInfoRequest
            LndGrpc.ChannelEdge ->
          Hs.IO (response 'HsGRPC.Normal LndGrpc.ChannelEdge),
        lightningGetNodeInfo ::
          request 'HsGRPC.Normal LndGrpc.NodeInfoRequest
            LndGrpc.NodeInfo ->
          Hs.IO (response 'HsGRPC.Normal LndGrpc.NodeInfo),
        lightningQueryRoutes ::
          request 'HsGRPC.Normal LndGrpc.QueryRoutesRequest
            LndGrpc.QueryRoutesResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.QueryRoutesResponse
            ),
        lightningGetNetworkInfo ::
          request 'HsGRPC.Normal LndGrpc.NetworkInfoRequest
            LndGrpc.NetworkInfo ->
          Hs.IO (response 'HsGRPC.Normal LndGrpc.NetworkInfo),
        lightningStopDaemon ::
          request 'HsGRPC.Normal LndGrpc.StopRequest
            LndGrpc.StopResponse ->
          Hs.IO (response 'HsGRPC.Normal LndGrpc.StopResponse),
        lightningSubscribeChannelGraph ::
          request 'HsGRPC.ServerStreaming
            LndGrpc.GraphTopologySubscription
            LndGrpc.GraphTopologyUpdate ->
          Hs.IO
            ( response 'HsGRPC.ServerStreaming
                LndGrpc.GraphTopologyUpdate
            ),
        lightningDebugLevel ::
          request 'HsGRPC.Normal LndGrpc.DebugLevelRequest
            LndGrpc.DebugLevelResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.DebugLevelResponse
            ),
        lightningFeeReport ::
          request 'HsGRPC.Normal LndGrpc.FeeReportRequest
            LndGrpc.FeeReportResponse ->
          Hs.IO
            (response 'HsGRPC.Normal LndGrpc.FeeReportResponse),
        lightningUpdateChannelPolicy ::
          request 'HsGRPC.Normal LndGrpc.PolicyUpdateRequest
            LndGrpc.PolicyUpdateResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.PolicyUpdateResponse
            ),
        lightningForwardingHistory ::
          request 'HsGRPC.Normal LndGrpc.ForwardingHistoryRequest
            LndGrpc.ForwardingHistoryResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.ForwardingHistoryResponse
            ),
        lightningExportChannelBackup ::
          request 'HsGRPC.Normal
            LndGrpc.ExportChannelBackupRequest
            LndGrpc.ChannelBackup ->
          Hs.IO (response 'HsGRPC.Normal LndGrpc.ChannelBackup),
        lightningExportAllChannelBackups ::
          request 'HsGRPC.Normal LndGrpc.ChanBackupExportRequest
            LndGrpc.ChanBackupSnapshot ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.ChanBackupSnapshot
            ),
        lightningVerifyChanBackup ::
          request 'HsGRPC.Normal LndGrpc.ChanBackupSnapshot
            LndGrpc.VerifyChanBackupResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.VerifyChanBackupResponse
            ),
        lightningRestoreChannelBackups ::
          request 'HsGRPC.Normal LndGrpc.RestoreChanBackupRequest
            LndGrpc.RestoreBackupResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.RestoreBackupResponse
            ),
        lightningSubscribeChannelBackups ::
          request 'HsGRPC.ServerStreaming
            LndGrpc.ChannelBackupSubscription
            LndGrpc.ChanBackupSnapshot ->
          Hs.IO
            ( response 'HsGRPC.ServerStreaming
                LndGrpc.ChanBackupSnapshot
            ),
        lightningBakeMacaroon ::
          request 'HsGRPC.Normal LndGrpc.BakeMacaroonRequest
            LndGrpc.BakeMacaroonResponse ->
          Hs.IO
            ( response 'HsGRPC.Normal
                LndGrpc.BakeMacaroonResponse
            )
      }
  deriving (Hs.Generic)

lightningServer ::
  Lightning HsGRPC.ServerRequest HsGRPC.ServerResponse ->
  HsGRPC.ServiceOptions ->
  Hs.IO ()
lightningServer
  Lightning
    { lightningWalletBalance = lightningWalletBalance,
      lightningChannelBalance = lightningChannelBalance,
      lightningGetTransactions = lightningGetTransactions,
      lightningEstimateFee = lightningEstimateFee,
      lightningSendCoins = lightningSendCoins,
      lightningListUnspent = lightningListUnspent,
      lightningSubscribeTransactions = lightningSubscribeTransactions,
      lightningSendMany = lightningSendMany,
      lightningNewAddress = lightningNewAddress,
      lightningSignMessage = lightningSignMessage,
      lightningVerifyMessage = lightningVerifyMessage,
      lightningConnectPeer = lightningConnectPeer,
      lightningDisconnectPeer = lightningDisconnectPeer,
      lightningListPeers = lightningListPeers,
      lightningSubscribePeerEvents = lightningSubscribePeerEvents,
      lightningGetInfo = lightningGetInfo,
      lightningPendingChannels = lightningPendingChannels,
      lightningListChannels = lightningListChannels,
      lightningSubscribeChannelEvents = lightningSubscribeChannelEvents,
      lightningClosedChannels = lightningClosedChannels,
      lightningOpenChannelSync = lightningOpenChannelSync,
      lightningOpenChannel = lightningOpenChannel,
      lightningFundingStateStep = lightningFundingStateStep,
      lightningChannelAcceptor = lightningChannelAcceptor,
      lightningCloseChannel = lightningCloseChannel,
      lightningAbandonChannel = lightningAbandonChannel,
      lightningSendPayment = lightningSendPayment,
      lightningSendPaymentSync = lightningSendPaymentSync,
      lightningSendToRoute = lightningSendToRoute,
      lightningSendToRouteSync = lightningSendToRouteSync,
      lightningAddInvoice = lightningAddInvoice,
      lightningListInvoices = lightningListInvoices,
      lightningLookupInvoice = lightningLookupInvoice,
      lightningSubscribeInvoices = lightningSubscribeInvoices,
      lightningDecodePayReq = lightningDecodePayReq,
      lightningListPayments = lightningListPayments,
      lightningDeleteAllPayments = lightningDeleteAllPayments,
      lightningDescribeGraph = lightningDescribeGraph,
      lightningGetNodeMetrics = lightningGetNodeMetrics,
      lightningGetChanInfo = lightningGetChanInfo,
      lightningGetNodeInfo = lightningGetNodeInfo,
      lightningQueryRoutes = lightningQueryRoutes,
      lightningGetNetworkInfo = lightningGetNetworkInfo,
      lightningStopDaemon = lightningStopDaemon,
      lightningSubscribeChannelGraph = lightningSubscribeChannelGraph,
      lightningDebugLevel = lightningDebugLevel,
      lightningFeeReport = lightningFeeReport,
      lightningUpdateChannelPolicy = lightningUpdateChannelPolicy,
      lightningForwardingHistory = lightningForwardingHistory,
      lightningExportChannelBackup = lightningExportChannelBackup,
      lightningExportAllChannelBackups =
        lightningExportAllChannelBackups,
      lightningVerifyChanBackup = lightningVerifyChanBackup,
      lightningRestoreChannelBackups = lightningRestoreChannelBackups,
      lightningSubscribeChannelBackups =
        lightningSubscribeChannelBackups,
      lightningBakeMacaroon = lightningBakeMacaroon
    }
  ( ServiceOptions
      serverHost
      serverPort
      useCompression
      userAgentPrefix
      userAgentSuffix
      initialMetadata
      sslConfig
      logger
    ) =
    ( HsGRPC.serverLoop
        HsGRPC.defaultOptions
          { HsGRPC.optNormalHandlers =
              [ ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/WalletBalance")
                    (HsGRPC.convertGeneratedServerHandler lightningWalletBalance)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/ChannelBalance")
                    (HsGRPC.convertGeneratedServerHandler lightningChannelBalance)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/GetTransactions")
                    (HsGRPC.convertGeneratedServerHandler lightningGetTransactions)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/EstimateFee")
                    (HsGRPC.convertGeneratedServerHandler lightningEstimateFee)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/SendCoins")
                    (HsGRPC.convertGeneratedServerHandler lightningSendCoins)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/ListUnspent")
                    (HsGRPC.convertGeneratedServerHandler lightningListUnspent)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/SendMany")
                    (HsGRPC.convertGeneratedServerHandler lightningSendMany)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/NewAddress")
                    (HsGRPC.convertGeneratedServerHandler lightningNewAddress)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/SignMessage")
                    (HsGRPC.convertGeneratedServerHandler lightningSignMessage)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/VerifyMessage")
                    (HsGRPC.convertGeneratedServerHandler lightningVerifyMessage)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/ConnectPeer")
                    (HsGRPC.convertGeneratedServerHandler lightningConnectPeer)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/DisconnectPeer")
                    (HsGRPC.convertGeneratedServerHandler lightningDisconnectPeer)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/ListPeers")
                    (HsGRPC.convertGeneratedServerHandler lightningListPeers)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/GetInfo")
                    (HsGRPC.convertGeneratedServerHandler lightningGetInfo)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/PendingChannels")
                    (HsGRPC.convertGeneratedServerHandler lightningPendingChannels)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/ListChannels")
                    (HsGRPC.convertGeneratedServerHandler lightningListChannels)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/ClosedChannels")
                    (HsGRPC.convertGeneratedServerHandler lightningClosedChannels)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/OpenChannelSync")
                    (HsGRPC.convertGeneratedServerHandler lightningOpenChannelSync)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/FundingStateStep")
                    ( HsGRPC.convertGeneratedServerHandler
                        lightningFundingStateStep
                    )
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/AbandonChannel")
                    (HsGRPC.convertGeneratedServerHandler lightningAbandonChannel)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/SendPaymentSync")
                    (HsGRPC.convertGeneratedServerHandler lightningSendPaymentSync)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/SendToRouteSync")
                    (HsGRPC.convertGeneratedServerHandler lightningSendToRouteSync)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/AddInvoice")
                    (HsGRPC.convertGeneratedServerHandler lightningAddInvoice)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/ListInvoices")
                    (HsGRPC.convertGeneratedServerHandler lightningListInvoices)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/LookupInvoice")
                    (HsGRPC.convertGeneratedServerHandler lightningLookupInvoice)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/DecodePayReq")
                    (HsGRPC.convertGeneratedServerHandler lightningDecodePayReq)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/ListPayments")
                    (HsGRPC.convertGeneratedServerHandler lightningListPayments)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/DeleteAllPayments")
                    ( HsGRPC.convertGeneratedServerHandler
                        lightningDeleteAllPayments
                    )
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/DescribeGraph")
                    (HsGRPC.convertGeneratedServerHandler lightningDescribeGraph)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/GetNodeMetrics")
                    (HsGRPC.convertGeneratedServerHandler lightningGetNodeMetrics)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/GetChanInfo")
                    (HsGRPC.convertGeneratedServerHandler lightningGetChanInfo)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/GetNodeInfo")
                    (HsGRPC.convertGeneratedServerHandler lightningGetNodeInfo)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/QueryRoutes")
                    (HsGRPC.convertGeneratedServerHandler lightningQueryRoutes)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/GetNetworkInfo")
                    (HsGRPC.convertGeneratedServerHandler lightningGetNetworkInfo)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/StopDaemon")
                    (HsGRPC.convertGeneratedServerHandler lightningStopDaemon)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/DebugLevel")
                    (HsGRPC.convertGeneratedServerHandler lightningDebugLevel)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/FeeReport")
                    (HsGRPC.convertGeneratedServerHandler lightningFeeReport)
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/UpdateChannelPolicy")
                    ( HsGRPC.convertGeneratedServerHandler
                        lightningUpdateChannelPolicy
                    )
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/ForwardingHistory")
                    ( HsGRPC.convertGeneratedServerHandler
                        lightningForwardingHistory
                    )
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/ExportChannelBackup")
                    ( HsGRPC.convertGeneratedServerHandler
                        lightningExportChannelBackup
                    )
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/ExportAllChannelBackups")
                    ( HsGRPC.convertGeneratedServerHandler
                        lightningExportAllChannelBackups
                    )
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/VerifyChanBackup")
                    ( HsGRPC.convertGeneratedServerHandler
                        lightningVerifyChanBackup
                    )
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/RestoreChannelBackups")
                    ( HsGRPC.convertGeneratedServerHandler
                        lightningRestoreChannelBackups
                    )
                ),
                ( HsGRPC.UnaryHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/BakeMacaroon")
                    (HsGRPC.convertGeneratedServerHandler lightningBakeMacaroon)
                )
              ],
            HsGRPC.optClientStreamHandlers = [],
            HsGRPC.optServerStreamHandlers =
              [ ( HsGRPC.ServerStreamHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/SubscribeTransactions")
                    ( HsGRPC.convertGeneratedServerWriterHandler
                        lightningSubscribeTransactions
                    )
                ),
                ( HsGRPC.ServerStreamHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/SubscribePeerEvents")
                    ( HsGRPC.convertGeneratedServerWriterHandler
                        lightningSubscribePeerEvents
                    )
                ),
                ( HsGRPC.ServerStreamHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/SubscribeChannelEvents")
                    ( HsGRPC.convertGeneratedServerWriterHandler
                        lightningSubscribeChannelEvents
                    )
                ),
                ( HsGRPC.ServerStreamHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/OpenChannel")
                    ( HsGRPC.convertGeneratedServerWriterHandler
                        lightningOpenChannel
                    )
                ),
                ( HsGRPC.ServerStreamHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/CloseChannel")
                    ( HsGRPC.convertGeneratedServerWriterHandler
                        lightningCloseChannel
                    )
                ),
                ( HsGRPC.ServerStreamHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/SubscribeInvoices")
                    ( HsGRPC.convertGeneratedServerWriterHandler
                        lightningSubscribeInvoices
                    )
                ),
                ( HsGRPC.ServerStreamHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/SubscribeChannelGraph")
                    ( HsGRPC.convertGeneratedServerWriterHandler
                        lightningSubscribeChannelGraph
                    )
                ),
                ( HsGRPC.ServerStreamHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/SubscribeChannelBackups")
                    ( HsGRPC.convertGeneratedServerWriterHandler
                        lightningSubscribeChannelBackups
                    )
                )
              ],
            HsGRPC.optBiDiStreamHandlers =
              [ ( HsGRPC.BiDiStreamHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/ChannelAcceptor")
                    ( HsGRPC.convertGeneratedServerRWHandler
                        lightningChannelAcceptor
                    )
                ),
                ( HsGRPC.BiDiStreamHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/SendPayment")
                    (HsGRPC.convertGeneratedServerRWHandler lightningSendPayment)
                ),
                ( HsGRPC.BiDiStreamHandler
                    (HsGRPC.MethodName "/lnrpc.Lightning/SendToRoute")
                    (HsGRPC.convertGeneratedServerRWHandler lightningSendToRoute)
                )
              ],
            optServerHost = serverHost,
            optServerPort = serverPort,
            optUseCompression = useCompression,
            optUserAgentPrefix = userAgentPrefix,
            optUserAgentSuffix = userAgentSuffix,
            optInitialMetadata = initialMetadata,
            optSSLConfig = sslConfig,
            optLogger = logger
          }
    )

lightningClient ::
  HsGRPC.Client ->
  Hs.IO (Lightning HsGRPC.ClientRequest HsGRPC.ClientResult)
lightningClient client =
  (Hs.pure Lightning)
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/WalletBalance")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/ChannelBalance")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/GetTransactions")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/EstimateFee")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/SendCoins")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/ListUnspent")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/SubscribeTransactions")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/SendMany")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/NewAddress")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/SignMessage")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/VerifyMessage")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/ConnectPeer")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/DisconnectPeer")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/ListPeers")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/SubscribePeerEvents")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/GetInfo")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/PendingChannels")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/ListChannels")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/SubscribeChannelEvents")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/ClosedChannels")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/OpenChannelSync")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/OpenChannel")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/FundingStateStep")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/ChannelAcceptor")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/CloseChannel")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/AbandonChannel")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/SendPayment")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/SendPaymentSync")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/SendToRoute")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/SendToRouteSync")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/AddInvoice")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/ListInvoices")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/LookupInvoice")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/SubscribeInvoices")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/DecodePayReq")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/ListPayments")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/DeleteAllPayments")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/DescribeGraph")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/GetNodeMetrics")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/GetChanInfo")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/GetNodeInfo")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/QueryRoutes")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/GetNetworkInfo")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/StopDaemon")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/SubscribeChannelGraph")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/DebugLevel")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/FeeReport")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/UpdateChannelPolicy")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/ForwardingHistory")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/ExportChannelBackup")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/ExportAllChannelBackups")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/VerifyChanBackup")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/RestoreChannelBackups")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/SubscribeChannelBackups")
                )
        )
    <*> ( (Hs.pure (HsGRPC.clientRequest client))
            <*> ( HsGRPC.clientRegisterMethod
                    client
                    (HsGRPC.MethodName "/lnrpc.Lightning/BakeMacaroon")
                )
        )

data Utxo
  = Utxo
      { utxoAddressType ::
          HsProtobuf.Enumerated
            LndGrpc.AddressType,
        utxoAddress :: Hs.Text,
        utxoAmountSat :: Hs.Int64,
        utxoPkScript :: Hs.Text,
        utxoOutpoint :: Hs.Maybe LndGrpc.OutPoint,
        utxoConfirmations :: Hs.Int64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Utxo where
  nameOf _ = (Hs.fromString "Utxo")

instance HsProtobuf.HasDefault Utxo

instance HsProtobuf.Message Utxo where
  encodeMessage
    _
    Utxo
      { utxoAddressType = utxoAddressType,
        utxoAddress = utxoAddress,
        utxoAmountSat = utxoAmountSat,
        utxoPkScript = utxoPkScript,
        utxoOutpoint = utxoOutpoint,
        utxoConfirmations = utxoConfirmations
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                utxoAddressType
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                utxoAddress
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                utxoAmountSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                utxoPkScript
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                ( Hs.coerce @(Hs.Maybe LndGrpc.OutPoint)
                    @(HsProtobuf.Nested LndGrpc.OutPoint)
                    utxoOutpoint
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                utxoConfirmations
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure Utxo)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.OutPoint))
              @(_ (Hs.Maybe LndGrpc.OutPoint))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 5)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "AddressType"))
          )
          (HsProtobuf.Single "address_type")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "address")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amount_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "pk_script")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "OutPoint")))
          (HsProtobuf.Single "outpoint")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "confirmations")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB Utxo where
  toJSONPB (Utxo f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.object
        [ "address_type" .= f1,
          "address" .= f2,
          "amount_sat" .= f3,
          "pk_script" .= f4,
          "outpoint" .= f5,
          "confirmations" .= f6
        ]
    )
  toEncodingPB (Utxo f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.pairs
        [ "address_type" .= f1,
          "address" .= f2,
          "amount_sat" .= f3,
          "pk_script" .= f4,
          "outpoint" .= f5,
          "confirmations" .= f6
        ]
    )

instance HsJSONPB.FromJSONPB Utxo where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Utxo"
        ( \obj ->
            (Hs.pure Utxo) <*> obj .: "address_type" <*> obj .: "address"
              <*> obj .: "amount_sat"
              <*> obj .: "pk_script"
              <*> obj .: "outpoint"
              <*> obj .: "confirmations"
        )
    )

instance HsJSONPB.ToJSON Utxo where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Utxo where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema Utxo where
  declareNamedSchema _ =
    do
      let declare_address_type = HsJSONPB.declareSchemaRef
      utxoAddressType <- declare_address_type Proxy.Proxy
      let declare_address = HsJSONPB.declareSchemaRef
      utxoAddress <- declare_address Proxy.Proxy
      let declare_amount_sat = HsJSONPB.declareSchemaRef
      utxoAmountSat <- declare_amount_sat Proxy.Proxy
      let declare_pk_script = HsJSONPB.declareSchemaRef
      utxoPkScript <- declare_pk_script Proxy.Proxy
      let declare_outpoint = HsJSONPB.declareSchemaRef
      utxoOutpoint <- declare_outpoint Proxy.Proxy
      let declare_confirmations = HsJSONPB.declareSchemaRef
      utxoConfirmations <- declare_confirmations Proxy.Proxy
      let _ =
            Hs.pure Utxo <*> HsJSONPB.asProxy declare_address_type
              <*> HsJSONPB.asProxy declare_address
              <*> HsJSONPB.asProxy declare_amount_sat
              <*> HsJSONPB.asProxy declare_pk_script
              <*> HsJSONPB.asProxy declare_outpoint
              <*> HsJSONPB.asProxy declare_confirmations
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName = Hs.Just "Utxo",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("address_type", utxoAddressType),
                          ("address", utxoAddress),
                          ("amount_sat", utxoAmountSat),
                          ("pk_script", utxoPkScript),
                          ("outpoint", utxoOutpoint),
                          ("confirmations", utxoConfirmations)
                        ]
                  }
            }
        )

data Transaction
  = Transaction
      { transactionTxHash :: Hs.Text,
        transactionAmount :: Hs.Int64,
        transactionNumConfirmations :: Hs.Int32,
        transactionBlockHash :: Hs.Text,
        transactionBlockHeight :: Hs.Int32,
        transactionTimeStamp :: Hs.Int64,
        transactionTotalFees :: Hs.Int64,
        transactionDestAddresses :: Hs.Vector Hs.Text,
        transactionRawTxHex :: Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Transaction where
  nameOf _ = (Hs.fromString "Transaction")

instance HsProtobuf.HasDefault Transaction

instance HsProtobuf.Message Transaction where
  encodeMessage
    _
    Transaction
      { transactionTxHash = transactionTxHash,
        transactionAmount = transactionAmount,
        transactionNumConfirmations = transactionNumConfirmations,
        transactionBlockHash = transactionBlockHash,
        transactionBlockHeight = transactionBlockHeight,
        transactionTimeStamp = transactionTimeStamp,
        transactionTotalFees = transactionTotalFees,
        transactionDestAddresses = transactionDestAddresses,
        transactionRawTxHex = transactionRawTxHex
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                transactionTxHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                transactionAmount
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                transactionNumConfirmations
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                transactionBlockHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                transactionBlockHeight
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                transactionTimeStamp
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                transactionTotalFees
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                ( Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                    transactionDestAddresses
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                transactionRawTxHex
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure Transaction)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
              @(_ (Hs.Vector Hs.Text))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 8)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "tx_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amount")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "num_confirmations")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "block_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "block_height")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "time_stamp")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "total_fees")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Repeated HsProtobuf.String)
          (HsProtobuf.Single "dest_addresses")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "raw_tx_hex")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB Transaction where
  toJSONPB (Transaction f1 f2 f3 f4 f5 f6 f7 f8 f9) =
    ( HsJSONPB.object
        [ "tx_hash" .= f1,
          "amount" .= f2,
          "num_confirmations" .= f3,
          "block_hash" .= f4,
          "block_height" .= f5,
          "time_stamp" .= f6,
          "total_fees" .= f7,
          "dest_addresses" .= f8,
          "raw_tx_hex" .= f9
        ]
    )
  toEncodingPB (Transaction f1 f2 f3 f4 f5 f6 f7 f8 f9) =
    ( HsJSONPB.pairs
        [ "tx_hash" .= f1,
          "amount" .= f2,
          "num_confirmations" .= f3,
          "block_hash" .= f4,
          "block_height" .= f5,
          "time_stamp" .= f6,
          "total_fees" .= f7,
          "dest_addresses" .= f8,
          "raw_tx_hex" .= f9
        ]
    )

instance HsJSONPB.FromJSONPB Transaction where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Transaction"
        ( \obj ->
            (Hs.pure Transaction) <*> obj .: "tx_hash" <*> obj .: "amount"
              <*> obj .: "num_confirmations"
              <*> obj .: "block_hash"
              <*> obj .: "block_height"
              <*> obj .: "time_stamp"
              <*> obj .: "total_fees"
              <*> obj .: "dest_addresses"
              <*> obj .: "raw_tx_hex"
        )
    )

instance HsJSONPB.ToJSON Transaction where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Transaction where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema Transaction where
  declareNamedSchema _ =
    do
      let declare_tx_hash = HsJSONPB.declareSchemaRef
      transactionTxHash <- declare_tx_hash Proxy.Proxy
      let declare_amount = HsJSONPB.declareSchemaRef
      transactionAmount <- declare_amount Proxy.Proxy
      let declare_num_confirmations = HsJSONPB.declareSchemaRef
      transactionNumConfirmations <-
        declare_num_confirmations
          Proxy.Proxy
      let declare_block_hash = HsJSONPB.declareSchemaRef
      transactionBlockHash <- declare_block_hash Proxy.Proxy
      let declare_block_height = HsJSONPB.declareSchemaRef
      transactionBlockHeight <- declare_block_height Proxy.Proxy
      let declare_time_stamp = HsJSONPB.declareSchemaRef
      transactionTimeStamp <- declare_time_stamp Proxy.Proxy
      let declare_total_fees = HsJSONPB.declareSchemaRef
      transactionTotalFees <- declare_total_fees Proxy.Proxy
      let declare_dest_addresses = HsJSONPB.declareSchemaRef
      transactionDestAddresses <- declare_dest_addresses Proxy.Proxy
      let declare_raw_tx_hex = HsJSONPB.declareSchemaRef
      transactionRawTxHex <- declare_raw_tx_hex Proxy.Proxy
      let _ =
            Hs.pure Transaction <*> HsJSONPB.asProxy declare_tx_hash
              <*> HsJSONPB.asProxy declare_amount
              <*> HsJSONPB.asProxy declare_num_confirmations
              <*> HsJSONPB.asProxy declare_block_hash
              <*> HsJSONPB.asProxy declare_block_height
              <*> HsJSONPB.asProxy declare_time_stamp
              <*> HsJSONPB.asProxy declare_total_fees
              <*> HsJSONPB.asProxy declare_dest_addresses
              <*> HsJSONPB.asProxy declare_raw_tx_hex
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "Transaction",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("tx_hash", transactionTxHash),
                          ("amount", transactionAmount),
                          ( "num_confirmations",
                            transactionNumConfirmations
                          ),
                          ("block_hash", transactionBlockHash),
                          ("block_height", transactionBlockHeight),
                          ("time_stamp", transactionTimeStamp),
                          ("total_fees", transactionTotalFees),
                          ( "dest_addresses",
                            transactionDestAddresses
                          ),
                          ("raw_tx_hex", transactionRawTxHex)
                        ]
                  }
            }
        )

data GetTransactionsRequest
  = GetTransactionsRequest
      { getTransactionsRequestStartHeight ::
          Hs.Int32,
        getTransactionsRequestEndHeight :: Hs.Int32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named GetTransactionsRequest where
  nameOf _ = (Hs.fromString "GetTransactionsRequest")

instance HsProtobuf.HasDefault GetTransactionsRequest

instance HsProtobuf.Message GetTransactionsRequest where
  encodeMessage
    _
    GetTransactionsRequest
      { getTransactionsRequestStartHeight =
          getTransactionsRequestStartHeight,
        getTransactionsRequestEndHeight = getTransactionsRequestEndHeight
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                getTransactionsRequestStartHeight
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                getTransactionsRequestEndHeight
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure GetTransactionsRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "start_height")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "end_height")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB GetTransactionsRequest where
  toJSONPB (GetTransactionsRequest f1 f2) =
    (HsJSONPB.object ["start_height" .= f1, "end_height" .= f2])
  toEncodingPB (GetTransactionsRequest f1 f2) =
    (HsJSONPB.pairs ["start_height" .= f1, "end_height" .= f2])

instance HsJSONPB.FromJSONPB GetTransactionsRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "GetTransactionsRequest"
        ( \obj ->
            (Hs.pure GetTransactionsRequest) <*> obj .: "start_height"
              <*> obj .: "end_height"
        )
    )

instance HsJSONPB.ToJSON GetTransactionsRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetTransactionsRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetTransactionsRequest where
  declareNamedSchema _ =
    do
      let declare_start_height = HsJSONPB.declareSchemaRef
      getTransactionsRequestStartHeight <-
        declare_start_height
          Proxy.Proxy
      let declare_end_height = HsJSONPB.declareSchemaRef
      getTransactionsRequestEndHeight <- declare_end_height Proxy.Proxy
      let _ =
            Hs.pure GetTransactionsRequest
              <*> HsJSONPB.asProxy declare_start_height
              <*> HsJSONPB.asProxy declare_end_height
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "GetTransactionsRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "start_height",
                            getTransactionsRequestStartHeight
                          ),
                          ( "end_height",
                            getTransactionsRequestEndHeight
                          )
                        ]
                  }
            }
        )

data TransactionDetails
  = TransactionDetails
      { transactionDetailsTransactions ::
          Hs.Vector
            LndGrpc.Transaction
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named TransactionDetails where
  nameOf _ = (Hs.fromString "TransactionDetails")

instance HsProtobuf.HasDefault TransactionDetails

instance HsProtobuf.Message TransactionDetails where
  encodeMessage
    _
    TransactionDetails
      { transactionDetailsTransactions =
          transactionDetailsTransactions
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector LndGrpc.Transaction)
                    @(HsProtobuf.NestedVec LndGrpc.Transaction)
                    transactionDetailsTransactions
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure TransactionDetails)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.Transaction))
              @(_ (Hs.Vector LndGrpc.Transaction))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "Transaction"))
          )
          (HsProtobuf.Single "transactions")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB TransactionDetails where
  toJSONPB (TransactionDetails f1) =
    (HsJSONPB.object ["transactions" .= f1])
  toEncodingPB (TransactionDetails f1) =
    (HsJSONPB.pairs ["transactions" .= f1])

instance HsJSONPB.FromJSONPB TransactionDetails where
  parseJSONPB =
    ( HsJSONPB.withObject
        "TransactionDetails"
        (\obj -> (Hs.pure TransactionDetails) <*> obj .: "transactions")
    )

instance HsJSONPB.ToJSON TransactionDetails where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON TransactionDetails where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema TransactionDetails where
  declareNamedSchema _ =
    do
      let declare_transactions = HsJSONPB.declareSchemaRef
      transactionDetailsTransactions <- declare_transactions Proxy.Proxy
      let _ =
            Hs.pure TransactionDetails
              <*> HsJSONPB.asProxy declare_transactions
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "TransactionDetails",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "transactions",
                            transactionDetailsTransactions
                          )
                        ]
                  }
            }
        )

data FeeLimit = FeeLimit {feeLimitLimit :: Hs.Maybe FeeLimitLimit}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FeeLimit where
  nameOf _ = (Hs.fromString "FeeLimit")

instance HsProtobuf.HasDefault FeeLimit

instance HsProtobuf.Message FeeLimit where
  encodeMessage _ FeeLimit {feeLimitLimit = feeLimitLimit} =
    ( Hs.mconcat
        [ case feeLimitLimit of
            Hs.Nothing -> Hs.mempty
            Hs.Just x ->
              case x of
                FeeLimitLimitFixed y ->
                  ( HsProtobuf.encodeMessageField
                      (HsProtobuf.FieldNumber 1)
                      (HsProtobuf.ForceEmit y)
                  )
                FeeLimitLimitFixedMsat y ->
                  ( HsProtobuf.encodeMessageField
                      (HsProtobuf.FieldNumber 3)
                      (HsProtobuf.ForceEmit y)
                  )
                FeeLimitLimitPercent y ->
                  ( HsProtobuf.encodeMessageField
                      (HsProtobuf.FieldNumber 2)
                      (HsProtobuf.ForceEmit y)
                  )
        ]
    )
  decodeMessage _ =
    (Hs.pure FeeLimit)
      <*> ( HsProtobuf.oneof
              Hs.Nothing
              [ ( (HsProtobuf.FieldNumber 1),
                  (Hs.pure (Hs.Just Hs.. FeeLimitLimitFixed))
                    <*> HsProtobuf.decodeMessageField
                ),
                ( (HsProtobuf.FieldNumber 3),
                  (Hs.pure (Hs.Just Hs.. FeeLimitLimitFixedMsat))
                    <*> HsProtobuf.decodeMessageField
                ),
                ( (HsProtobuf.FieldNumber 2),
                  (Hs.pure (Hs.Just Hs.. FeeLimitLimitPercent))
                    <*> HsProtobuf.decodeMessageField
                )
              ]
          )
  dotProto _ = []

instance HsJSONPB.ToJSONPB FeeLimit where
  toJSONPB (FeeLimit f1_or_f3_or_f2) =
    ( HsJSONPB.object
        [ ( let encodeLimit =
                  ( case f1_or_f3_or_f2 of
                      Hs.Just (FeeLimitLimitFixed f1) -> (HsJSONPB.pair "fixed" f1)
                      Hs.Just (FeeLimitLimitFixedMsat f3) ->
                        (HsJSONPB.pair "fixed_msat" f3)
                      Hs.Just (FeeLimitLimitPercent f2) -> (HsJSONPB.pair "percent" f2)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then ("limit" .= (HsJSONPB.objectOrNull [encodeLimit] options)) options
                    else encodeLimit options
          )
        ]
    )
  toEncodingPB (FeeLimit f1_or_f3_or_f2) =
    ( HsJSONPB.pairs
        [ ( let encodeLimit =
                  ( case f1_or_f3_or_f2 of
                      Hs.Just (FeeLimitLimitFixed f1) -> (HsJSONPB.pair "fixed" f1)
                      Hs.Just (FeeLimitLimitFixedMsat f3) ->
                        (HsJSONPB.pair "fixed_msat" f3)
                      Hs.Just (FeeLimitLimitPercent f2) -> (HsJSONPB.pair "percent" f2)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then ("limit" .= (HsJSONPB.pairsOrNull [encodeLimit] options)) options
                    else encodeLimit options
          )
        ]
    )

instance HsJSONPB.FromJSONPB FeeLimit where
  parseJSONPB =
    ( HsJSONPB.withObject
        "FeeLimit"
        ( \obj ->
            (Hs.pure FeeLimit)
              <*> ( let parseLimit parseObj =
                          Hs.msum
                            [ Hs.Just Hs.. FeeLimitLimitFixed
                                <$> (HsJSONPB.parseField parseObj "fixed"),
                              Hs.Just Hs.. FeeLimitLimitFixedMsat
                                <$> (HsJSONPB.parseField parseObj "fixed_msat"),
                              Hs.Just Hs.. FeeLimitLimitPercent
                                <$> (HsJSONPB.parseField parseObj "percent"),
                              Hs.pure Hs.Nothing
                            ]
                     in ((obj .: "limit") Hs.>>= (HsJSONPB.withObject "limit" parseLimit))
                          <|> (parseLimit obj)
                  )
        )
    )

instance HsJSONPB.ToJSON FeeLimit where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON FeeLimit where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema FeeLimit where
  declareNamedSchema _ =
    do
      let declare_limit = HsJSONPB.declareSchemaRef
      feeLimitLimit <- declare_limit Proxy.Proxy
      let _ = Hs.pure FeeLimit <*> HsJSONPB.asProxy declare_limit
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "FeeLimit",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("limit", feeLimitLimit)]
                  }
            }
        )

data FeeLimitLimit
  = FeeLimitLimitFixed Hs.Int64
  | FeeLimitLimitFixedMsat Hs.Int64
  | FeeLimitLimitPercent Hs.Int64
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FeeLimitLimit where
  nameOf _ = (Hs.fromString "FeeLimitLimit")

instance HsJSONPB.ToSchema FeeLimitLimit where
  declareNamedSchema _ =
    do
      let declare_fixed = HsJSONPB.declareSchemaRef
      feeLimitLimitFixed <- declare_fixed Proxy.Proxy
      let _ =
            Hs.pure FeeLimitLimitFixed
              <*> HsJSONPB.asProxy declare_fixed
      let declare_fixed_msat = HsJSONPB.declareSchemaRef
      feeLimitLimitFixedMsat <- declare_fixed_msat Proxy.Proxy
      let _ =
            Hs.pure FeeLimitLimitFixedMsat
              <*> HsJSONPB.asProxy declare_fixed_msat
      let declare_percent = HsJSONPB.declareSchemaRef
      feeLimitLimitPercent <- declare_percent Proxy.Proxy
      let _ =
            Hs.pure FeeLimitLimitPercent
              <*> HsJSONPB.asProxy declare_percent
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "FeeLimitLimit",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("fixed", feeLimitLimitFixed),
                          ("fixed_msat", feeLimitLimitFixedMsat),
                          ("percent", feeLimitLimitPercent)
                        ],
                    HsJSONPB._schemaMinProperties = Hs.Just 1,
                    HsJSONPB._schemaMaxProperties = Hs.Just 1
                  }
            }
        )

data SendRequest
  = SendRequest
      { sendRequestDest :: Hs.ByteString,
        sendRequestDestString :: Hs.Text,
        sendRequestAmt :: Hs.Int64,
        sendRequestAmtMsat :: Hs.Int64,
        sendRequestPaymentHash :: Hs.ByteString,
        sendRequestPaymentHashString :: Hs.Text,
        sendRequestPaymentRequest :: Hs.Text,
        sendRequestFinalCltvDelta :: Hs.Int32,
        sendRequestFeeLimit :: Hs.Maybe LndGrpc.FeeLimit,
        sendRequestOutgoingChanId :: Hs.Word64,
        sendRequestLastHopPubkey :: Hs.ByteString,
        sendRequestCltvLimit :: Hs.Word32,
        sendRequestDestCustomRecords :: Hs.Map Hs.Word64 Hs.ByteString,
        sendRequestAllowSelfPayment :: Hs.Bool,
        sendRequestDestFeatures ::
          Hs.Vector
            (HsProtobuf.Enumerated LndGrpc.FeatureBit)
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SendRequest where
  nameOf _ = (Hs.fromString "SendRequest")

instance HsProtobuf.HasDefault SendRequest

instance HsProtobuf.Message SendRequest where
  encodeMessage
    _
    SendRequest
      { sendRequestDest = sendRequestDest,
        sendRequestDestString = sendRequestDestString,
        sendRequestAmt = sendRequestAmt,
        sendRequestAmtMsat = sendRequestAmtMsat,
        sendRequestPaymentHash = sendRequestPaymentHash,
        sendRequestPaymentHashString = sendRequestPaymentHashString,
        sendRequestPaymentRequest = sendRequestPaymentRequest,
        sendRequestFinalCltvDelta = sendRequestFinalCltvDelta,
        sendRequestFeeLimit = sendRequestFeeLimit,
        sendRequestOutgoingChanId = sendRequestOutgoingChanId,
        sendRequestLastHopPubkey = sendRequestLastHopPubkey,
        sendRequestCltvLimit = sendRequestCltvLimit,
        sendRequestDestCustomRecords = sendRequestDestCustomRecords,
        sendRequestAllowSelfPayment = sendRequestAllowSelfPayment,
        sendRequestDestFeatures = sendRequestDestFeatures
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                sendRequestDest
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                sendRequestDestString
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                sendRequestAmt
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 12)
                sendRequestAmtMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                sendRequestPaymentHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                sendRequestPaymentHashString
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                sendRequestPaymentRequest
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                sendRequestFinalCltvDelta
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                ( Hs.coerce @(Hs.Maybe LndGrpc.FeeLimit)
                    @(HsProtobuf.Nested LndGrpc.FeeLimit)
                    sendRequestFeeLimit
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                sendRequestOutgoingChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 13)
                sendRequestLastHopPubkey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                sendRequestCltvLimit
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                sendRequestDestCustomRecords
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 14)
                sendRequestAllowSelfPayment
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 15)
                ( Hs.coerce @(Hs.Vector (HsProtobuf.Enumerated LndGrpc.FeatureBit))
                    @(HsProtobuf.PackedVec (HsProtobuf.Enumerated LndGrpc.FeatureBit))
                    sendRequestDestFeatures
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SendRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 12)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.FeeLimit))
              @(_ (Hs.Maybe LndGrpc.FeeLimit))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 8)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 13)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 10)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 11)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 14)
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.PackedVec (HsProtobuf.Enumerated LndGrpc.FeatureBit)))
              @(_ (Hs.Vector (HsProtobuf.Enumerated LndGrpc.FeatureBit)))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 15)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "dest")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "dest_string")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amt")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 12)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amt_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "payment_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "payment_hash_string")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "payment_request")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "final_cltv_delta")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "FeeLimit")))
          (HsProtobuf.Single "fee_limit")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "outgoing_chan_id")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 13)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "last_hop_pubkey")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "cltv_limit")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          (HsProtobuf.Map HsProtobuf.UInt64 HsProtobuf.Bytes)
          (HsProtobuf.Single "dest_custom_records")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 14)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "allow_self_payment")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 15)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "FeatureBit"))
          )
          (HsProtobuf.Single "dest_features")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SendRequest where
  toJSONPB (SendRequest f1 f2 f3 f12 f4 f5 f6 f7 f8 f9 f13 f10 f11 f14 f15) =
    ( HsJSONPB.object
        [ "dest" .= f1,
          "dest_string" .= f2,
          "amt" .= f3,
          "amt_msat" .= f12,
          "payment_hash" .= f4,
          "payment_hash_string" .= f5,
          "payment_request" .= f6,
          "final_cltv_delta" .= f7,
          "fee_limit" .= f8,
          "outgoing_chan_id" .= f9,
          "last_hop_pubkey" .= f13,
          "cltv_limit" .= f10,
          "dest_custom_records" .= f11,
          "allow_self_payment" .= f14,
          "dest_features" .= f15
        ]
    )
  toEncodingPB (SendRequest f1 f2 f3 f12 f4 f5 f6 f7 f8 f9 f13 f10 f11 f14 f15) =
    ( HsJSONPB.pairs
        [ "dest" .= f1,
          "dest_string" .= f2,
          "amt" .= f3,
          "amt_msat" .= f12,
          "payment_hash" .= f4,
          "payment_hash_string" .= f5,
          "payment_request" .= f6,
          "final_cltv_delta" .= f7,
          "fee_limit" .= f8,
          "outgoing_chan_id" .= f9,
          "last_hop_pubkey" .= f13,
          "cltv_limit" .= f10,
          "dest_custom_records" .= f11,
          "allow_self_payment" .= f14,
          "dest_features" .= f15
        ]
    )

instance HsJSONPB.FromJSONPB SendRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SendRequest"
        ( \obj ->
            (Hs.pure SendRequest) <*> obj .: "dest" <*> obj .: "dest_string"
              <*> obj .: "amt"
              <*> obj .: "amt_msat"
              <*> obj .: "payment_hash"
              <*> obj .: "payment_hash_string"
              <*> obj .: "payment_request"
              <*> obj .: "final_cltv_delta"
              <*> obj .: "fee_limit"
              <*> obj .: "outgoing_chan_id"
              <*> obj .: "last_hop_pubkey"
              <*> obj .: "cltv_limit"
              <*> obj .: "dest_custom_records"
              <*> obj .: "allow_self_payment"
              <*> obj .: "dest_features"
        )
    )

instance HsJSONPB.ToJSON SendRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SendRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SendRequest where
  declareNamedSchema _ =
    do
      let declare_dest = HsJSONPB.declareSchemaRef
      sendRequestDest <- declare_dest Proxy.Proxy
      let declare_dest_string = HsJSONPB.declareSchemaRef
      sendRequestDestString <- declare_dest_string Proxy.Proxy
      let declare_amt = HsJSONPB.declareSchemaRef
      sendRequestAmt <- declare_amt Proxy.Proxy
      let declare_amt_msat = HsJSONPB.declareSchemaRef
      sendRequestAmtMsat <- declare_amt_msat Proxy.Proxy
      let declare_payment_hash = HsJSONPB.declareSchemaRef
      sendRequestPaymentHash <- declare_payment_hash Proxy.Proxy
      let declare_payment_hash_string = HsJSONPB.declareSchemaRef
      sendRequestPaymentHashString <-
        declare_payment_hash_string
          Proxy.Proxy
      let declare_payment_request = HsJSONPB.declareSchemaRef
      sendRequestPaymentRequest <- declare_payment_request Proxy.Proxy
      let declare_final_cltv_delta = HsJSONPB.declareSchemaRef
      sendRequestFinalCltvDelta <- declare_final_cltv_delta Proxy.Proxy
      let declare_fee_limit = HsJSONPB.declareSchemaRef
      sendRequestFeeLimit <- declare_fee_limit Proxy.Proxy
      let declare_outgoing_chan_id = HsJSONPB.declareSchemaRef
      sendRequestOutgoingChanId <- declare_outgoing_chan_id Proxy.Proxy
      let declare_last_hop_pubkey = HsJSONPB.declareSchemaRef
      sendRequestLastHopPubkey <- declare_last_hop_pubkey Proxy.Proxy
      let declare_cltv_limit = HsJSONPB.declareSchemaRef
      sendRequestCltvLimit <- declare_cltv_limit Proxy.Proxy
      let declare_dest_custom_records = HsJSONPB.declareSchemaRef
      sendRequestDestCustomRecords <-
        declare_dest_custom_records
          Proxy.Proxy
      let declare_allow_self_payment = HsJSONPB.declareSchemaRef
      sendRequestAllowSelfPayment <-
        declare_allow_self_payment
          Proxy.Proxy
      let declare_dest_features = HsJSONPB.declareSchemaRef
      sendRequestDestFeatures <- declare_dest_features Proxy.Proxy
      let _ =
            Hs.pure SendRequest <*> HsJSONPB.asProxy declare_dest
              <*> HsJSONPB.asProxy declare_dest_string
              <*> HsJSONPB.asProxy declare_amt
              <*> HsJSONPB.asProxy declare_amt_msat
              <*> HsJSONPB.asProxy declare_payment_hash
              <*> HsJSONPB.asProxy declare_payment_hash_string
              <*> HsJSONPB.asProxy declare_payment_request
              <*> HsJSONPB.asProxy declare_final_cltv_delta
              <*> HsJSONPB.asProxy declare_fee_limit
              <*> HsJSONPB.asProxy declare_outgoing_chan_id
              <*> HsJSONPB.asProxy declare_last_hop_pubkey
              <*> HsJSONPB.asProxy declare_cltv_limit
              <*> HsJSONPB.asProxy declare_dest_custom_records
              <*> HsJSONPB.asProxy declare_allow_self_payment
              <*> HsJSONPB.asProxy declare_dest_features
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SendRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("dest", sendRequestDest),
                          ("dest_string", sendRequestDestString),
                          ("amt", sendRequestAmt),
                          ("amt_msat", sendRequestAmtMsat),
                          ("payment_hash", sendRequestPaymentHash),
                          ( "payment_hash_string",
                            sendRequestPaymentHashString
                          ),
                          ( "payment_request",
                            sendRequestPaymentRequest
                          ),
                          ( "final_cltv_delta",
                            sendRequestFinalCltvDelta
                          ),
                          ("fee_limit", sendRequestFeeLimit),
                          ( "outgoing_chan_id",
                            sendRequestOutgoingChanId
                          ),
                          ( "last_hop_pubkey",
                            sendRequestLastHopPubkey
                          ),
                          ("cltv_limit", sendRequestCltvLimit),
                          ( "dest_custom_records",
                            sendRequestDestCustomRecords
                          ),
                          ( "allow_self_payment",
                            sendRequestAllowSelfPayment
                          ),
                          ( "dest_features",
                            sendRequestDestFeatures
                          )
                        ]
                  }
            }
        )

data SendResponse
  = SendResponse
      { sendResponsePaymentError ::
          Hs.Text,
        sendResponsePaymentPreimage :: Hs.ByteString,
        sendResponsePaymentRoute :: Hs.Maybe LndGrpc.Route,
        sendResponsePaymentHash :: Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SendResponse where
  nameOf _ = (Hs.fromString "SendResponse")

instance HsProtobuf.HasDefault SendResponse

instance HsProtobuf.Message SendResponse where
  encodeMessage
    _
    SendResponse
      { sendResponsePaymentError = sendResponsePaymentError,
        sendResponsePaymentPreimage = sendResponsePaymentPreimage,
        sendResponsePaymentRoute = sendResponsePaymentRoute,
        sendResponsePaymentHash = sendResponsePaymentHash
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                sendResponsePaymentError
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                sendResponsePaymentPreimage
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                ( Hs.coerce @(Hs.Maybe LndGrpc.Route)
                    @(HsProtobuf.Nested LndGrpc.Route)
                    sendResponsePaymentRoute
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                sendResponsePaymentHash
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SendResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.Route))
              @(_ (Hs.Maybe LndGrpc.Route))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "payment_error")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "payment_preimage")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Route")))
          (HsProtobuf.Single "payment_route")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "payment_hash")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SendResponse where
  toJSONPB (SendResponse f1 f2 f3 f4) =
    ( HsJSONPB.object
        [ "payment_error" .= f1,
          "payment_preimage" .= f2,
          "payment_route" .= f3,
          "payment_hash" .= f4
        ]
    )
  toEncodingPB (SendResponse f1 f2 f3 f4) =
    ( HsJSONPB.pairs
        [ "payment_error" .= f1,
          "payment_preimage" .= f2,
          "payment_route" .= f3,
          "payment_hash" .= f4
        ]
    )

instance HsJSONPB.FromJSONPB SendResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SendResponse"
        ( \obj ->
            (Hs.pure SendResponse) <*> obj .: "payment_error"
              <*> obj .: "payment_preimage"
              <*> obj .: "payment_route"
              <*> obj .: "payment_hash"
        )
    )

instance HsJSONPB.ToJSON SendResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SendResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SendResponse where
  declareNamedSchema _ =
    do
      let declare_payment_error = HsJSONPB.declareSchemaRef
      sendResponsePaymentError <- declare_payment_error Proxy.Proxy
      let declare_payment_preimage = HsJSONPB.declareSchemaRef
      sendResponsePaymentPreimage <- declare_payment_preimage Proxy.Proxy
      let declare_payment_route = HsJSONPB.declareSchemaRef
      sendResponsePaymentRoute <- declare_payment_route Proxy.Proxy
      let declare_payment_hash = HsJSONPB.declareSchemaRef
      sendResponsePaymentHash <- declare_payment_hash Proxy.Proxy
      let _ =
            Hs.pure SendResponse
              <*> HsJSONPB.asProxy declare_payment_error
              <*> HsJSONPB.asProxy declare_payment_preimage
              <*> HsJSONPB.asProxy declare_payment_route
              <*> HsJSONPB.asProxy declare_payment_hash
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SendResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("payment_error", sendResponsePaymentError),
                          ( "payment_preimage",
                            sendResponsePaymentPreimage
                          ),
                          ("payment_route", sendResponsePaymentRoute),
                          ( "payment_hash",
                            sendResponsePaymentHash
                          )
                        ]
                  }
            }
        )

data SendToRouteRequest
  = SendToRouteRequest
      { sendToRouteRequestPaymentHash ::
          Hs.ByteString,
        sendToRouteRequestPaymentHashString :: Hs.Text,
        sendToRouteRequestRoute :: Hs.Maybe LndGrpc.Route
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SendToRouteRequest where
  nameOf _ = (Hs.fromString "SendToRouteRequest")

instance HsProtobuf.HasDefault SendToRouteRequest

instance HsProtobuf.Message SendToRouteRequest where
  encodeMessage
    _
    SendToRouteRequest
      { sendToRouteRequestPaymentHash =
          sendToRouteRequestPaymentHash,
        sendToRouteRequestPaymentHashString =
          sendToRouteRequestPaymentHashString,
        sendToRouteRequestRoute = sendToRouteRequestRoute
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                sendToRouteRequestPaymentHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                sendToRouteRequestPaymentHashString
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                ( Hs.coerce @(Hs.Maybe LndGrpc.Route)
                    @(HsProtobuf.Nested LndGrpc.Route)
                    sendToRouteRequestRoute
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SendToRouteRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.Route))
              @(_ (Hs.Maybe LndGrpc.Route))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "payment_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "payment_hash_string")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Route")))
          (HsProtobuf.Single "route")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SendToRouteRequest where
  toJSONPB (SendToRouteRequest f1 f2 f4) =
    ( HsJSONPB.object
        ["payment_hash" .= f1, "payment_hash_string" .= f2, "route" .= f4]
    )
  toEncodingPB (SendToRouteRequest f1 f2 f4) =
    ( HsJSONPB.pairs
        ["payment_hash" .= f1, "payment_hash_string" .= f2, "route" .= f4]
    )

instance HsJSONPB.FromJSONPB SendToRouteRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SendToRouteRequest"
        ( \obj ->
            (Hs.pure SendToRouteRequest) <*> obj .: "payment_hash"
              <*> obj .: "payment_hash_string"
              <*> obj .: "route"
        )
    )

instance HsJSONPB.ToJSON SendToRouteRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SendToRouteRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SendToRouteRequest where
  declareNamedSchema _ =
    do
      let declare_payment_hash = HsJSONPB.declareSchemaRef
      sendToRouteRequestPaymentHash <- declare_payment_hash Proxy.Proxy
      let declare_payment_hash_string = HsJSONPB.declareSchemaRef
      sendToRouteRequestPaymentHashString <-
        declare_payment_hash_string
          Proxy.Proxy
      let declare_route = HsJSONPB.declareSchemaRef
      sendToRouteRequestRoute <- declare_route Proxy.Proxy
      let _ =
            Hs.pure SendToRouteRequest
              <*> HsJSONPB.asProxy declare_payment_hash
              <*> HsJSONPB.asProxy declare_payment_hash_string
              <*> HsJSONPB.asProxy declare_route
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SendToRouteRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "payment_hash",
                            sendToRouteRequestPaymentHash
                          ),
                          ( "payment_hash_string",
                            sendToRouteRequestPaymentHashString
                          ),
                          ("route", sendToRouteRequestRoute)
                        ]
                  }
            }
        )

data ChannelAcceptRequest
  = ChannelAcceptRequest
      { channelAcceptRequestNodePubkey ::
          Hs.ByteString,
        channelAcceptRequestChainHash :: Hs.ByteString,
        channelAcceptRequestPendingChanId :: Hs.ByteString,
        channelAcceptRequestFundingAmt :: Hs.Word64,
        channelAcceptRequestPushAmt :: Hs.Word64,
        channelAcceptRequestDustLimit :: Hs.Word64,
        channelAcceptRequestMaxValueInFlight :: Hs.Word64,
        channelAcceptRequestChannelReserve :: Hs.Word64,
        channelAcceptRequestMinHtlc :: Hs.Word64,
        channelAcceptRequestFeePerKw :: Hs.Word64,
        channelAcceptRequestCsvDelay :: Hs.Word32,
        channelAcceptRequestMaxAcceptedHtlcs :: Hs.Word32,
        channelAcceptRequestChannelFlags :: Hs.Word32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelAcceptRequest where
  nameOf _ = (Hs.fromString "ChannelAcceptRequest")

instance HsProtobuf.HasDefault ChannelAcceptRequest

instance HsProtobuf.Message ChannelAcceptRequest where
  encodeMessage
    _
    ChannelAcceptRequest
      { channelAcceptRequestNodePubkey =
          channelAcceptRequestNodePubkey,
        channelAcceptRequestChainHash = channelAcceptRequestChainHash,
        channelAcceptRequestPendingChanId =
          channelAcceptRequestPendingChanId,
        channelAcceptRequestFundingAmt = channelAcceptRequestFundingAmt,
        channelAcceptRequestPushAmt = channelAcceptRequestPushAmt,
        channelAcceptRequestDustLimit = channelAcceptRequestDustLimit,
        channelAcceptRequestMaxValueInFlight =
          channelAcceptRequestMaxValueInFlight,
        channelAcceptRequestChannelReserve =
          channelAcceptRequestChannelReserve,
        channelAcceptRequestMinHtlc = channelAcceptRequestMinHtlc,
        channelAcceptRequestFeePerKw = channelAcceptRequestFeePerKw,
        channelAcceptRequestCsvDelay = channelAcceptRequestCsvDelay,
        channelAcceptRequestMaxAcceptedHtlcs =
          channelAcceptRequestMaxAcceptedHtlcs,
        channelAcceptRequestChannelFlags =
          channelAcceptRequestChannelFlags
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                channelAcceptRequestNodePubkey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                channelAcceptRequestChainHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                channelAcceptRequestPendingChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                channelAcceptRequestFundingAmt
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                channelAcceptRequestPushAmt
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                channelAcceptRequestDustLimit
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                channelAcceptRequestMaxValueInFlight
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                channelAcceptRequestChannelReserve
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                channelAcceptRequestMinHtlc
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                channelAcceptRequestFeePerKw
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                channelAcceptRequestCsvDelay
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 12)
                channelAcceptRequestMaxAcceptedHtlcs
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 13)
                channelAcceptRequestChannelFlags
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChannelAcceptRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 10)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 11)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 12)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 13)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "node_pubkey")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "chain_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "pending_chan_id")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "funding_amt")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "push_amt")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "dust_limit")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "max_value_in_flight")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "channel_reserve")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "min_htlc")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "fee_per_kw")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "csv_delay")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 12)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "max_accepted_htlcs")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 13)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "channel_flags")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChannelAcceptRequest where
  toJSONPB (ChannelAcceptRequest f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13) =
    ( HsJSONPB.object
        [ "node_pubkey" .= f1,
          "chain_hash" .= f2,
          "pending_chan_id" .= f3,
          "funding_amt" .= f4,
          "push_amt" .= f5,
          "dust_limit" .= f6,
          "max_value_in_flight" .= f7,
          "channel_reserve" .= f8,
          "min_htlc" .= f9,
          "fee_per_kw" .= f10,
          "csv_delay" .= f11,
          "max_accepted_htlcs" .= f12,
          "channel_flags" .= f13
        ]
    )
  toEncodingPB (ChannelAcceptRequest f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13) =
    ( HsJSONPB.pairs
        [ "node_pubkey" .= f1,
          "chain_hash" .= f2,
          "pending_chan_id" .= f3,
          "funding_amt" .= f4,
          "push_amt" .= f5,
          "dust_limit" .= f6,
          "max_value_in_flight" .= f7,
          "channel_reserve" .= f8,
          "min_htlc" .= f9,
          "fee_per_kw" .= f10,
          "csv_delay" .= f11,
          "max_accepted_htlcs" .= f12,
          "channel_flags" .= f13
        ]
    )

instance HsJSONPB.FromJSONPB ChannelAcceptRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelAcceptRequest"
        ( \obj ->
            (Hs.pure ChannelAcceptRequest) <*> obj .: "node_pubkey"
              <*> obj .: "chain_hash"
              <*> obj .: "pending_chan_id"
              <*> obj .: "funding_amt"
              <*> obj .: "push_amt"
              <*> obj .: "dust_limit"
              <*> obj .: "max_value_in_flight"
              <*> obj .: "channel_reserve"
              <*> obj .: "min_htlc"
              <*> obj .: "fee_per_kw"
              <*> obj .: "csv_delay"
              <*> obj .: "max_accepted_htlcs"
              <*> obj .: "channel_flags"
        )
    )

instance HsJSONPB.ToJSON ChannelAcceptRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelAcceptRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelAcceptRequest where
  declareNamedSchema _ =
    do
      let declare_node_pubkey = HsJSONPB.declareSchemaRef
      channelAcceptRequestNodePubkey <- declare_node_pubkey Proxy.Proxy
      let declare_chain_hash = HsJSONPB.declareSchemaRef
      channelAcceptRequestChainHash <- declare_chain_hash Proxy.Proxy
      let declare_pending_chan_id = HsJSONPB.declareSchemaRef
      channelAcceptRequestPendingChanId <-
        declare_pending_chan_id
          Proxy.Proxy
      let declare_funding_amt = HsJSONPB.declareSchemaRef
      channelAcceptRequestFundingAmt <- declare_funding_amt Proxy.Proxy
      let declare_push_amt = HsJSONPB.declareSchemaRef
      channelAcceptRequestPushAmt <- declare_push_amt Proxy.Proxy
      let declare_dust_limit = HsJSONPB.declareSchemaRef
      channelAcceptRequestDustLimit <- declare_dust_limit Proxy.Proxy
      let declare_max_value_in_flight = HsJSONPB.declareSchemaRef
      channelAcceptRequestMaxValueInFlight <-
        declare_max_value_in_flight
          Proxy.Proxy
      let declare_channel_reserve = HsJSONPB.declareSchemaRef
      channelAcceptRequestChannelReserve <-
        declare_channel_reserve
          Proxy.Proxy
      let declare_min_htlc = HsJSONPB.declareSchemaRef
      channelAcceptRequestMinHtlc <- declare_min_htlc Proxy.Proxy
      let declare_fee_per_kw = HsJSONPB.declareSchemaRef
      channelAcceptRequestFeePerKw <- declare_fee_per_kw Proxy.Proxy
      let declare_csv_delay = HsJSONPB.declareSchemaRef
      channelAcceptRequestCsvDelay <- declare_csv_delay Proxy.Proxy
      let declare_max_accepted_htlcs = HsJSONPB.declareSchemaRef
      channelAcceptRequestMaxAcceptedHtlcs <-
        declare_max_accepted_htlcs
          Proxy.Proxy
      let declare_channel_flags = HsJSONPB.declareSchemaRef
      channelAcceptRequestChannelFlags <-
        declare_channel_flags
          Proxy.Proxy
      let _ =
            Hs.pure ChannelAcceptRequest
              <*> HsJSONPB.asProxy declare_node_pubkey
              <*> HsJSONPB.asProxy declare_chain_hash
              <*> HsJSONPB.asProxy declare_pending_chan_id
              <*> HsJSONPB.asProxy declare_funding_amt
              <*> HsJSONPB.asProxy declare_push_amt
              <*> HsJSONPB.asProxy declare_dust_limit
              <*> HsJSONPB.asProxy declare_max_value_in_flight
              <*> HsJSONPB.asProxy declare_channel_reserve
              <*> HsJSONPB.asProxy declare_min_htlc
              <*> HsJSONPB.asProxy declare_fee_per_kw
              <*> HsJSONPB.asProxy declare_csv_delay
              <*> HsJSONPB.asProxy declare_max_accepted_htlcs
              <*> HsJSONPB.asProxy declare_channel_flags
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelAcceptRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "node_pubkey",
                            channelAcceptRequestNodePubkey
                          ),
                          ( "chain_hash",
                            channelAcceptRequestChainHash
                          ),
                          ( "pending_chan_id",
                            channelAcceptRequestPendingChanId
                          ),
                          ( "funding_amt",
                            channelAcceptRequestFundingAmt
                          ),
                          ("push_amt", channelAcceptRequestPushAmt),
                          ( "dust_limit",
                            channelAcceptRequestDustLimit
                          ),
                          ( "max_value_in_flight",
                            channelAcceptRequestMaxValueInFlight
                          ),
                          ( "channel_reserve",
                            channelAcceptRequestChannelReserve
                          ),
                          ("min_htlc", channelAcceptRequestMinHtlc),
                          ( "fee_per_kw",
                            channelAcceptRequestFeePerKw
                          ),
                          ("csv_delay", channelAcceptRequestCsvDelay),
                          ( "max_accepted_htlcs",
                            channelAcceptRequestMaxAcceptedHtlcs
                          ),
                          ( "channel_flags",
                            channelAcceptRequestChannelFlags
                          )
                        ]
                  }
            }
        )

data ChannelAcceptResponse
  = ChannelAcceptResponse
      { channelAcceptResponseAccept ::
          Hs.Bool,
        channelAcceptResponsePendingChanId ::
          Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelAcceptResponse where
  nameOf _ = (Hs.fromString "ChannelAcceptResponse")

instance HsProtobuf.HasDefault ChannelAcceptResponse

instance HsProtobuf.Message ChannelAcceptResponse where
  encodeMessage
    _
    ChannelAcceptResponse
      { channelAcceptResponseAccept =
          channelAcceptResponseAccept,
        channelAcceptResponsePendingChanId =
          channelAcceptResponsePendingChanId
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                channelAcceptResponseAccept
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                channelAcceptResponsePendingChanId
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChannelAcceptResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "accept")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "pending_chan_id")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChannelAcceptResponse where
  toJSONPB (ChannelAcceptResponse f1 f2) =
    (HsJSONPB.object ["accept" .= f1, "pending_chan_id" .= f2])
  toEncodingPB (ChannelAcceptResponse f1 f2) =
    (HsJSONPB.pairs ["accept" .= f1, "pending_chan_id" .= f2])

instance HsJSONPB.FromJSONPB ChannelAcceptResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelAcceptResponse"
        ( \obj ->
            (Hs.pure ChannelAcceptResponse) <*> obj .: "accept"
              <*> obj .: "pending_chan_id"
        )
    )

instance HsJSONPB.ToJSON ChannelAcceptResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelAcceptResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelAcceptResponse where
  declareNamedSchema _ =
    do
      let declare_accept = HsJSONPB.declareSchemaRef
      channelAcceptResponseAccept <- declare_accept Proxy.Proxy
      let declare_pending_chan_id = HsJSONPB.declareSchemaRef
      channelAcceptResponsePendingChanId <-
        declare_pending_chan_id
          Proxy.Proxy
      let _ =
            Hs.pure ChannelAcceptResponse
              <*> HsJSONPB.asProxy declare_accept
              <*> HsJSONPB.asProxy declare_pending_chan_id
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelAcceptResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("accept", channelAcceptResponseAccept),
                          ( "pending_chan_id",
                            channelAcceptResponsePendingChanId
                          )
                        ]
                  }
            }
        )

data ChannelPoint
  = ChannelPoint
      { channelPointFundingTxid ::
          Hs.Maybe
            ChannelPointFundingTxid,
        channelPointOutputIndex :: Hs.Word32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelPoint where
  nameOf _ = (Hs.fromString "ChannelPoint")

instance HsProtobuf.HasDefault ChannelPoint

instance HsProtobuf.Message ChannelPoint where
  encodeMessage
    _
    ChannelPoint
      { channelPointFundingTxid = channelPointFundingTxid,
        channelPointOutputIndex = channelPointOutputIndex
      } =
      ( Hs.mconcat
          [ case channelPointFundingTxid of
              Hs.Nothing -> Hs.mempty
              Hs.Just x ->
                case x of
                  ChannelPointFundingTxidFundingTxidBytes y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 1)
                        (HsProtobuf.ForceEmit y)
                    )
                  ChannelPointFundingTxidFundingTxidStr y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 2)
                        (HsProtobuf.ForceEmit y)
                    ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                channelPointOutputIndex
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChannelPoint)
      <*> ( HsProtobuf.oneof
              Hs.Nothing
              [ ( (HsProtobuf.FieldNumber 1),
                  (Hs.pure (Hs.Just Hs.. ChannelPointFundingTxidFundingTxidBytes))
                    <*> HsProtobuf.decodeMessageField
                ),
                ( (HsProtobuf.FieldNumber 2),
                  (Hs.pure (Hs.Just Hs.. ChannelPointFundingTxidFundingTxidStr))
                    <*> HsProtobuf.decodeMessageField
                )
              ]
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "output_index")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChannelPoint where
  toJSONPB (ChannelPoint f1_or_f2 f3) =
    ( HsJSONPB.object
        [ ( let encodeFunding_txid =
                  ( case f1_or_f2 of
                      Hs.Just (ChannelPointFundingTxidFundingTxidBytes f1) ->
                        (HsJSONPB.pair "funding_txid_bytes" f1)
                      Hs.Just (ChannelPointFundingTxidFundingTxidStr f2) ->
                        (HsJSONPB.pair "funding_txid_str" f2)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then
                      ( "funding_txid"
                          .= (HsJSONPB.objectOrNull [encodeFunding_txid] options)
                      )
                        options
                    else encodeFunding_txid options
          ),
          "output_index" .= f3
        ]
    )
  toEncodingPB (ChannelPoint f1_or_f2 f3) =
    ( HsJSONPB.pairs
        [ ( let encodeFunding_txid =
                  ( case f1_or_f2 of
                      Hs.Just (ChannelPointFundingTxidFundingTxidBytes f1) ->
                        (HsJSONPB.pair "funding_txid_bytes" f1)
                      Hs.Just (ChannelPointFundingTxidFundingTxidStr f2) ->
                        (HsJSONPB.pair "funding_txid_str" f2)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then
                      ( "funding_txid"
                          .= (HsJSONPB.pairsOrNull [encodeFunding_txid] options)
                      )
                        options
                    else encodeFunding_txid options
          ),
          "output_index" .= f3
        ]
    )

instance HsJSONPB.FromJSONPB ChannelPoint where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelPoint"
        ( \obj ->
            (Hs.pure ChannelPoint)
              <*> ( let parseFunding_txid parseObj =
                          Hs.msum
                            [ Hs.Just Hs.. ChannelPointFundingTxidFundingTxidBytes
                                <$> (HsJSONPB.parseField parseObj "funding_txid_bytes"),
                              Hs.Just Hs.. ChannelPointFundingTxidFundingTxidStr
                                <$> (HsJSONPB.parseField parseObj "funding_txid_str"),
                              Hs.pure Hs.Nothing
                            ]
                     in ( (obj .: "funding_txid")
                            Hs.>>= (HsJSONPB.withObject "funding_txid" parseFunding_txid)
                        )
                          <|> (parseFunding_txid obj)
                  )
              <*> obj .: "output_index"
        )
    )

instance HsJSONPB.ToJSON ChannelPoint where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelPoint where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelPoint where
  declareNamedSchema _ =
    do
      let declare_funding_txid = HsJSONPB.declareSchemaRef
      channelPointFundingTxid <- declare_funding_txid Proxy.Proxy
      let declare_output_index = HsJSONPB.declareSchemaRef
      channelPointOutputIndex <- declare_output_index Proxy.Proxy
      let _ =
            Hs.pure ChannelPoint
              <*> HsJSONPB.asProxy declare_funding_txid
              <*> HsJSONPB.asProxy declare_output_index
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelPoint",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("funding_txid", channelPointFundingTxid),
                          ( "output_index",
                            channelPointOutputIndex
                          )
                        ]
                  }
            }
        )

data ChannelPointFundingTxid
  = ChannelPointFundingTxidFundingTxidBytes Hs.ByteString
  | ChannelPointFundingTxidFundingTxidStr Hs.Text
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelPointFundingTxid where
  nameOf _ = (Hs.fromString "ChannelPointFundingTxid")

instance HsJSONPB.ToSchema ChannelPointFundingTxid where
  declareNamedSchema _ =
    do
      let declare_funding_txid_bytes = HsJSONPB.declareSchemaRef
      channelPointFundingTxidFundingTxidBytes <-
        declare_funding_txid_bytes
          Proxy.Proxy
      let _ =
            Hs.pure ChannelPointFundingTxidFundingTxidBytes
              <*> HsJSONPB.asProxy declare_funding_txid_bytes
      let declare_funding_txid_str = HsJSONPB.declareSchemaRef
      channelPointFundingTxidFundingTxidStr <-
        declare_funding_txid_str
          Proxy.Proxy
      let _ =
            Hs.pure ChannelPointFundingTxidFundingTxidStr
              <*> HsJSONPB.asProxy declare_funding_txid_str
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelPointFundingTxid",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "funding_txid_bytes",
                            channelPointFundingTxidFundingTxidBytes
                          ),
                          ( "funding_txid_str",
                            channelPointFundingTxidFundingTxidStr
                          )
                        ],
                    HsJSONPB._schemaMinProperties = Hs.Just 1,
                    HsJSONPB._schemaMaxProperties = Hs.Just 1
                  }
            }
        )

data OutPoint
  = OutPoint
      { outPointTxidBytes :: Hs.ByteString,
        outPointTxidStr :: Hs.Text,
        outPointOutputIndex :: Hs.Word32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named OutPoint where
  nameOf _ = (Hs.fromString "OutPoint")

instance HsProtobuf.HasDefault OutPoint

instance HsProtobuf.Message OutPoint where
  encodeMessage
    _
    OutPoint
      { outPointTxidBytes = outPointTxidBytes,
        outPointTxidStr = outPointTxidStr,
        outPointOutputIndex = outPointOutputIndex
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                outPointTxidBytes
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                outPointTxidStr
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                outPointOutputIndex
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure OutPoint)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "txid_bytes")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "txid_str")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "output_index")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB OutPoint where
  toJSONPB (OutPoint f1 f2 f3) =
    ( HsJSONPB.object
        ["txid_bytes" .= f1, "txid_str" .= f2, "output_index" .= f3]
    )
  toEncodingPB (OutPoint f1 f2 f3) =
    ( HsJSONPB.pairs
        ["txid_bytes" .= f1, "txid_str" .= f2, "output_index" .= f3]
    )

instance HsJSONPB.FromJSONPB OutPoint where
  parseJSONPB =
    ( HsJSONPB.withObject
        "OutPoint"
        ( \obj ->
            (Hs.pure OutPoint) <*> obj .: "txid_bytes" <*> obj .: "txid_str"
              <*> obj
              .: "output_index"
        )
    )

instance HsJSONPB.ToJSON OutPoint where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON OutPoint where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema OutPoint where
  declareNamedSchema _ =
    do
      let declare_txid_bytes = HsJSONPB.declareSchemaRef
      outPointTxidBytes <- declare_txid_bytes Proxy.Proxy
      let declare_txid_str = HsJSONPB.declareSchemaRef
      outPointTxidStr <- declare_txid_str Proxy.Proxy
      let declare_output_index = HsJSONPB.declareSchemaRef
      outPointOutputIndex <- declare_output_index Proxy.Proxy
      let _ =
            Hs.pure OutPoint <*> HsJSONPB.asProxy declare_txid_bytes
              <*> HsJSONPB.asProxy declare_txid_str
              <*> HsJSONPB.asProxy declare_output_index
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "OutPoint",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("txid_bytes", outPointTxidBytes),
                          ("txid_str", outPointTxidStr),
                          ("output_index", outPointOutputIndex)
                        ]
                  }
            }
        )

data LightningAddress
  = LightningAddress
      { lightningAddressPubkey ::
          Hs.Text,
        lightningAddressHost :: Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named LightningAddress where
  nameOf _ = (Hs.fromString "LightningAddress")

instance HsProtobuf.HasDefault LightningAddress

instance HsProtobuf.Message LightningAddress where
  encodeMessage
    _
    LightningAddress
      { lightningAddressPubkey = lightningAddressPubkey,
        lightningAddressHost = lightningAddressHost
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                lightningAddressPubkey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                lightningAddressHost
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure LightningAddress)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "pubkey")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "host")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB LightningAddress where
  toJSONPB (LightningAddress f1 f2) =
    (HsJSONPB.object ["pubkey" .= f1, "host" .= f2])
  toEncodingPB (LightningAddress f1 f2) =
    (HsJSONPB.pairs ["pubkey" .= f1, "host" .= f2])

instance HsJSONPB.FromJSONPB LightningAddress where
  parseJSONPB =
    ( HsJSONPB.withObject
        "LightningAddress"
        ( \obj ->
            (Hs.pure LightningAddress) <*> obj .: "pubkey" <*> obj .: "host"
        )
    )

instance HsJSONPB.ToJSON LightningAddress where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON LightningAddress where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema LightningAddress where
  declareNamedSchema _ =
    do
      let declare_pubkey = HsJSONPB.declareSchemaRef
      lightningAddressPubkey <- declare_pubkey Proxy.Proxy
      let declare_host = HsJSONPB.declareSchemaRef
      lightningAddressHost <- declare_host Proxy.Proxy
      let _ =
            Hs.pure LightningAddress
              <*> HsJSONPB.asProxy declare_pubkey
              <*> HsJSONPB.asProxy declare_host
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "LightningAddress",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("pubkey", lightningAddressPubkey),
                          ("host", lightningAddressHost)
                        ]
                  }
            }
        )

data EstimateFeeRequest
  = EstimateFeeRequest
      { estimateFeeRequestAddrToAmount ::
          Hs.Map Hs.Text
            Hs.Int64,
        estimateFeeRequestTargetConf :: Hs.Int32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named EstimateFeeRequest where
  nameOf _ = (Hs.fromString "EstimateFeeRequest")

instance HsProtobuf.HasDefault EstimateFeeRequest

instance HsProtobuf.Message EstimateFeeRequest where
  encodeMessage
    _
    EstimateFeeRequest
      { estimateFeeRequestAddrToAmount =
          estimateFeeRequestAddrToAmount,
        estimateFeeRequestTargetConf = estimateFeeRequestTargetConf
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                estimateFeeRequestAddrToAmount
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                estimateFeeRequestTargetConf
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure EstimateFeeRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Map HsProtobuf.String HsProtobuf.Int64)
          (HsProtobuf.Single "AddrToAmount")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "target_conf")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB EstimateFeeRequest where
  toJSONPB (EstimateFeeRequest f1 f2) =
    (HsJSONPB.object ["AddrToAmount" .= f1, "target_conf" .= f2])
  toEncodingPB (EstimateFeeRequest f1 f2) =
    (HsJSONPB.pairs ["AddrToAmount" .= f1, "target_conf" .= f2])

instance HsJSONPB.FromJSONPB EstimateFeeRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "EstimateFeeRequest"
        ( \obj ->
            (Hs.pure EstimateFeeRequest) <*> obj .: "AddrToAmount"
              <*> obj .: "target_conf"
        )
    )

instance HsJSONPB.ToJSON EstimateFeeRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON EstimateFeeRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema EstimateFeeRequest where
  declareNamedSchema _ =
    do
      let declare_AddrToAmount = HsJSONPB.declareSchemaRef
      estimateFeeRequestAddrToAmount <- declare_AddrToAmount Proxy.Proxy
      let declare_target_conf = HsJSONPB.declareSchemaRef
      estimateFeeRequestTargetConf <- declare_target_conf Proxy.Proxy
      let _ =
            Hs.pure EstimateFeeRequest
              <*> HsJSONPB.asProxy declare_AddrToAmount
              <*> HsJSONPB.asProxy declare_target_conf
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "EstimateFeeRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "AddrToAmount",
                            estimateFeeRequestAddrToAmount
                          ),
                          ( "target_conf",
                            estimateFeeRequestTargetConf
                          )
                        ]
                  }
            }
        )

data EstimateFeeResponse
  = EstimateFeeResponse
      { estimateFeeResponseFeeSat ::
          Hs.Int64,
        estimateFeeResponseFeerateSatPerByte :: Hs.Int64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named EstimateFeeResponse where
  nameOf _ = (Hs.fromString "EstimateFeeResponse")

instance HsProtobuf.HasDefault EstimateFeeResponse

instance HsProtobuf.Message EstimateFeeResponse where
  encodeMessage
    _
    EstimateFeeResponse
      { estimateFeeResponseFeeSat =
          estimateFeeResponseFeeSat,
        estimateFeeResponseFeerateSatPerByte =
          estimateFeeResponseFeerateSatPerByte
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                estimateFeeResponseFeeSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                estimateFeeResponseFeerateSatPerByte
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure EstimateFeeResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "fee_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "feerate_sat_per_byte")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB EstimateFeeResponse where
  toJSONPB (EstimateFeeResponse f1 f2) =
    (HsJSONPB.object ["fee_sat" .= f1, "feerate_sat_per_byte" .= f2])
  toEncodingPB (EstimateFeeResponse f1 f2) =
    (HsJSONPB.pairs ["fee_sat" .= f1, "feerate_sat_per_byte" .= f2])

instance HsJSONPB.FromJSONPB EstimateFeeResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "EstimateFeeResponse"
        ( \obj ->
            (Hs.pure EstimateFeeResponse) <*> obj .: "fee_sat"
              <*> obj .: "feerate_sat_per_byte"
        )
    )

instance HsJSONPB.ToJSON EstimateFeeResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON EstimateFeeResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema EstimateFeeResponse where
  declareNamedSchema _ =
    do
      let declare_fee_sat = HsJSONPB.declareSchemaRef
      estimateFeeResponseFeeSat <- declare_fee_sat Proxy.Proxy
      let declare_feerate_sat_per_byte = HsJSONPB.declareSchemaRef
      estimateFeeResponseFeerateSatPerByte <-
        declare_feerate_sat_per_byte
          Proxy.Proxy
      let _ =
            Hs.pure EstimateFeeResponse
              <*> HsJSONPB.asProxy declare_fee_sat
              <*> HsJSONPB.asProxy declare_feerate_sat_per_byte
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "EstimateFeeResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("fee_sat", estimateFeeResponseFeeSat),
                          ( "feerate_sat_per_byte",
                            estimateFeeResponseFeerateSatPerByte
                          )
                        ]
                  }
            }
        )

data SendManyRequest
  = SendManyRequest
      { sendManyRequestAddrToAmount ::
          Hs.Map Hs.Text
            Hs.Int64,
        sendManyRequestTargetConf :: Hs.Int32,
        sendManyRequestSatPerByte :: Hs.Int64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SendManyRequest where
  nameOf _ = (Hs.fromString "SendManyRequest")

instance HsProtobuf.HasDefault SendManyRequest

instance HsProtobuf.Message SendManyRequest where
  encodeMessage
    _
    SendManyRequest
      { sendManyRequestAddrToAmount =
          sendManyRequestAddrToAmount,
        sendManyRequestTargetConf = sendManyRequestTargetConf,
        sendManyRequestSatPerByte = sendManyRequestSatPerByte
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                sendManyRequestAddrToAmount
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                sendManyRequestTargetConf
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                sendManyRequestSatPerByte
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SendManyRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Map HsProtobuf.String HsProtobuf.Int64)
          (HsProtobuf.Single "AddrToAmount")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "target_conf")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "sat_per_byte")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SendManyRequest where
  toJSONPB (SendManyRequest f1 f3 f5) =
    ( HsJSONPB.object
        ["AddrToAmount" .= f1, "target_conf" .= f3, "sat_per_byte" .= f5]
    )
  toEncodingPB (SendManyRequest f1 f3 f5) =
    ( HsJSONPB.pairs
        ["AddrToAmount" .= f1, "target_conf" .= f3, "sat_per_byte" .= f5]
    )

instance HsJSONPB.FromJSONPB SendManyRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SendManyRequest"
        ( \obj ->
            (Hs.pure SendManyRequest) <*> obj .: "AddrToAmount"
              <*> obj .: "target_conf"
              <*> obj .: "sat_per_byte"
        )
    )

instance HsJSONPB.ToJSON SendManyRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SendManyRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SendManyRequest where
  declareNamedSchema _ =
    do
      let declare_AddrToAmount = HsJSONPB.declareSchemaRef
      sendManyRequestAddrToAmount <- declare_AddrToAmount Proxy.Proxy
      let declare_target_conf = HsJSONPB.declareSchemaRef
      sendManyRequestTargetConf <- declare_target_conf Proxy.Proxy
      let declare_sat_per_byte = HsJSONPB.declareSchemaRef
      sendManyRequestSatPerByte <- declare_sat_per_byte Proxy.Proxy
      let _ =
            Hs.pure SendManyRequest
              <*> HsJSONPB.asProxy declare_AddrToAmount
              <*> HsJSONPB.asProxy declare_target_conf
              <*> HsJSONPB.asProxy declare_sat_per_byte
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SendManyRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "AddrToAmount",
                            sendManyRequestAddrToAmount
                          ),
                          ("target_conf", sendManyRequestTargetConf),
                          ( "sat_per_byte",
                            sendManyRequestSatPerByte
                          )
                        ]
                  }
            }
        )

data SendManyResponse
  = SendManyResponse
      { sendManyResponseTxid ::
          Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SendManyResponse where
  nameOf _ = (Hs.fromString "SendManyResponse")

instance HsProtobuf.HasDefault SendManyResponse

instance HsProtobuf.Message SendManyResponse where
  encodeMessage
    _
    SendManyResponse {sendManyResponseTxid = sendManyResponseTxid} =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                sendManyResponseTxid
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SendManyResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "txid")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SendManyResponse where
  toJSONPB (SendManyResponse f1) = (HsJSONPB.object ["txid" .= f1])
  toEncodingPB (SendManyResponse f1) =
    (HsJSONPB.pairs ["txid" .= f1])

instance HsJSONPB.FromJSONPB SendManyResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SendManyResponse"
        (\obj -> (Hs.pure SendManyResponse) <*> obj .: "txid")
    )

instance HsJSONPB.ToJSON SendManyResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SendManyResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SendManyResponse where
  declareNamedSchema _ =
    do
      let declare_txid = HsJSONPB.declareSchemaRef
      sendManyResponseTxid <- declare_txid Proxy.Proxy
      let _ = Hs.pure SendManyResponse <*> HsJSONPB.asProxy declare_txid
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SendManyResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("txid", sendManyResponseTxid)]
                  }
            }
        )

data SendCoinsRequest
  = SendCoinsRequest
      { sendCoinsRequestAddr ::
          Hs.Text,
        sendCoinsRequestAmount :: Hs.Int64,
        sendCoinsRequestTargetConf :: Hs.Int32,
        sendCoinsRequestSatPerByte :: Hs.Int64,
        sendCoinsRequestSendAll :: Hs.Bool
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SendCoinsRequest where
  nameOf _ = (Hs.fromString "SendCoinsRequest")

instance HsProtobuf.HasDefault SendCoinsRequest

instance HsProtobuf.Message SendCoinsRequest where
  encodeMessage
    _
    SendCoinsRequest
      { sendCoinsRequestAddr = sendCoinsRequestAddr,
        sendCoinsRequestAmount = sendCoinsRequestAmount,
        sendCoinsRequestTargetConf = sendCoinsRequestTargetConf,
        sendCoinsRequestSatPerByte = sendCoinsRequestSatPerByte,
        sendCoinsRequestSendAll = sendCoinsRequestSendAll
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                sendCoinsRequestAddr
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                sendCoinsRequestAmount
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                sendCoinsRequestTargetConf
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                sendCoinsRequestSatPerByte
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                sendCoinsRequestSendAll
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SendCoinsRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "addr")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amount")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "target_conf")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "sat_per_byte")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "send_all")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SendCoinsRequest where
  toJSONPB (SendCoinsRequest f1 f2 f3 f5 f6) =
    ( HsJSONPB.object
        [ "addr" .= f1,
          "amount" .= f2,
          "target_conf" .= f3,
          "sat_per_byte" .= f5,
          "send_all" .= f6
        ]
    )
  toEncodingPB (SendCoinsRequest f1 f2 f3 f5 f6) =
    ( HsJSONPB.pairs
        [ "addr" .= f1,
          "amount" .= f2,
          "target_conf" .= f3,
          "sat_per_byte" .= f5,
          "send_all" .= f6
        ]
    )

instance HsJSONPB.FromJSONPB SendCoinsRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SendCoinsRequest"
        ( \obj ->
            (Hs.pure SendCoinsRequest) <*> obj .: "addr" <*> obj .: "amount"
              <*> obj .: "target_conf"
              <*> obj .: "sat_per_byte"
              <*> obj .: "send_all"
        )
    )

instance HsJSONPB.ToJSON SendCoinsRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SendCoinsRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SendCoinsRequest where
  declareNamedSchema _ =
    do
      let declare_addr = HsJSONPB.declareSchemaRef
      sendCoinsRequestAddr <- declare_addr Proxy.Proxy
      let declare_amount = HsJSONPB.declareSchemaRef
      sendCoinsRequestAmount <- declare_amount Proxy.Proxy
      let declare_target_conf = HsJSONPB.declareSchemaRef
      sendCoinsRequestTargetConf <- declare_target_conf Proxy.Proxy
      let declare_sat_per_byte = HsJSONPB.declareSchemaRef
      sendCoinsRequestSatPerByte <- declare_sat_per_byte Proxy.Proxy
      let declare_send_all = HsJSONPB.declareSchemaRef
      sendCoinsRequestSendAll <- declare_send_all Proxy.Proxy
      let _ =
            Hs.pure SendCoinsRequest <*> HsJSONPB.asProxy declare_addr
              <*> HsJSONPB.asProxy declare_amount
              <*> HsJSONPB.asProxy declare_target_conf
              <*> HsJSONPB.asProxy declare_sat_per_byte
              <*> HsJSONPB.asProxy declare_send_all
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SendCoinsRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("addr", sendCoinsRequestAddr),
                          ("amount", sendCoinsRequestAmount),
                          ("target_conf", sendCoinsRequestTargetConf),
                          ( "sat_per_byte",
                            sendCoinsRequestSatPerByte
                          ),
                          ("send_all", sendCoinsRequestSendAll)
                        ]
                  }
            }
        )

data SendCoinsResponse
  = SendCoinsResponse
      { sendCoinsResponseTxid ::
          Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SendCoinsResponse where
  nameOf _ = (Hs.fromString "SendCoinsResponse")

instance HsProtobuf.HasDefault SendCoinsResponse

instance HsProtobuf.Message SendCoinsResponse where
  encodeMessage
    _
    SendCoinsResponse {sendCoinsResponseTxid = sendCoinsResponseTxid} =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                sendCoinsResponseTxid
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SendCoinsResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "txid")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SendCoinsResponse where
  toJSONPB (SendCoinsResponse f1) = (HsJSONPB.object ["txid" .= f1])
  toEncodingPB (SendCoinsResponse f1) =
    (HsJSONPB.pairs ["txid" .= f1])

instance HsJSONPB.FromJSONPB SendCoinsResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SendCoinsResponse"
        (\obj -> (Hs.pure SendCoinsResponse) <*> obj .: "txid")
    )

instance HsJSONPB.ToJSON SendCoinsResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SendCoinsResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SendCoinsResponse where
  declareNamedSchema _ =
    do
      let declare_txid = HsJSONPB.declareSchemaRef
      sendCoinsResponseTxid <- declare_txid Proxy.Proxy
      let _ = Hs.pure SendCoinsResponse <*> HsJSONPB.asProxy declare_txid
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SendCoinsResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("txid", sendCoinsResponseTxid)]
                  }
            }
        )

data ListUnspentRequest
  = ListUnspentRequest
      { listUnspentRequestMinConfs ::
          Hs.Int32,
        listUnspentRequestMaxConfs :: Hs.Int32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ListUnspentRequest where
  nameOf _ = (Hs.fromString "ListUnspentRequest")

instance HsProtobuf.HasDefault ListUnspentRequest

instance HsProtobuf.Message ListUnspentRequest where
  encodeMessage
    _
    ListUnspentRequest
      { listUnspentRequestMinConfs =
          listUnspentRequestMinConfs,
        listUnspentRequestMaxConfs = listUnspentRequestMaxConfs
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                listUnspentRequestMinConfs
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                listUnspentRequestMaxConfs
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ListUnspentRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "min_confs")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "max_confs")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ListUnspentRequest where
  toJSONPB (ListUnspentRequest f1 f2) =
    (HsJSONPB.object ["min_confs" .= f1, "max_confs" .= f2])
  toEncodingPB (ListUnspentRequest f1 f2) =
    (HsJSONPB.pairs ["min_confs" .= f1, "max_confs" .= f2])

instance HsJSONPB.FromJSONPB ListUnspentRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ListUnspentRequest"
        ( \obj ->
            (Hs.pure ListUnspentRequest) <*> obj .: "min_confs"
              <*> obj .: "max_confs"
        )
    )

instance HsJSONPB.ToJSON ListUnspentRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ListUnspentRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ListUnspentRequest where
  declareNamedSchema _ =
    do
      let declare_min_confs = HsJSONPB.declareSchemaRef
      listUnspentRequestMinConfs <- declare_min_confs Proxy.Proxy
      let declare_max_confs = HsJSONPB.declareSchemaRef
      listUnspentRequestMaxConfs <- declare_max_confs Proxy.Proxy
      let _ =
            Hs.pure ListUnspentRequest
              <*> HsJSONPB.asProxy declare_min_confs
              <*> HsJSONPB.asProxy declare_max_confs
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ListUnspentRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("min_confs", listUnspentRequestMinConfs),
                          ( "max_confs",
                            listUnspentRequestMaxConfs
                          )
                        ]
                  }
            }
        )

data ListUnspentResponse
  = ListUnspentResponse
      { listUnspentResponseUtxos ::
          Hs.Vector
            LndGrpc.Utxo
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ListUnspentResponse where
  nameOf _ = (Hs.fromString "ListUnspentResponse")

instance HsProtobuf.HasDefault ListUnspentResponse

instance HsProtobuf.Message ListUnspentResponse where
  encodeMessage
    _
    ListUnspentResponse
      { listUnspentResponseUtxos =
          listUnspentResponseUtxos
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector LndGrpc.Utxo)
                    @(HsProtobuf.NestedVec LndGrpc.Utxo)
                    listUnspentResponseUtxos
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ListUnspentResponse)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.Utxo))
              @(_ (Hs.Vector LndGrpc.Utxo))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Repeated (HsProtobuf.Named (HsProtobuf.Single "Utxo")))
          (HsProtobuf.Single "utxos")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ListUnspentResponse where
  toJSONPB (ListUnspentResponse f1) =
    (HsJSONPB.object ["utxos" .= f1])
  toEncodingPB (ListUnspentResponse f1) =
    (HsJSONPB.pairs ["utxos" .= f1])

instance HsJSONPB.FromJSONPB ListUnspentResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ListUnspentResponse"
        (\obj -> (Hs.pure ListUnspentResponse) <*> obj .: "utxos")
    )

instance HsJSONPB.ToJSON ListUnspentResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ListUnspentResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ListUnspentResponse where
  declareNamedSchema _ =
    do
      let declare_utxos = HsJSONPB.declareSchemaRef
      listUnspentResponseUtxos <- declare_utxos Proxy.Proxy
      let _ =
            Hs.pure ListUnspentResponse
              <*> HsJSONPB.asProxy declare_utxos
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ListUnspentResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("utxos", listUnspentResponseUtxos)]
                  }
            }
        )

data AddressType
  = AddressTypeWITNESS_PUBKEY_HASH
  | AddressTypeNESTED_PUBKEY_HASH
  | AddressTypeUNUSED_WITNESS_PUBKEY_HASH
  | AddressTypeUNUSED_NESTED_PUBKEY_HASH
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named AddressType where
  nameOf _ = (Hs.fromString "AddressType")

instance HsProtobuf.HasDefault AddressType

instance Hs.Bounded AddressType where
  minBound = AddressTypeWITNESS_PUBKEY_HASH
  maxBound = AddressTypeUNUSED_NESTED_PUBKEY_HASH

instance Hs.Ord AddressType where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum AddressType where
  toProtoEnumMay 0 = Hs.Just AddressTypeWITNESS_PUBKEY_HASH
  toProtoEnumMay 1 = Hs.Just AddressTypeNESTED_PUBKEY_HASH
  toProtoEnumMay 2 = Hs.Just AddressTypeUNUSED_WITNESS_PUBKEY_HASH
  toProtoEnumMay 3 = Hs.Just AddressTypeUNUSED_NESTED_PUBKEY_HASH
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (AddressTypeWITNESS_PUBKEY_HASH) = 0
  fromProtoEnum (AddressTypeNESTED_PUBKEY_HASH) = 1
  fromProtoEnum (AddressTypeUNUSED_WITNESS_PUBKEY_HASH) = 2
  fromProtoEnum (AddressTypeUNUSED_NESTED_PUBKEY_HASH) = 3

instance HsJSONPB.ToJSONPB AddressType where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB AddressType where
  parseJSONPB (HsJSONPB.String "WITNESS_PUBKEY_HASH") =
    Hs.pure AddressTypeWITNESS_PUBKEY_HASH
  parseJSONPB (HsJSONPB.String "NESTED_PUBKEY_HASH") =
    Hs.pure AddressTypeNESTED_PUBKEY_HASH
  parseJSONPB (HsJSONPB.String "UNUSED_WITNESS_PUBKEY_HASH") =
    Hs.pure AddressTypeUNUSED_WITNESS_PUBKEY_HASH
  parseJSONPB (HsJSONPB.String "UNUSED_NESTED_PUBKEY_HASH") =
    Hs.pure AddressTypeUNUSED_NESTED_PUBKEY_HASH
  parseJSONPB v = (HsJSONPB.typeMismatch "AddressType" v)

instance HsJSONPB.ToJSON AddressType where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON AddressType where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite AddressType

data NewAddressRequest
  = NewAddressRequest
      { newAddressRequestType ::
          HsProtobuf.Enumerated
            LndGrpc.AddressType
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named NewAddressRequest where
  nameOf _ = (Hs.fromString "NewAddressRequest")

instance HsProtobuf.HasDefault NewAddressRequest

instance HsProtobuf.Message NewAddressRequest where
  encodeMessage
    _
    NewAddressRequest {newAddressRequestType = newAddressRequestType} =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                newAddressRequestType
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure NewAddressRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "AddressType"))
          )
          (HsProtobuf.Single "type")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB NewAddressRequest where
  toJSONPB (NewAddressRequest f1) = (HsJSONPB.object ["type" .= f1])
  toEncodingPB (NewAddressRequest f1) =
    (HsJSONPB.pairs ["type" .= f1])

instance HsJSONPB.FromJSONPB NewAddressRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "NewAddressRequest"
        (\obj -> (Hs.pure NewAddressRequest) <*> obj .: "type")
    )

instance HsJSONPB.ToJSON NewAddressRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON NewAddressRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema NewAddressRequest where
  declareNamedSchema _ =
    do
      let declare_type = HsJSONPB.declareSchemaRef
      newAddressRequestType <- declare_type Proxy.Proxy
      let _ = Hs.pure NewAddressRequest <*> HsJSONPB.asProxy declare_type
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "NewAddressRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("type", newAddressRequestType)]
                  }
            }
        )

data NewAddressResponse
  = NewAddressResponse
      { newAddressResponseAddress ::
          Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named NewAddressResponse where
  nameOf _ = (Hs.fromString "NewAddressResponse")

instance HsProtobuf.HasDefault NewAddressResponse

instance HsProtobuf.Message NewAddressResponse where
  encodeMessage
    _
    NewAddressResponse
      { newAddressResponseAddress =
          newAddressResponseAddress
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                newAddressResponseAddress
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure NewAddressResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "address")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB NewAddressResponse where
  toJSONPB (NewAddressResponse f1) =
    (HsJSONPB.object ["address" .= f1])
  toEncodingPB (NewAddressResponse f1) =
    (HsJSONPB.pairs ["address" .= f1])

instance HsJSONPB.FromJSONPB NewAddressResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "NewAddressResponse"
        (\obj -> (Hs.pure NewAddressResponse) <*> obj .: "address")
    )

instance HsJSONPB.ToJSON NewAddressResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON NewAddressResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema NewAddressResponse where
  declareNamedSchema _ =
    do
      let declare_address = HsJSONPB.declareSchemaRef
      newAddressResponseAddress <- declare_address Proxy.Proxy
      let _ =
            Hs.pure NewAddressResponse
              <*> HsJSONPB.asProxy declare_address
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "NewAddressResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("address", newAddressResponseAddress)]
                  }
            }
        )

data SignMessageRequest
  = SignMessageRequest
      { signMessageRequestMsg ::
          Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SignMessageRequest where
  nameOf _ = (Hs.fromString "SignMessageRequest")

instance HsProtobuf.HasDefault SignMessageRequest

instance HsProtobuf.Message SignMessageRequest where
  encodeMessage
    _
    SignMessageRequest {signMessageRequestMsg = signMessageRequestMsg} =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                signMessageRequestMsg
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SignMessageRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "msg")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SignMessageRequest where
  toJSONPB (SignMessageRequest f1) = (HsJSONPB.object ["msg" .= f1])
  toEncodingPB (SignMessageRequest f1) =
    (HsJSONPB.pairs ["msg" .= f1])

instance HsJSONPB.FromJSONPB SignMessageRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SignMessageRequest"
        (\obj -> (Hs.pure SignMessageRequest) <*> obj .: "msg")
    )

instance HsJSONPB.ToJSON SignMessageRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SignMessageRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SignMessageRequest where
  declareNamedSchema _ =
    do
      let declare_msg = HsJSONPB.declareSchemaRef
      signMessageRequestMsg <- declare_msg Proxy.Proxy
      let _ = Hs.pure SignMessageRequest <*> HsJSONPB.asProxy declare_msg
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SignMessageRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("msg", signMessageRequestMsg)]
                  }
            }
        )

data SignMessageResponse
  = SignMessageResponse
      { signMessageResponseSignature ::
          Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SignMessageResponse where
  nameOf _ = (Hs.fromString "SignMessageResponse")

instance HsProtobuf.HasDefault SignMessageResponse

instance HsProtobuf.Message SignMessageResponse where
  encodeMessage
    _
    SignMessageResponse
      { signMessageResponseSignature =
          signMessageResponseSignature
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                signMessageResponseSignature
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SignMessageResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "signature")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SignMessageResponse where
  toJSONPB (SignMessageResponse f1) =
    (HsJSONPB.object ["signature" .= f1])
  toEncodingPB (SignMessageResponse f1) =
    (HsJSONPB.pairs ["signature" .= f1])

instance HsJSONPB.FromJSONPB SignMessageResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SignMessageResponse"
        (\obj -> (Hs.pure SignMessageResponse) <*> obj .: "signature")
    )

instance HsJSONPB.ToJSON SignMessageResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SignMessageResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SignMessageResponse where
  declareNamedSchema _ =
    do
      let declare_signature = HsJSONPB.declareSchemaRef
      signMessageResponseSignature <- declare_signature Proxy.Proxy
      let _ =
            Hs.pure SignMessageResponse
              <*> HsJSONPB.asProxy declare_signature
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SignMessageResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "signature",
                            signMessageResponseSignature
                          )
                        ]
                  }
            }
        )

data VerifyMessageRequest
  = VerifyMessageRequest
      { verifyMessageRequestMsg ::
          Hs.ByteString,
        verifyMessageRequestSignature :: Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named VerifyMessageRequest where
  nameOf _ = (Hs.fromString "VerifyMessageRequest")

instance HsProtobuf.HasDefault VerifyMessageRequest

instance HsProtobuf.Message VerifyMessageRequest where
  encodeMessage
    _
    VerifyMessageRequest
      { verifyMessageRequestMsg =
          verifyMessageRequestMsg,
        verifyMessageRequestSignature = verifyMessageRequestSignature
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                verifyMessageRequestMsg
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                verifyMessageRequestSignature
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure VerifyMessageRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "msg")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "signature")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB VerifyMessageRequest where
  toJSONPB (VerifyMessageRequest f1 f2) =
    (HsJSONPB.object ["msg" .= f1, "signature" .= f2])
  toEncodingPB (VerifyMessageRequest f1 f2) =
    (HsJSONPB.pairs ["msg" .= f1, "signature" .= f2])

instance HsJSONPB.FromJSONPB VerifyMessageRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "VerifyMessageRequest"
        ( \obj ->
            (Hs.pure VerifyMessageRequest) <*> obj .: "msg"
              <*> obj .: "signature"
        )
    )

instance HsJSONPB.ToJSON VerifyMessageRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON VerifyMessageRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema VerifyMessageRequest where
  declareNamedSchema _ =
    do
      let declare_msg = HsJSONPB.declareSchemaRef
      verifyMessageRequestMsg <- declare_msg Proxy.Proxy
      let declare_signature = HsJSONPB.declareSchemaRef
      verifyMessageRequestSignature <- declare_signature Proxy.Proxy
      let _ =
            Hs.pure VerifyMessageRequest
              <*> HsJSONPB.asProxy declare_msg
              <*> HsJSONPB.asProxy declare_signature
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "VerifyMessageRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("msg", verifyMessageRequestMsg),
                          ( "signature",
                            verifyMessageRequestSignature
                          )
                        ]
                  }
            }
        )

data VerifyMessageResponse
  = VerifyMessageResponse
      { verifyMessageResponseValid ::
          Hs.Bool,
        verifyMessageResponsePubkey :: Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named VerifyMessageResponse where
  nameOf _ = (Hs.fromString "VerifyMessageResponse")

instance HsProtobuf.HasDefault VerifyMessageResponse

instance HsProtobuf.Message VerifyMessageResponse where
  encodeMessage
    _
    VerifyMessageResponse
      { verifyMessageResponseValid =
          verifyMessageResponseValid,
        verifyMessageResponsePubkey = verifyMessageResponsePubkey
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                verifyMessageResponseValid
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                verifyMessageResponsePubkey
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure VerifyMessageResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "valid")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "pubkey")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB VerifyMessageResponse where
  toJSONPB (VerifyMessageResponse f1 f2) =
    (HsJSONPB.object ["valid" .= f1, "pubkey" .= f2])
  toEncodingPB (VerifyMessageResponse f1 f2) =
    (HsJSONPB.pairs ["valid" .= f1, "pubkey" .= f2])

instance HsJSONPB.FromJSONPB VerifyMessageResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "VerifyMessageResponse"
        ( \obj ->
            (Hs.pure VerifyMessageResponse) <*> obj .: "valid"
              <*> obj .: "pubkey"
        )
    )

instance HsJSONPB.ToJSON VerifyMessageResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON VerifyMessageResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema VerifyMessageResponse where
  declareNamedSchema _ =
    do
      let declare_valid = HsJSONPB.declareSchemaRef
      verifyMessageResponseValid <- declare_valid Proxy.Proxy
      let declare_pubkey = HsJSONPB.declareSchemaRef
      verifyMessageResponsePubkey <- declare_pubkey Proxy.Proxy
      let _ =
            Hs.pure VerifyMessageResponse
              <*> HsJSONPB.asProxy declare_valid
              <*> HsJSONPB.asProxy declare_pubkey
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "VerifyMessageResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("valid", verifyMessageResponseValid),
                          ("pubkey", verifyMessageResponsePubkey)
                        ]
                  }
            }
        )

data ConnectPeerRequest
  = ConnectPeerRequest
      { connectPeerRequestAddr ::
          Hs.Maybe
            LndGrpc.LightningAddress,
        connectPeerRequestPerm :: Hs.Bool
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ConnectPeerRequest where
  nameOf _ = (Hs.fromString "ConnectPeerRequest")

instance HsProtobuf.HasDefault ConnectPeerRequest

instance HsProtobuf.Message ConnectPeerRequest where
  encodeMessage
    _
    ConnectPeerRequest
      { connectPeerRequestAddr = connectPeerRequestAddr,
        connectPeerRequestPerm = connectPeerRequestPerm
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Maybe LndGrpc.LightningAddress)
                    @(HsProtobuf.Nested LndGrpc.LightningAddress)
                    connectPeerRequestAddr
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                connectPeerRequestPerm
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ConnectPeerRequest)
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.LightningAddress))
              @(_ (Hs.Maybe LndGrpc.LightningAddress))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "LightningAddress"))
          )
          (HsProtobuf.Single "addr")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "perm")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ConnectPeerRequest where
  toJSONPB (ConnectPeerRequest f1 f2) =
    (HsJSONPB.object ["addr" .= f1, "perm" .= f2])
  toEncodingPB (ConnectPeerRequest f1 f2) =
    (HsJSONPB.pairs ["addr" .= f1, "perm" .= f2])

instance HsJSONPB.FromJSONPB ConnectPeerRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ConnectPeerRequest"
        ( \obj ->
            (Hs.pure ConnectPeerRequest) <*> obj .: "addr" <*> obj .: "perm"
        )
    )

instance HsJSONPB.ToJSON ConnectPeerRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ConnectPeerRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ConnectPeerRequest where
  declareNamedSchema _ =
    do
      let declare_addr = HsJSONPB.declareSchemaRef
      connectPeerRequestAddr <- declare_addr Proxy.Proxy
      let declare_perm = HsJSONPB.declareSchemaRef
      connectPeerRequestPerm <- declare_perm Proxy.Proxy
      let _ =
            Hs.pure ConnectPeerRequest
              <*> HsJSONPB.asProxy declare_addr
              <*> HsJSONPB.asProxy declare_perm
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ConnectPeerRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("addr", connectPeerRequestAddr),
                          ("perm", connectPeerRequestPerm)
                        ]
                  }
            }
        )

data ConnectPeerResponse = ConnectPeerResponse {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ConnectPeerResponse where
  nameOf _ = (Hs.fromString "ConnectPeerResponse")

instance HsProtobuf.HasDefault ConnectPeerResponse

instance HsProtobuf.Message ConnectPeerResponse where
  encodeMessage _ ConnectPeerResponse {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure ConnectPeerResponse)
  dotProto _ = []

instance HsJSONPB.ToJSONPB ConnectPeerResponse where
  toJSONPB (ConnectPeerResponse) = (HsJSONPB.object [])
  toEncodingPB (ConnectPeerResponse) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB ConnectPeerResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ConnectPeerResponse"
        (\obj -> (Hs.pure ConnectPeerResponse))
    )

instance HsJSONPB.ToJSON ConnectPeerResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ConnectPeerResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ConnectPeerResponse where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ConnectPeerResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data DisconnectPeerRequest
  = DisconnectPeerRequest
      { disconnectPeerRequestPubKey ::
          Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named DisconnectPeerRequest where
  nameOf _ = (Hs.fromString "DisconnectPeerRequest")

instance HsProtobuf.HasDefault DisconnectPeerRequest

instance HsProtobuf.Message DisconnectPeerRequest where
  encodeMessage
    _
    DisconnectPeerRequest
      { disconnectPeerRequestPubKey =
          disconnectPeerRequestPubKey
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                disconnectPeerRequestPubKey
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure DisconnectPeerRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "pub_key")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB DisconnectPeerRequest where
  toJSONPB (DisconnectPeerRequest f1) =
    (HsJSONPB.object ["pub_key" .= f1])
  toEncodingPB (DisconnectPeerRequest f1) =
    (HsJSONPB.pairs ["pub_key" .= f1])

instance HsJSONPB.FromJSONPB DisconnectPeerRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "DisconnectPeerRequest"
        (\obj -> (Hs.pure DisconnectPeerRequest) <*> obj .: "pub_key")
    )

instance HsJSONPB.ToJSON DisconnectPeerRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON DisconnectPeerRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema DisconnectPeerRequest where
  declareNamedSchema _ =
    do
      let declare_pub_key = HsJSONPB.declareSchemaRef
      disconnectPeerRequestPubKey <- declare_pub_key Proxy.Proxy
      let _ =
            Hs.pure DisconnectPeerRequest
              <*> HsJSONPB.asProxy declare_pub_key
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "DisconnectPeerRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("pub_key", disconnectPeerRequestPubKey)]
                  }
            }
        )

data DisconnectPeerResponse = DisconnectPeerResponse {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named DisconnectPeerResponse where
  nameOf _ = (Hs.fromString "DisconnectPeerResponse")

instance HsProtobuf.HasDefault DisconnectPeerResponse

instance HsProtobuf.Message DisconnectPeerResponse where
  encodeMessage _ DisconnectPeerResponse {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure DisconnectPeerResponse)
  dotProto _ = []

instance HsJSONPB.ToJSONPB DisconnectPeerResponse where
  toJSONPB (DisconnectPeerResponse) = (HsJSONPB.object [])
  toEncodingPB (DisconnectPeerResponse) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB DisconnectPeerResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "DisconnectPeerResponse"
        (\obj -> (Hs.pure DisconnectPeerResponse))
    )

instance HsJSONPB.ToJSON DisconnectPeerResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON DisconnectPeerResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema DisconnectPeerResponse where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "DisconnectPeerResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data HTLC
  = HTLC
      { htlcIncoming :: Hs.Bool,
        htlcAmount :: Hs.Int64,
        htlcHashLock :: Hs.ByteString,
        htlcExpirationHeight :: Hs.Word32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named HTLC where
  nameOf _ = (Hs.fromString "HTLC")

instance HsProtobuf.HasDefault HTLC

instance HsProtobuf.Message HTLC where
  encodeMessage
    _
    HTLC
      { htlcIncoming = htlcIncoming,
        htlcAmount = htlcAmount,
        htlcHashLock = htlcHashLock,
        htlcExpirationHeight = htlcExpirationHeight
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                htlcIncoming
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                htlcAmount
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                htlcHashLock
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                htlcExpirationHeight
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure HTLC)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "incoming")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amount")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "hash_lock")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "expiration_height")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB HTLC where
  toJSONPB (HTLC f1 f2 f3 f4) =
    ( HsJSONPB.object
        [ "incoming" .= f1,
          "amount" .= f2,
          "hash_lock" .= f3,
          "expiration_height" .= f4
        ]
    )
  toEncodingPB (HTLC f1 f2 f3 f4) =
    ( HsJSONPB.pairs
        [ "incoming" .= f1,
          "amount" .= f2,
          "hash_lock" .= f3,
          "expiration_height" .= f4
        ]
    )

instance HsJSONPB.FromJSONPB HTLC where
  parseJSONPB =
    ( HsJSONPB.withObject
        "HTLC"
        ( \obj ->
            (Hs.pure HTLC) <*> obj .: "incoming" <*> obj .: "amount"
              <*> obj
              .: "hash_lock"
              <*> obj
              .: "expiration_height"
        )
    )

instance HsJSONPB.ToJSON HTLC where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON HTLC where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema HTLC where
  declareNamedSchema _ =
    do
      let declare_incoming = HsJSONPB.declareSchemaRef
      htlcIncoming <- declare_incoming Proxy.Proxy
      let declare_amount = HsJSONPB.declareSchemaRef
      htlcAmount <- declare_amount Proxy.Proxy
      let declare_hash_lock = HsJSONPB.declareSchemaRef
      htlcHashLock <- declare_hash_lock Proxy.Proxy
      let declare_expiration_height = HsJSONPB.declareSchemaRef
      htlcExpirationHeight <- declare_expiration_height Proxy.Proxy
      let _ =
            Hs.pure HTLC <*> HsJSONPB.asProxy declare_incoming
              <*> HsJSONPB.asProxy declare_amount
              <*> HsJSONPB.asProxy declare_hash_lock
              <*> HsJSONPB.asProxy declare_expiration_height
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName = Hs.Just "HTLC",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("incoming", htlcIncoming),
                          ("amount", htlcAmount),
                          ("hash_lock", htlcHashLock),
                          ( "expiration_height",
                            htlcExpirationHeight
                          )
                        ]
                  }
            }
        )

data CommitmentType
  = CommitmentTypeLEGACY
  | CommitmentTypeSTATIC_REMOTE_KEY
  | CommitmentTypeANCHORS
  | CommitmentTypeUNKNOWN_COMMITMENT_TYPE
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named CommitmentType where
  nameOf _ = (Hs.fromString "CommitmentType")

instance HsProtobuf.HasDefault CommitmentType

instance Hs.Bounded CommitmentType where
  minBound = CommitmentTypeLEGACY
  maxBound = CommitmentTypeUNKNOWN_COMMITMENT_TYPE

instance Hs.Ord CommitmentType where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum CommitmentType where
  toProtoEnumMay 0 = Hs.Just CommitmentTypeLEGACY
  toProtoEnumMay 1 = Hs.Just CommitmentTypeSTATIC_REMOTE_KEY
  toProtoEnumMay 2 = Hs.Just CommitmentTypeANCHORS
  toProtoEnumMay 999 = Hs.Just CommitmentTypeUNKNOWN_COMMITMENT_TYPE
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (CommitmentTypeLEGACY) = 0
  fromProtoEnum (CommitmentTypeSTATIC_REMOTE_KEY) = 1
  fromProtoEnum (CommitmentTypeANCHORS) = 2
  fromProtoEnum (CommitmentTypeUNKNOWN_COMMITMENT_TYPE) = 999

instance HsJSONPB.ToJSONPB CommitmentType where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB CommitmentType where
  parseJSONPB (HsJSONPB.String "LEGACY") =
    Hs.pure CommitmentTypeLEGACY
  parseJSONPB (HsJSONPB.String "STATIC_REMOTE_KEY") =
    Hs.pure CommitmentTypeSTATIC_REMOTE_KEY
  parseJSONPB (HsJSONPB.String "ANCHORS") =
    Hs.pure CommitmentTypeANCHORS
  parseJSONPB (HsJSONPB.String "UNKNOWN_COMMITMENT_TYPE") =
    Hs.pure CommitmentTypeUNKNOWN_COMMITMENT_TYPE
  parseJSONPB v = (HsJSONPB.typeMismatch "CommitmentType" v)

instance HsJSONPB.ToJSON CommitmentType where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON CommitmentType where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite CommitmentType

data Channel
  = Channel
      { channelActive :: Hs.Bool,
        channelRemotePubkey :: Hs.Text,
        channelChannelPoint :: Hs.Text,
        channelChanId :: Hs.Word64,
        channelCapacity :: Hs.Int64,
        channelLocalBalance :: Hs.Int64,
        channelRemoteBalance :: Hs.Int64,
        channelCommitFee :: Hs.Int64,
        channelCommitWeight :: Hs.Int64,
        channelFeePerKw :: Hs.Int64,
        channelUnsettledBalance :: Hs.Int64,
        channelTotalSatoshisSent :: Hs.Int64,
        channelTotalSatoshisReceived :: Hs.Int64,
        channelNumUpdates :: Hs.Word64,
        channelPendingHtlcs :: Hs.Vector LndGrpc.HTLC,
        channelCsvDelay :: Hs.Word32,
        channelPrivate :: Hs.Bool,
        channelInitiator :: Hs.Bool,
        channelChanStatusFlags :: Hs.Text,
        channelLocalChanReserveSat :: Hs.Int64,
        channelRemoteChanReserveSat :: Hs.Int64,
        channelStaticRemoteKey :: Hs.Bool,
        channelCommitmentType ::
          HsProtobuf.Enumerated
            LndGrpc.CommitmentType,
        channelLifetime :: Hs.Int64,
        channelUptime :: Hs.Int64,
        channelCloseAddress :: Hs.Text,
        channelPushAmountSat :: Hs.Word64,
        channelThawHeight :: Hs.Word32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Channel where
  nameOf _ = (Hs.fromString "Channel")

instance HsProtobuf.HasDefault Channel

instance HsProtobuf.Message Channel where
  encodeMessage
    _
    Channel
      { channelActive = channelActive,
        channelRemotePubkey = channelRemotePubkey,
        channelChannelPoint = channelChannelPoint,
        channelChanId = channelChanId,
        channelCapacity = channelCapacity,
        channelLocalBalance = channelLocalBalance,
        channelRemoteBalance = channelRemoteBalance,
        channelCommitFee = channelCommitFee,
        channelCommitWeight = channelCommitWeight,
        channelFeePerKw = channelFeePerKw,
        channelUnsettledBalance = channelUnsettledBalance,
        channelTotalSatoshisSent = channelTotalSatoshisSent,
        channelTotalSatoshisReceived = channelTotalSatoshisReceived,
        channelNumUpdates = channelNumUpdates,
        channelPendingHtlcs = channelPendingHtlcs,
        channelCsvDelay = channelCsvDelay,
        channelPrivate = channelPrivate,
        channelInitiator = channelInitiator,
        channelChanStatusFlags = channelChanStatusFlags,
        channelLocalChanReserveSat = channelLocalChanReserveSat,
        channelRemoteChanReserveSat = channelRemoteChanReserveSat,
        channelStaticRemoteKey = channelStaticRemoteKey,
        channelCommitmentType = channelCommitmentType,
        channelLifetime = channelLifetime,
        channelUptime = channelUptime,
        channelCloseAddress = channelCloseAddress,
        channelPushAmountSat = channelPushAmountSat,
        channelThawHeight = channelThawHeight
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                channelActive
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                channelRemotePubkey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                channelChannelPoint
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                channelChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                channelCapacity
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                channelLocalBalance
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                channelRemoteBalance
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                channelCommitFee
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                channelCommitWeight
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                channelFeePerKw
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                channelUnsettledBalance
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 12)
                channelTotalSatoshisSent
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 13)
                channelTotalSatoshisReceived
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 14)
                channelNumUpdates
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 15)
                ( Hs.coerce @(Hs.Vector LndGrpc.HTLC)
                    @(HsProtobuf.NestedVec LndGrpc.HTLC)
                    channelPendingHtlcs
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 16)
                channelCsvDelay
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 17)
                channelPrivate
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 18)
                channelInitiator
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 19)
                channelChanStatusFlags
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 20)
                channelLocalChanReserveSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 21)
                channelRemoteChanReserveSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 22)
                channelStaticRemoteKey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 26)
                channelCommitmentType
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 23)
                channelLifetime
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 24)
                channelUptime
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 25)
                channelCloseAddress
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 27)
                channelPushAmountSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 28)
                channelThawHeight
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure Channel)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 10)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 11)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 12)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 13)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 14)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.HTLC))
              @(_ (Hs.Vector LndGrpc.HTLC))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 15)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 16)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 17)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 18)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 19)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 20)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 21)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 22)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 26)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 23)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 24)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 25)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 27)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 28)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "active")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "remote_pubkey")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "channel_point")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "chan_id")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "capacity")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "local_balance")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "remote_balance")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "commit_fee")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "commit_weight")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "fee_per_kw")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "unsettled_balance")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 12)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "total_satoshis_sent")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 13)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "total_satoshis_received")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 14)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "num_updates")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 15)
          (HsProtobuf.Repeated (HsProtobuf.Named (HsProtobuf.Single "HTLC")))
          (HsProtobuf.Single "pending_htlcs")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 16)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "csv_delay")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 17)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "private")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 18)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "initiator")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 19)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "chan_status_flags")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 20)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "local_chan_reserve_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 21)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "remote_chan_reserve_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 22)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "static_remote_key")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 26)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "CommitmentType"))
          )
          (HsProtobuf.Single "commitment_type")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 23)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "lifetime")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 24)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "uptime")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 25)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "close_address")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 27)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "push_amount_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 28)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "thaw_height")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB Channel where
  toJSONPB
    ( Channel
        f1
        f2
        f3
        f4
        f5
        f6
        f7
        f8
        f9
        f10
        f11
        f12
        f13
        f14
        f15
        f16
        f17
        f18
        f19
        f20
        f21
        f22
        f26
        f23
        f24
        f25
        f27
        f28
      ) =
      ( HsJSONPB.object
          [ "active" .= f1,
            "remote_pubkey" .= f2,
            "channel_point" .= f3,
            "chan_id" .= f4,
            "capacity" .= f5,
            "local_balance" .= f6,
            "remote_balance" .= f7,
            "commit_fee" .= f8,
            "commit_weight" .= f9,
            "fee_per_kw" .= f10,
            "unsettled_balance" .= f11,
            "total_satoshis_sent" .= f12,
            "total_satoshis_received" .= f13,
            "num_updates" .= f14,
            "pending_htlcs" .= f15,
            "csv_delay" .= f16,
            "private" .= f17,
            "initiator" .= f18,
            "chan_status_flags" .= f19,
            "local_chan_reserve_sat" .= f20,
            "remote_chan_reserve_sat" .= f21,
            "static_remote_key" .= f22,
            "commitment_type" .= f26,
            "lifetime" .= f23,
            "uptime" .= f24,
            "close_address" .= f25,
            "push_amount_sat" .= f27,
            "thaw_height" .= f28
          ]
      )
  toEncodingPB
    ( Channel
        f1
        f2
        f3
        f4
        f5
        f6
        f7
        f8
        f9
        f10
        f11
        f12
        f13
        f14
        f15
        f16
        f17
        f18
        f19
        f20
        f21
        f22
        f26
        f23
        f24
        f25
        f27
        f28
      ) =
      ( HsJSONPB.pairs
          [ "active" .= f1,
            "remote_pubkey" .= f2,
            "channel_point" .= f3,
            "chan_id" .= f4,
            "capacity" .= f5,
            "local_balance" .= f6,
            "remote_balance" .= f7,
            "commit_fee" .= f8,
            "commit_weight" .= f9,
            "fee_per_kw" .= f10,
            "unsettled_balance" .= f11,
            "total_satoshis_sent" .= f12,
            "total_satoshis_received" .= f13,
            "num_updates" .= f14,
            "pending_htlcs" .= f15,
            "csv_delay" .= f16,
            "private" .= f17,
            "initiator" .= f18,
            "chan_status_flags" .= f19,
            "local_chan_reserve_sat" .= f20,
            "remote_chan_reserve_sat" .= f21,
            "static_remote_key" .= f22,
            "commitment_type" .= f26,
            "lifetime" .= f23,
            "uptime" .= f24,
            "close_address" .= f25,
            "push_amount_sat" .= f27,
            "thaw_height" .= f28
          ]
      )

instance HsJSONPB.FromJSONPB Channel where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Channel"
        ( \obj ->
            (Hs.pure Channel) <*> obj .: "active" <*> obj .: "remote_pubkey"
              <*> obj .: "channel_point"
              <*> obj .: "chan_id"
              <*> obj .: "capacity"
              <*> obj .: "local_balance"
              <*> obj .: "remote_balance"
              <*> obj .: "commit_fee"
              <*> obj .: "commit_weight"
              <*> obj .: "fee_per_kw"
              <*> obj .: "unsettled_balance"
              <*> obj .: "total_satoshis_sent"
              <*> obj .: "total_satoshis_received"
              <*> obj .: "num_updates"
              <*> obj .: "pending_htlcs"
              <*> obj .: "csv_delay"
              <*> obj .: "private"
              <*> obj .: "initiator"
              <*> obj .: "chan_status_flags"
              <*> obj .: "local_chan_reserve_sat"
              <*> obj .: "remote_chan_reserve_sat"
              <*> obj .: "static_remote_key"
              <*> obj .: "commitment_type"
              <*> obj .: "lifetime"
              <*> obj .: "uptime"
              <*> obj .: "close_address"
              <*> obj .: "push_amount_sat"
              <*> obj .: "thaw_height"
        )
    )

instance HsJSONPB.ToJSON Channel where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Channel where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema Channel where
  declareNamedSchema _ =
    do
      let declare_active = HsJSONPB.declareSchemaRef
      channelActive <- declare_active Proxy.Proxy
      let declare_remote_pubkey = HsJSONPB.declareSchemaRef
      channelRemotePubkey <- declare_remote_pubkey Proxy.Proxy
      let declare_channel_point = HsJSONPB.declareSchemaRef
      channelChannelPoint <- declare_channel_point Proxy.Proxy
      let declare_chan_id = HsJSONPB.declareSchemaRef
      channelChanId <- declare_chan_id Proxy.Proxy
      let declare_capacity = HsJSONPB.declareSchemaRef
      channelCapacity <- declare_capacity Proxy.Proxy
      let declare_local_balance = HsJSONPB.declareSchemaRef
      channelLocalBalance <- declare_local_balance Proxy.Proxy
      let declare_remote_balance = HsJSONPB.declareSchemaRef
      channelRemoteBalance <- declare_remote_balance Proxy.Proxy
      let declare_commit_fee = HsJSONPB.declareSchemaRef
      channelCommitFee <- declare_commit_fee Proxy.Proxy
      let declare_commit_weight = HsJSONPB.declareSchemaRef
      channelCommitWeight <- declare_commit_weight Proxy.Proxy
      let declare_fee_per_kw = HsJSONPB.declareSchemaRef
      channelFeePerKw <- declare_fee_per_kw Proxy.Proxy
      let declare_unsettled_balance = HsJSONPB.declareSchemaRef
      channelUnsettledBalance <- declare_unsettled_balance Proxy.Proxy
      let declare_total_satoshis_sent = HsJSONPB.declareSchemaRef
      channelTotalSatoshisSent <- declare_total_satoshis_sent Proxy.Proxy
      let declare_total_satoshis_received = HsJSONPB.declareSchemaRef
      channelTotalSatoshisReceived <-
        declare_total_satoshis_received
          Proxy.Proxy
      let declare_num_updates = HsJSONPB.declareSchemaRef
      channelNumUpdates <- declare_num_updates Proxy.Proxy
      let declare_pending_htlcs = HsJSONPB.declareSchemaRef
      channelPendingHtlcs <- declare_pending_htlcs Proxy.Proxy
      let declare_csv_delay = HsJSONPB.declareSchemaRef
      channelCsvDelay <- declare_csv_delay Proxy.Proxy
      let declare_private = HsJSONPB.declareSchemaRef
      channelPrivate <- declare_private Proxy.Proxy
      let declare_initiator = HsJSONPB.declareSchemaRef
      channelInitiator <- declare_initiator Proxy.Proxy
      let declare_chan_status_flags = HsJSONPB.declareSchemaRef
      channelChanStatusFlags <- declare_chan_status_flags Proxy.Proxy
      let declare_local_chan_reserve_sat = HsJSONPB.declareSchemaRef
      channelLocalChanReserveSat <-
        declare_local_chan_reserve_sat
          Proxy.Proxy
      let declare_remote_chan_reserve_sat = HsJSONPB.declareSchemaRef
      channelRemoteChanReserveSat <-
        declare_remote_chan_reserve_sat
          Proxy.Proxy
      let declare_static_remote_key = HsJSONPB.declareSchemaRef
      channelStaticRemoteKey <- declare_static_remote_key Proxy.Proxy
      let declare_commitment_type = HsJSONPB.declareSchemaRef
      channelCommitmentType <- declare_commitment_type Proxy.Proxy
      let declare_lifetime = HsJSONPB.declareSchemaRef
      channelLifetime <- declare_lifetime Proxy.Proxy
      let declare_uptime = HsJSONPB.declareSchemaRef
      channelUptime <- declare_uptime Proxy.Proxy
      let declare_close_address = HsJSONPB.declareSchemaRef
      channelCloseAddress <- declare_close_address Proxy.Proxy
      let declare_push_amount_sat = HsJSONPB.declareSchemaRef
      channelPushAmountSat <- declare_push_amount_sat Proxy.Proxy
      let declare_thaw_height = HsJSONPB.declareSchemaRef
      channelThawHeight <- declare_thaw_height Proxy.Proxy
      let _ =
            Hs.pure Channel <*> HsJSONPB.asProxy declare_active
              <*> HsJSONPB.asProxy declare_remote_pubkey
              <*> HsJSONPB.asProxy declare_channel_point
              <*> HsJSONPB.asProxy declare_chan_id
              <*> HsJSONPB.asProxy declare_capacity
              <*> HsJSONPB.asProxy declare_local_balance
              <*> HsJSONPB.asProxy declare_remote_balance
              <*> HsJSONPB.asProxy declare_commit_fee
              <*> HsJSONPB.asProxy declare_commit_weight
              <*> HsJSONPB.asProxy declare_fee_per_kw
              <*> HsJSONPB.asProxy declare_unsettled_balance
              <*> HsJSONPB.asProxy declare_total_satoshis_sent
              <*> HsJSONPB.asProxy declare_total_satoshis_received
              <*> HsJSONPB.asProxy declare_num_updates
              <*> HsJSONPB.asProxy declare_pending_htlcs
              <*> HsJSONPB.asProxy declare_csv_delay
              <*> HsJSONPB.asProxy declare_private
              <*> HsJSONPB.asProxy declare_initiator
              <*> HsJSONPB.asProxy declare_chan_status_flags
              <*> HsJSONPB.asProxy declare_local_chan_reserve_sat
              <*> HsJSONPB.asProxy declare_remote_chan_reserve_sat
              <*> HsJSONPB.asProxy declare_static_remote_key
              <*> HsJSONPB.asProxy declare_commitment_type
              <*> HsJSONPB.asProxy declare_lifetime
              <*> HsJSONPB.asProxy declare_uptime
              <*> HsJSONPB.asProxy declare_close_address
              <*> HsJSONPB.asProxy declare_push_amount_sat
              <*> HsJSONPB.asProxy declare_thaw_height
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "Channel",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("active", channelActive),
                          ("remote_pubkey", channelRemotePubkey),
                          ("channel_point", channelChannelPoint),
                          ("chan_id", channelChanId),
                          ("capacity", channelCapacity),
                          ("local_balance", channelLocalBalance),
                          ("remote_balance", channelRemoteBalance),
                          ("commit_fee", channelCommitFee),
                          ("commit_weight", channelCommitWeight),
                          ("fee_per_kw", channelFeePerKw),
                          ( "unsettled_balance",
                            channelUnsettledBalance
                          ),
                          ( "total_satoshis_sent",
                            channelTotalSatoshisSent
                          ),
                          ( "total_satoshis_received",
                            channelTotalSatoshisReceived
                          ),
                          ("num_updates", channelNumUpdates),
                          ("pending_htlcs", channelPendingHtlcs),
                          ("csv_delay", channelCsvDelay),
                          ("private", channelPrivate),
                          ("initiator", channelInitiator),
                          ( "chan_status_flags",
                            channelChanStatusFlags
                          ),
                          ( "local_chan_reserve_sat",
                            channelLocalChanReserveSat
                          ),
                          ( "remote_chan_reserve_sat",
                            channelRemoteChanReserveSat
                          ),
                          ( "static_remote_key",
                            channelStaticRemoteKey
                          ),
                          ("commitment_type", channelCommitmentType),
                          ("lifetime", channelLifetime),
                          ("uptime", channelUptime),
                          ("close_address", channelCloseAddress),
                          ("push_amount_sat", channelPushAmountSat),
                          ("thaw_height", channelThawHeight)
                        ]
                  }
            }
        )

data ListChannelsRequest
  = ListChannelsRequest
      { listChannelsRequestActiveOnly ::
          Hs.Bool,
        listChannelsRequestInactiveOnly :: Hs.Bool,
        listChannelsRequestPublicOnly :: Hs.Bool,
        listChannelsRequestPrivateOnly :: Hs.Bool,
        listChannelsRequestPeer :: Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ListChannelsRequest where
  nameOf _ = (Hs.fromString "ListChannelsRequest")

instance HsProtobuf.HasDefault ListChannelsRequest

instance HsProtobuf.Message ListChannelsRequest where
  encodeMessage
    _
    ListChannelsRequest
      { listChannelsRequestActiveOnly =
          listChannelsRequestActiveOnly,
        listChannelsRequestInactiveOnly = listChannelsRequestInactiveOnly,
        listChannelsRequestPublicOnly = listChannelsRequestPublicOnly,
        listChannelsRequestPrivateOnly = listChannelsRequestPrivateOnly,
        listChannelsRequestPeer = listChannelsRequestPeer
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                listChannelsRequestActiveOnly
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                listChannelsRequestInactiveOnly
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                listChannelsRequestPublicOnly
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                listChannelsRequestPrivateOnly
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                listChannelsRequestPeer
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ListChannelsRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "active_only")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "inactive_only")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "public_only")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "private_only")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "peer")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ListChannelsRequest where
  toJSONPB (ListChannelsRequest f1 f2 f3 f4 f5) =
    ( HsJSONPB.object
        [ "active_only" .= f1,
          "inactive_only" .= f2,
          "public_only" .= f3,
          "private_only" .= f4,
          "peer" .= f5
        ]
    )
  toEncodingPB (ListChannelsRequest f1 f2 f3 f4 f5) =
    ( HsJSONPB.pairs
        [ "active_only" .= f1,
          "inactive_only" .= f2,
          "public_only" .= f3,
          "private_only" .= f4,
          "peer" .= f5
        ]
    )

instance HsJSONPB.FromJSONPB ListChannelsRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ListChannelsRequest"
        ( \obj ->
            (Hs.pure ListChannelsRequest) <*> obj .: "active_only"
              <*> obj .: "inactive_only"
              <*> obj .: "public_only"
              <*> obj .: "private_only"
              <*> obj .: "peer"
        )
    )

instance HsJSONPB.ToJSON ListChannelsRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ListChannelsRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ListChannelsRequest where
  declareNamedSchema _ =
    do
      let declare_active_only = HsJSONPB.declareSchemaRef
      listChannelsRequestActiveOnly <- declare_active_only Proxy.Proxy
      let declare_inactive_only = HsJSONPB.declareSchemaRef
      listChannelsRequestInactiveOnly <-
        declare_inactive_only
          Proxy.Proxy
      let declare_public_only = HsJSONPB.declareSchemaRef
      listChannelsRequestPublicOnly <- declare_public_only Proxy.Proxy
      let declare_private_only = HsJSONPB.declareSchemaRef
      listChannelsRequestPrivateOnly <- declare_private_only Proxy.Proxy
      let declare_peer = HsJSONPB.declareSchemaRef
      listChannelsRequestPeer <- declare_peer Proxy.Proxy
      let _ =
            Hs.pure ListChannelsRequest
              <*> HsJSONPB.asProxy declare_active_only
              <*> HsJSONPB.asProxy declare_inactive_only
              <*> HsJSONPB.asProxy declare_public_only
              <*> HsJSONPB.asProxy declare_private_only
              <*> HsJSONPB.asProxy declare_peer
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ListChannelsRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "active_only",
                            listChannelsRequestActiveOnly
                          ),
                          ( "inactive_only",
                            listChannelsRequestInactiveOnly
                          ),
                          ( "public_only",
                            listChannelsRequestPublicOnly
                          ),
                          ( "private_only",
                            listChannelsRequestPrivateOnly
                          ),
                          ("peer", listChannelsRequestPeer)
                        ]
                  }
            }
        )

data ListChannelsResponse
  = ListChannelsResponse
      { listChannelsResponseChannels ::
          Hs.Vector
            LndGrpc.Channel
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ListChannelsResponse where
  nameOf _ = (Hs.fromString "ListChannelsResponse")

instance HsProtobuf.HasDefault ListChannelsResponse

instance HsProtobuf.Message ListChannelsResponse where
  encodeMessage
    _
    ListChannelsResponse
      { listChannelsResponseChannels =
          listChannelsResponseChannels
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                ( Hs.coerce @(Hs.Vector LndGrpc.Channel)
                    @(HsProtobuf.NestedVec LndGrpc.Channel)
                    listChannelsResponseChannels
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ListChannelsResponse)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.Channel))
              @(_ (Hs.Vector LndGrpc.Channel))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 11)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "Channel"))
          )
          (HsProtobuf.Single "channels")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ListChannelsResponse where
  toJSONPB (ListChannelsResponse f11) =
    (HsJSONPB.object ["channels" .= f11])
  toEncodingPB (ListChannelsResponse f11) =
    (HsJSONPB.pairs ["channels" .= f11])

instance HsJSONPB.FromJSONPB ListChannelsResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ListChannelsResponse"
        (\obj -> (Hs.pure ListChannelsResponse) <*> obj .: "channels")
    )

instance HsJSONPB.ToJSON ListChannelsResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ListChannelsResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ListChannelsResponse where
  declareNamedSchema _ =
    do
      let declare_channels = HsJSONPB.declareSchemaRef
      listChannelsResponseChannels <- declare_channels Proxy.Proxy
      let _ =
            Hs.pure ListChannelsResponse
              <*> HsJSONPB.asProxy declare_channels
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ListChannelsResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "channels",
                            listChannelsResponseChannels
                          )
                        ]
                  }
            }
        )

data Initiator
  = InitiatorINITIATOR_UNKNOWN
  | InitiatorINITIATOR_LOCAL
  | InitiatorINITIATOR_REMOTE
  | InitiatorINITIATOR_BOTH
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Initiator where
  nameOf _ = (Hs.fromString "Initiator")

instance HsProtobuf.HasDefault Initiator

instance Hs.Bounded Initiator where
  minBound = InitiatorINITIATOR_UNKNOWN
  maxBound = InitiatorINITIATOR_BOTH

instance Hs.Ord Initiator where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum Initiator where
  toProtoEnumMay 0 = Hs.Just InitiatorINITIATOR_UNKNOWN
  toProtoEnumMay 1 = Hs.Just InitiatorINITIATOR_LOCAL
  toProtoEnumMay 2 = Hs.Just InitiatorINITIATOR_REMOTE
  toProtoEnumMay 3 = Hs.Just InitiatorINITIATOR_BOTH
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (InitiatorINITIATOR_UNKNOWN) = 0
  fromProtoEnum (InitiatorINITIATOR_LOCAL) = 1
  fromProtoEnum (InitiatorINITIATOR_REMOTE) = 2
  fromProtoEnum (InitiatorINITIATOR_BOTH) = 3

instance HsJSONPB.ToJSONPB Initiator where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB Initiator where
  parseJSONPB (HsJSONPB.String "INITIATOR_UNKNOWN") =
    Hs.pure InitiatorINITIATOR_UNKNOWN
  parseJSONPB (HsJSONPB.String "INITIATOR_LOCAL") =
    Hs.pure InitiatorINITIATOR_LOCAL
  parseJSONPB (HsJSONPB.String "INITIATOR_REMOTE") =
    Hs.pure InitiatorINITIATOR_REMOTE
  parseJSONPB (HsJSONPB.String "INITIATOR_BOTH") =
    Hs.pure InitiatorINITIATOR_BOTH
  parseJSONPB v = (HsJSONPB.typeMismatch "Initiator" v)

instance HsJSONPB.ToJSON Initiator where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Initiator where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite Initiator

data ChannelCloseSummary
  = ChannelCloseSummary
      { channelCloseSummaryChannelPoint ::
          Hs.Text,
        channelCloseSummaryChanId :: Hs.Word64,
        channelCloseSummaryChainHash :: Hs.Text,
        channelCloseSummaryClosingTxHash :: Hs.Text,
        channelCloseSummaryRemotePubkey :: Hs.Text,
        channelCloseSummaryCapacity :: Hs.Int64,
        channelCloseSummaryCloseHeight :: Hs.Word32,
        channelCloseSummarySettledBalance :: Hs.Int64,
        channelCloseSummaryTimeLockedBalance :: Hs.Int64,
        channelCloseSummaryCloseType ::
          HsProtobuf.Enumerated
            LndGrpc.ChannelCloseSummary_ClosureType,
        channelCloseSummaryOpenInitiator ::
          HsProtobuf.Enumerated
            LndGrpc.Initiator,
        channelCloseSummaryCloseInitiator ::
          HsProtobuf.Enumerated
            LndGrpc.Initiator
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelCloseSummary where
  nameOf _ = (Hs.fromString "ChannelCloseSummary")

instance HsProtobuf.HasDefault ChannelCloseSummary

instance HsProtobuf.Message ChannelCloseSummary where
  encodeMessage
    _
    ChannelCloseSummary
      { channelCloseSummaryChannelPoint =
          channelCloseSummaryChannelPoint,
        channelCloseSummaryChanId = channelCloseSummaryChanId,
        channelCloseSummaryChainHash = channelCloseSummaryChainHash,
        channelCloseSummaryClosingTxHash =
          channelCloseSummaryClosingTxHash,
        channelCloseSummaryRemotePubkey = channelCloseSummaryRemotePubkey,
        channelCloseSummaryCapacity = channelCloseSummaryCapacity,
        channelCloseSummaryCloseHeight = channelCloseSummaryCloseHeight,
        channelCloseSummarySettledBalance =
          channelCloseSummarySettledBalance,
        channelCloseSummaryTimeLockedBalance =
          channelCloseSummaryTimeLockedBalance,
        channelCloseSummaryCloseType = channelCloseSummaryCloseType,
        channelCloseSummaryOpenInitiator =
          channelCloseSummaryOpenInitiator,
        channelCloseSummaryCloseInitiator =
          channelCloseSummaryCloseInitiator
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                channelCloseSummaryChannelPoint
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                channelCloseSummaryChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                channelCloseSummaryChainHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                channelCloseSummaryClosingTxHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                channelCloseSummaryRemotePubkey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                channelCloseSummaryCapacity
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                channelCloseSummaryCloseHeight
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                channelCloseSummarySettledBalance
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                channelCloseSummaryTimeLockedBalance
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                channelCloseSummaryCloseType
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                channelCloseSummaryOpenInitiator
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 12)
                channelCloseSummaryCloseInitiator
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChannelCloseSummary)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 10)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 11)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 12)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "channel_point")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "chan_id")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "chain_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "closing_tx_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "remote_pubkey")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "capacity")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "close_height")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "settled_balance")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "time_locked_balance")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "ClosureType"))
          )
          (HsProtobuf.Single "close_type")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "Initiator"))
          )
          (HsProtobuf.Single "open_initiator")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 12)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "Initiator"))
          )
          (HsProtobuf.Single "close_initiator")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChannelCloseSummary where
  toJSONPB (ChannelCloseSummary f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12) =
    ( HsJSONPB.object
        [ "channel_point" .= f1,
          "chan_id" .= f2,
          "chain_hash" .= f3,
          "closing_tx_hash" .= f4,
          "remote_pubkey" .= f5,
          "capacity" .= f6,
          "close_height" .= f7,
          "settled_balance" .= f8,
          "time_locked_balance" .= f9,
          "close_type" .= f10,
          "open_initiator" .= f11,
          "close_initiator" .= f12
        ]
    )
  toEncodingPB (ChannelCloseSummary f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12) =
    ( HsJSONPB.pairs
        [ "channel_point" .= f1,
          "chan_id" .= f2,
          "chain_hash" .= f3,
          "closing_tx_hash" .= f4,
          "remote_pubkey" .= f5,
          "capacity" .= f6,
          "close_height" .= f7,
          "settled_balance" .= f8,
          "time_locked_balance" .= f9,
          "close_type" .= f10,
          "open_initiator" .= f11,
          "close_initiator" .= f12
        ]
    )

instance HsJSONPB.FromJSONPB ChannelCloseSummary where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelCloseSummary"
        ( \obj ->
            (Hs.pure ChannelCloseSummary) <*> obj .: "channel_point"
              <*> obj .: "chan_id"
              <*> obj .: "chain_hash"
              <*> obj .: "closing_tx_hash"
              <*> obj .: "remote_pubkey"
              <*> obj .: "capacity"
              <*> obj .: "close_height"
              <*> obj .: "settled_balance"
              <*> obj .: "time_locked_balance"
              <*> obj .: "close_type"
              <*> obj .: "open_initiator"
              <*> obj .: "close_initiator"
        )
    )

instance HsJSONPB.ToJSON ChannelCloseSummary where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelCloseSummary where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelCloseSummary where
  declareNamedSchema _ =
    do
      let declare_channel_point = HsJSONPB.declareSchemaRef
      channelCloseSummaryChannelPoint <-
        declare_channel_point
          Proxy.Proxy
      let declare_chan_id = HsJSONPB.declareSchemaRef
      channelCloseSummaryChanId <- declare_chan_id Proxy.Proxy
      let declare_chain_hash = HsJSONPB.declareSchemaRef
      channelCloseSummaryChainHash <- declare_chain_hash Proxy.Proxy
      let declare_closing_tx_hash = HsJSONPB.declareSchemaRef
      channelCloseSummaryClosingTxHash <-
        declare_closing_tx_hash
          Proxy.Proxy
      let declare_remote_pubkey = HsJSONPB.declareSchemaRef
      channelCloseSummaryRemotePubkey <-
        declare_remote_pubkey
          Proxy.Proxy
      let declare_capacity = HsJSONPB.declareSchemaRef
      channelCloseSummaryCapacity <- declare_capacity Proxy.Proxy
      let declare_close_height = HsJSONPB.declareSchemaRef
      channelCloseSummaryCloseHeight <- declare_close_height Proxy.Proxy
      let declare_settled_balance = HsJSONPB.declareSchemaRef
      channelCloseSummarySettledBalance <-
        declare_settled_balance
          Proxy.Proxy
      let declare_time_locked_balance = HsJSONPB.declareSchemaRef
      channelCloseSummaryTimeLockedBalance <-
        declare_time_locked_balance
          Proxy.Proxy
      let declare_close_type = HsJSONPB.declareSchemaRef
      channelCloseSummaryCloseType <- declare_close_type Proxy.Proxy
      let declare_open_initiator = HsJSONPB.declareSchemaRef
      channelCloseSummaryOpenInitiator <-
        declare_open_initiator
          Proxy.Proxy
      let declare_close_initiator = HsJSONPB.declareSchemaRef
      channelCloseSummaryCloseInitiator <-
        declare_close_initiator
          Proxy.Proxy
      let _ =
            Hs.pure ChannelCloseSummary
              <*> HsJSONPB.asProxy declare_channel_point
              <*> HsJSONPB.asProxy declare_chan_id
              <*> HsJSONPB.asProxy declare_chain_hash
              <*> HsJSONPB.asProxy declare_closing_tx_hash
              <*> HsJSONPB.asProxy declare_remote_pubkey
              <*> HsJSONPB.asProxy declare_capacity
              <*> HsJSONPB.asProxy declare_close_height
              <*> HsJSONPB.asProxy declare_settled_balance
              <*> HsJSONPB.asProxy declare_time_locked_balance
              <*> HsJSONPB.asProxy declare_close_type
              <*> HsJSONPB.asProxy declare_open_initiator
              <*> HsJSONPB.asProxy declare_close_initiator
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelCloseSummary",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "channel_point",
                            channelCloseSummaryChannelPoint
                          ),
                          ("chan_id", channelCloseSummaryChanId),
                          ( "chain_hash",
                            channelCloseSummaryChainHash
                          ),
                          ( "closing_tx_hash",
                            channelCloseSummaryClosingTxHash
                          ),
                          ( "remote_pubkey",
                            channelCloseSummaryRemotePubkey
                          ),
                          ("capacity", channelCloseSummaryCapacity),
                          ( "close_height",
                            channelCloseSummaryCloseHeight
                          ),
                          ( "settled_balance",
                            channelCloseSummarySettledBalance
                          ),
                          ( "time_locked_balance",
                            channelCloseSummaryTimeLockedBalance
                          ),
                          ( "close_type",
                            channelCloseSummaryCloseType
                          ),
                          ( "open_initiator",
                            channelCloseSummaryOpenInitiator
                          ),
                          ( "close_initiator",
                            channelCloseSummaryCloseInitiator
                          )
                        ]
                  }
            }
        )

data ChannelCloseSummary_ClosureType
  = ChannelCloseSummary_ClosureTypeCOOPERATIVE_CLOSE
  | ChannelCloseSummary_ClosureTypeLOCAL_FORCE_CLOSE
  | ChannelCloseSummary_ClosureTypeREMOTE_FORCE_CLOSE
  | ChannelCloseSummary_ClosureTypeBREACH_CLOSE
  | ChannelCloseSummary_ClosureTypeFUNDING_CANCELED
  | ChannelCloseSummary_ClosureTypeABANDONED
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelCloseSummary_ClosureType where
  nameOf _ = (Hs.fromString "ChannelCloseSummary_ClosureType")

instance HsProtobuf.HasDefault ChannelCloseSummary_ClosureType

instance Hs.Bounded ChannelCloseSummary_ClosureType where
  minBound = ChannelCloseSummary_ClosureTypeCOOPERATIVE_CLOSE
  maxBound = ChannelCloseSummary_ClosureTypeABANDONED

instance Hs.Ord ChannelCloseSummary_ClosureType where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum ChannelCloseSummary_ClosureType where
  toProtoEnumMay 0 =
    Hs.Just ChannelCloseSummary_ClosureTypeCOOPERATIVE_CLOSE
  toProtoEnumMay 1 =
    Hs.Just ChannelCloseSummary_ClosureTypeLOCAL_FORCE_CLOSE
  toProtoEnumMay 2 =
    Hs.Just ChannelCloseSummary_ClosureTypeREMOTE_FORCE_CLOSE
  toProtoEnumMay 3 =
    Hs.Just ChannelCloseSummary_ClosureTypeBREACH_CLOSE
  toProtoEnumMay 4 =
    Hs.Just ChannelCloseSummary_ClosureTypeFUNDING_CANCELED
  toProtoEnumMay 5 = Hs.Just ChannelCloseSummary_ClosureTypeABANDONED
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (ChannelCloseSummary_ClosureTypeCOOPERATIVE_CLOSE) =
    0
  fromProtoEnum (ChannelCloseSummary_ClosureTypeLOCAL_FORCE_CLOSE) =
    1
  fromProtoEnum (ChannelCloseSummary_ClosureTypeREMOTE_FORCE_CLOSE) =
    2
  fromProtoEnum (ChannelCloseSummary_ClosureTypeBREACH_CLOSE) = 3
  fromProtoEnum (ChannelCloseSummary_ClosureTypeFUNDING_CANCELED) = 4
  fromProtoEnum (ChannelCloseSummary_ClosureTypeABANDONED) = 5

instance HsJSONPB.ToJSONPB ChannelCloseSummary_ClosureType where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB ChannelCloseSummary_ClosureType where
  parseJSONPB (HsJSONPB.String "COOPERATIVE_CLOSE") =
    Hs.pure ChannelCloseSummary_ClosureTypeCOOPERATIVE_CLOSE
  parseJSONPB (HsJSONPB.String "LOCAL_FORCE_CLOSE") =
    Hs.pure ChannelCloseSummary_ClosureTypeLOCAL_FORCE_CLOSE
  parseJSONPB (HsJSONPB.String "REMOTE_FORCE_CLOSE") =
    Hs.pure ChannelCloseSummary_ClosureTypeREMOTE_FORCE_CLOSE
  parseJSONPB (HsJSONPB.String "BREACH_CLOSE") =
    Hs.pure ChannelCloseSummary_ClosureTypeBREACH_CLOSE
  parseJSONPB (HsJSONPB.String "FUNDING_CANCELED") =
    Hs.pure ChannelCloseSummary_ClosureTypeFUNDING_CANCELED
  parseJSONPB (HsJSONPB.String "ABANDONED") =
    Hs.pure ChannelCloseSummary_ClosureTypeABANDONED
  parseJSONPB v =
    (HsJSONPB.typeMismatch "ChannelCloseSummary_ClosureType" v)

instance HsJSONPB.ToJSON ChannelCloseSummary_ClosureType where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelCloseSummary_ClosureType where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite ChannelCloseSummary_ClosureType

data ClosedChannelsRequest
  = ClosedChannelsRequest
      { closedChannelsRequestCooperative ::
          Hs.Bool,
        closedChannelsRequestLocalForce :: Hs.Bool,
        closedChannelsRequestRemoteForce :: Hs.Bool,
        closedChannelsRequestBreach :: Hs.Bool,
        closedChannelsRequestFundingCanceled :: Hs.Bool,
        closedChannelsRequestAbandoned :: Hs.Bool
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ClosedChannelsRequest where
  nameOf _ = (Hs.fromString "ClosedChannelsRequest")

instance HsProtobuf.HasDefault ClosedChannelsRequest

instance HsProtobuf.Message ClosedChannelsRequest where
  encodeMessage
    _
    ClosedChannelsRequest
      { closedChannelsRequestCooperative =
          closedChannelsRequestCooperative,
        closedChannelsRequestLocalForce = closedChannelsRequestLocalForce,
        closedChannelsRequestRemoteForce =
          closedChannelsRequestRemoteForce,
        closedChannelsRequestBreach = closedChannelsRequestBreach,
        closedChannelsRequestFundingCanceled =
          closedChannelsRequestFundingCanceled,
        closedChannelsRequestAbandoned = closedChannelsRequestAbandoned
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                closedChannelsRequestCooperative
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                closedChannelsRequestLocalForce
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                closedChannelsRequestRemoteForce
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                closedChannelsRequestBreach
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                closedChannelsRequestFundingCanceled
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                closedChannelsRequestAbandoned
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ClosedChannelsRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "cooperative")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "local_force")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "remote_force")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "breach")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "funding_canceled")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "abandoned")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ClosedChannelsRequest where
  toJSONPB (ClosedChannelsRequest f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.object
        [ "cooperative" .= f1,
          "local_force" .= f2,
          "remote_force" .= f3,
          "breach" .= f4,
          "funding_canceled" .= f5,
          "abandoned" .= f6
        ]
    )
  toEncodingPB (ClosedChannelsRequest f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.pairs
        [ "cooperative" .= f1,
          "local_force" .= f2,
          "remote_force" .= f3,
          "breach" .= f4,
          "funding_canceled" .= f5,
          "abandoned" .= f6
        ]
    )

instance HsJSONPB.FromJSONPB ClosedChannelsRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ClosedChannelsRequest"
        ( \obj ->
            (Hs.pure ClosedChannelsRequest) <*> obj .: "cooperative"
              <*> obj .: "local_force"
              <*> obj .: "remote_force"
              <*> obj .: "breach"
              <*> obj .: "funding_canceled"
              <*> obj .: "abandoned"
        )
    )

instance HsJSONPB.ToJSON ClosedChannelsRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ClosedChannelsRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ClosedChannelsRequest where
  declareNamedSchema _ =
    do
      let declare_cooperative = HsJSONPB.declareSchemaRef
      closedChannelsRequestCooperative <- declare_cooperative Proxy.Proxy
      let declare_local_force = HsJSONPB.declareSchemaRef
      closedChannelsRequestLocalForce <- declare_local_force Proxy.Proxy
      let declare_remote_force = HsJSONPB.declareSchemaRef
      closedChannelsRequestRemoteForce <-
        declare_remote_force
          Proxy.Proxy
      let declare_breach = HsJSONPB.declareSchemaRef
      closedChannelsRequestBreach <- declare_breach Proxy.Proxy
      let declare_funding_canceled = HsJSONPB.declareSchemaRef
      closedChannelsRequestFundingCanceled <-
        declare_funding_canceled
          Proxy.Proxy
      let declare_abandoned = HsJSONPB.declareSchemaRef
      closedChannelsRequestAbandoned <- declare_abandoned Proxy.Proxy
      let _ =
            Hs.pure ClosedChannelsRequest
              <*> HsJSONPB.asProxy declare_cooperative
              <*> HsJSONPB.asProxy declare_local_force
              <*> HsJSONPB.asProxy declare_remote_force
              <*> HsJSONPB.asProxy declare_breach
              <*> HsJSONPB.asProxy declare_funding_canceled
              <*> HsJSONPB.asProxy declare_abandoned
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ClosedChannelsRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "cooperative",
                            closedChannelsRequestCooperative
                          ),
                          ( "local_force",
                            closedChannelsRequestLocalForce
                          ),
                          ( "remote_force",
                            closedChannelsRequestRemoteForce
                          ),
                          ("breach", closedChannelsRequestBreach),
                          ( "funding_canceled",
                            closedChannelsRequestFundingCanceled
                          ),
                          ( "abandoned",
                            closedChannelsRequestAbandoned
                          )
                        ]
                  }
            }
        )

data ClosedChannelsResponse
  = ClosedChannelsResponse
      { closedChannelsResponseChannels ::
          Hs.Vector
            LndGrpc.ChannelCloseSummary
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ClosedChannelsResponse where
  nameOf _ = (Hs.fromString "ClosedChannelsResponse")

instance HsProtobuf.HasDefault ClosedChannelsResponse

instance HsProtobuf.Message ClosedChannelsResponse where
  encodeMessage
    _
    ClosedChannelsResponse
      { closedChannelsResponseChannels =
          closedChannelsResponseChannels
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector LndGrpc.ChannelCloseSummary)
                    @(HsProtobuf.NestedVec LndGrpc.ChannelCloseSummary)
                    closedChannelsResponseChannels
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ClosedChannelsResponse)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.ChannelCloseSummary))
              @(_ (Hs.Vector LndGrpc.ChannelCloseSummary))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "ChannelCloseSummary"))
          )
          (HsProtobuf.Single "channels")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ClosedChannelsResponse where
  toJSONPB (ClosedChannelsResponse f1) =
    (HsJSONPB.object ["channels" .= f1])
  toEncodingPB (ClosedChannelsResponse f1) =
    (HsJSONPB.pairs ["channels" .= f1])

instance HsJSONPB.FromJSONPB ClosedChannelsResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ClosedChannelsResponse"
        (\obj -> (Hs.pure ClosedChannelsResponse) <*> obj .: "channels")
    )

instance HsJSONPB.ToJSON ClosedChannelsResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ClosedChannelsResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ClosedChannelsResponse where
  declareNamedSchema _ =
    do
      let declare_channels = HsJSONPB.declareSchemaRef
      closedChannelsResponseChannels <- declare_channels Proxy.Proxy
      let _ =
            Hs.pure ClosedChannelsResponse
              <*> HsJSONPB.asProxy declare_channels
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ClosedChannelsResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "channels",
                            closedChannelsResponseChannels
                          )
                        ]
                  }
            }
        )

data Peer
  = Peer
      { peerPubKey :: Hs.Text,
        peerAddress :: Hs.Text,
        peerBytesSent :: Hs.Word64,
        peerBytesRecv :: Hs.Word64,
        peerSatSent :: Hs.Int64,
        peerSatRecv :: Hs.Int64,
        peerInbound :: Hs.Bool,
        peerPingTime :: Hs.Int64,
        peerSyncType :: HsProtobuf.Enumerated LndGrpc.Peer_SyncType,
        peerFeatures :: Hs.Map Hs.Word32 (Hs.Maybe LndGrpc.Feature),
        peerErrors :: Hs.Vector LndGrpc.TimestampedError
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Peer where
  nameOf _ = (Hs.fromString "Peer")

instance HsProtobuf.HasDefault Peer

instance HsProtobuf.Message Peer where
  encodeMessage
    _
    Peer
      { peerPubKey = peerPubKey,
        peerAddress = peerAddress,
        peerBytesSent = peerBytesSent,
        peerBytesRecv = peerBytesRecv,
        peerSatSent = peerSatSent,
        peerSatRecv = peerSatRecv,
        peerInbound = peerInbound,
        peerPingTime = peerPingTime,
        peerSyncType = peerSyncType,
        peerFeatures = peerFeatures,
        peerErrors = peerErrors
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                peerPubKey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                peerAddress
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                peerBytesSent
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                peerBytesRecv
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                peerSatSent
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                peerSatRecv
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                peerInbound
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                peerPingTime
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                peerSyncType
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                ( Hs.unsafeCoerce @(Hs.Map Hs.Word32 (Hs.Maybe LndGrpc.Feature))
                    @(Hs.Map Hs.Word32 (HsProtobuf.Nested LndGrpc.Feature))
                    peerFeatures
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 12)
                ( Hs.coerce @(Hs.Vector LndGrpc.TimestampedError)
                    @(HsProtobuf.NestedVec LndGrpc.TimestampedError)
                    peerErrors
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure Peer)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 10)
          )
      <*> ( Hs.unsafeCoerce
              @(_ (Hs.Map Hs.Word32 (HsProtobuf.Nested LndGrpc.Feature)))
              @(_ (Hs.Map Hs.Word32 (Hs.Maybe LndGrpc.Feature)))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 11)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.TimestampedError))
              @(_ (Hs.Vector LndGrpc.TimestampedError))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 12)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "pub_key")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "address")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "bytes_sent")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "bytes_recv")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "sat_sent")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "sat_recv")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "inbound")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "ping_time")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "SyncType")))
          (HsProtobuf.Single "sync_type")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          ( HsProtobuf.Map
              HsProtobuf.UInt32
              (HsProtobuf.Named (HsProtobuf.Single "Feature"))
          )
          (HsProtobuf.Single "features")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 12)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "TimestampedError"))
          )
          (HsProtobuf.Single "errors")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB Peer where
  toJSONPB (Peer f1 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12) =
    ( HsJSONPB.object
        [ "pub_key" .= f1,
          "address" .= f3,
          "bytes_sent" .= f4,
          "bytes_recv" .= f5,
          "sat_sent" .= f6,
          "sat_recv" .= f7,
          "inbound" .= f8,
          "ping_time" .= f9,
          "sync_type" .= f10,
          "features" .= f11,
          "errors" .= f12
        ]
    )
  toEncodingPB (Peer f1 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12) =
    ( HsJSONPB.pairs
        [ "pub_key" .= f1,
          "address" .= f3,
          "bytes_sent" .= f4,
          "bytes_recv" .= f5,
          "sat_sent" .= f6,
          "sat_recv" .= f7,
          "inbound" .= f8,
          "ping_time" .= f9,
          "sync_type" .= f10,
          "features" .= f11,
          "errors" .= f12
        ]
    )

instance HsJSONPB.FromJSONPB Peer where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Peer"
        ( \obj ->
            (Hs.pure Peer) <*> obj .: "pub_key" <*> obj .: "address"
              <*> obj .: "bytes_sent"
              <*> obj .: "bytes_recv"
              <*> obj .: "sat_sent"
              <*> obj .: "sat_recv"
              <*> obj .: "inbound"
              <*> obj .: "ping_time"
              <*> obj .: "sync_type"
              <*> obj .: "features"
              <*> obj .: "errors"
        )
    )

instance HsJSONPB.ToJSON Peer where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Peer where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema Peer where
  declareNamedSchema _ =
    do
      let declare_pub_key = HsJSONPB.declareSchemaRef
      peerPubKey <- declare_pub_key Proxy.Proxy
      let declare_address = HsJSONPB.declareSchemaRef
      peerAddress <- declare_address Proxy.Proxy
      let declare_bytes_sent = HsJSONPB.declareSchemaRef
      peerBytesSent <- declare_bytes_sent Proxy.Proxy
      let declare_bytes_recv = HsJSONPB.declareSchemaRef
      peerBytesRecv <- declare_bytes_recv Proxy.Proxy
      let declare_sat_sent = HsJSONPB.declareSchemaRef
      peerSatSent <- declare_sat_sent Proxy.Proxy
      let declare_sat_recv = HsJSONPB.declareSchemaRef
      peerSatRecv <- declare_sat_recv Proxy.Proxy
      let declare_inbound = HsJSONPB.declareSchemaRef
      peerInbound <- declare_inbound Proxy.Proxy
      let declare_ping_time = HsJSONPB.declareSchemaRef
      peerPingTime <- declare_ping_time Proxy.Proxy
      let declare_sync_type = HsJSONPB.declareSchemaRef
      peerSyncType <- declare_sync_type Proxy.Proxy
      let declare_features = HsJSONPB.declareSchemaRef
      peerFeatures <- declare_features Proxy.Proxy
      let declare_errors = HsJSONPB.declareSchemaRef
      peerErrors <- declare_errors Proxy.Proxy
      let _ =
            Hs.pure Peer <*> HsJSONPB.asProxy declare_pub_key
              <*> HsJSONPB.asProxy declare_address
              <*> HsJSONPB.asProxy declare_bytes_sent
              <*> HsJSONPB.asProxy declare_bytes_recv
              <*> HsJSONPB.asProxy declare_sat_sent
              <*> HsJSONPB.asProxy declare_sat_recv
              <*> HsJSONPB.asProxy declare_inbound
              <*> HsJSONPB.asProxy declare_ping_time
              <*> HsJSONPB.asProxy declare_sync_type
              <*> HsJSONPB.asProxy declare_features
              <*> HsJSONPB.asProxy declare_errors
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName = Hs.Just "Peer",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("pub_key", peerPubKey),
                          ("address", peerAddress),
                          ("bytes_sent", peerBytesSent),
                          ("bytes_recv", peerBytesRecv),
                          ("sat_sent", peerSatSent),
                          ("sat_recv", peerSatRecv),
                          ("inbound", peerInbound),
                          ("ping_time", peerPingTime),
                          ("sync_type", peerSyncType),
                          ("features", peerFeatures),
                          ("errors", peerErrors)
                        ]
                  }
            }
        )

data Peer_SyncType
  = Peer_SyncTypeUNKNOWN_SYNC
  | Peer_SyncTypeACTIVE_SYNC
  | Peer_SyncTypePASSIVE_SYNC
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Peer_SyncType where
  nameOf _ = (Hs.fromString "Peer_SyncType")

instance HsProtobuf.HasDefault Peer_SyncType

instance Hs.Bounded Peer_SyncType where
  minBound = Peer_SyncTypeUNKNOWN_SYNC
  maxBound = Peer_SyncTypePASSIVE_SYNC

instance Hs.Ord Peer_SyncType where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum Peer_SyncType where
  toProtoEnumMay 0 = Hs.Just Peer_SyncTypeUNKNOWN_SYNC
  toProtoEnumMay 1 = Hs.Just Peer_SyncTypeACTIVE_SYNC
  toProtoEnumMay 2 = Hs.Just Peer_SyncTypePASSIVE_SYNC
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (Peer_SyncTypeUNKNOWN_SYNC) = 0
  fromProtoEnum (Peer_SyncTypeACTIVE_SYNC) = 1
  fromProtoEnum (Peer_SyncTypePASSIVE_SYNC) = 2

instance HsJSONPB.ToJSONPB Peer_SyncType where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB Peer_SyncType where
  parseJSONPB (HsJSONPB.String "UNKNOWN_SYNC") =
    Hs.pure Peer_SyncTypeUNKNOWN_SYNC
  parseJSONPB (HsJSONPB.String "ACTIVE_SYNC") =
    Hs.pure Peer_SyncTypeACTIVE_SYNC
  parseJSONPB (HsJSONPB.String "PASSIVE_SYNC") =
    Hs.pure Peer_SyncTypePASSIVE_SYNC
  parseJSONPB v = (HsJSONPB.typeMismatch "Peer_SyncType" v)

instance HsJSONPB.ToJSON Peer_SyncType where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Peer_SyncType where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite Peer_SyncType

data TimestampedError
  = TimestampedError
      { timestampedErrorTimestamp ::
          Hs.Word64,
        timestampedErrorError :: Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named TimestampedError where
  nameOf _ = (Hs.fromString "TimestampedError")

instance HsProtobuf.HasDefault TimestampedError

instance HsProtobuf.Message TimestampedError where
  encodeMessage
    _
    TimestampedError
      { timestampedErrorTimestamp =
          timestampedErrorTimestamp,
        timestampedErrorError = timestampedErrorError
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                timestampedErrorTimestamp
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                timestampedErrorError
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure TimestampedError)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "timestamp")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "error")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB TimestampedError where
  toJSONPB (TimestampedError f1 f2) =
    (HsJSONPB.object ["timestamp" .= f1, "error" .= f2])
  toEncodingPB (TimestampedError f1 f2) =
    (HsJSONPB.pairs ["timestamp" .= f1, "error" .= f2])

instance HsJSONPB.FromJSONPB TimestampedError where
  parseJSONPB =
    ( HsJSONPB.withObject
        "TimestampedError"
        ( \obj ->
            (Hs.pure TimestampedError) <*> obj .: "timestamp"
              <*> obj .: "error"
        )
    )

instance HsJSONPB.ToJSON TimestampedError where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON TimestampedError where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema TimestampedError where
  declareNamedSchema _ =
    do
      let declare_timestamp = HsJSONPB.declareSchemaRef
      timestampedErrorTimestamp <- declare_timestamp Proxy.Proxy
      let declare_error = HsJSONPB.declareSchemaRef
      timestampedErrorError <- declare_error Proxy.Proxy
      let _ =
            Hs.pure TimestampedError
              <*> HsJSONPB.asProxy declare_timestamp
              <*> HsJSONPB.asProxy declare_error
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "TimestampedError",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("timestamp", timestampedErrorTimestamp),
                          ("error", timestampedErrorError)
                        ]
                  }
            }
        )

data ListPeersRequest
  = ListPeersRequest
      { listPeersRequestLatestError ::
          Hs.Bool
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ListPeersRequest where
  nameOf _ = (Hs.fromString "ListPeersRequest")

instance HsProtobuf.HasDefault ListPeersRequest

instance HsProtobuf.Message ListPeersRequest where
  encodeMessage
    _
    ListPeersRequest
      { listPeersRequestLatestError =
          listPeersRequestLatestError
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                listPeersRequestLatestError
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ListPeersRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "latest_error")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ListPeersRequest where
  toJSONPB (ListPeersRequest f1) =
    (HsJSONPB.object ["latest_error" .= f1])
  toEncodingPB (ListPeersRequest f1) =
    (HsJSONPB.pairs ["latest_error" .= f1])

instance HsJSONPB.FromJSONPB ListPeersRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ListPeersRequest"
        (\obj -> (Hs.pure ListPeersRequest) <*> obj .: "latest_error")
    )

instance HsJSONPB.ToJSON ListPeersRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ListPeersRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ListPeersRequest where
  declareNamedSchema _ =
    do
      let declare_latest_error = HsJSONPB.declareSchemaRef
      listPeersRequestLatestError <- declare_latest_error Proxy.Proxy
      let _ =
            Hs.pure ListPeersRequest
              <*> HsJSONPB.asProxy declare_latest_error
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ListPeersRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "latest_error",
                            listPeersRequestLatestError
                          )
                        ]
                  }
            }
        )

data ListPeersResponse
  = ListPeersResponse
      { listPeersResponsePeers ::
          Hs.Vector
            LndGrpc.Peer
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ListPeersResponse where
  nameOf _ = (Hs.fromString "ListPeersResponse")

instance HsProtobuf.HasDefault ListPeersResponse

instance HsProtobuf.Message ListPeersResponse where
  encodeMessage
    _
    ListPeersResponse {listPeersResponsePeers = listPeersResponsePeers} =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector LndGrpc.Peer)
                    @(HsProtobuf.NestedVec LndGrpc.Peer)
                    listPeersResponsePeers
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ListPeersResponse)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.Peer))
              @(_ (Hs.Vector LndGrpc.Peer))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Repeated (HsProtobuf.Named (HsProtobuf.Single "Peer")))
          (HsProtobuf.Single "peers")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ListPeersResponse where
  toJSONPB (ListPeersResponse f1) = (HsJSONPB.object ["peers" .= f1])
  toEncodingPB (ListPeersResponse f1) =
    (HsJSONPB.pairs ["peers" .= f1])

instance HsJSONPB.FromJSONPB ListPeersResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ListPeersResponse"
        (\obj -> (Hs.pure ListPeersResponse) <*> obj .: "peers")
    )

instance HsJSONPB.ToJSON ListPeersResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ListPeersResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ListPeersResponse where
  declareNamedSchema _ =
    do
      let declare_peers = HsJSONPB.declareSchemaRef
      listPeersResponsePeers <- declare_peers Proxy.Proxy
      let _ =
            Hs.pure ListPeersResponse
              <*> HsJSONPB.asProxy declare_peers
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ListPeersResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("peers", listPeersResponsePeers)]
                  }
            }
        )

data PeerEventSubscription = PeerEventSubscription {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PeerEventSubscription where
  nameOf _ = (Hs.fromString "PeerEventSubscription")

instance HsProtobuf.HasDefault PeerEventSubscription

instance HsProtobuf.Message PeerEventSubscription where
  encodeMessage _ PeerEventSubscription {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure PeerEventSubscription)
  dotProto _ = []

instance HsJSONPB.ToJSONPB PeerEventSubscription where
  toJSONPB (PeerEventSubscription) = (HsJSONPB.object [])
  toEncodingPB (PeerEventSubscription) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB PeerEventSubscription where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PeerEventSubscription"
        (\obj -> (Hs.pure PeerEventSubscription))
    )

instance HsJSONPB.ToJSON PeerEventSubscription where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PeerEventSubscription where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PeerEventSubscription where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PeerEventSubscription",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data PeerEvent
  = PeerEvent
      { peerEventPubKey :: Hs.Text,
        peerEventType :: HsProtobuf.Enumerated LndGrpc.PeerEvent_EventType
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PeerEvent where
  nameOf _ = (Hs.fromString "PeerEvent")

instance HsProtobuf.HasDefault PeerEvent

instance HsProtobuf.Message PeerEvent where
  encodeMessage
    _
    PeerEvent
      { peerEventPubKey = peerEventPubKey,
        peerEventType = peerEventType
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                peerEventPubKey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                peerEventType
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PeerEvent)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "pub_key")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "EventType"))
          )
          (HsProtobuf.Single "type")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB PeerEvent where
  toJSONPB (PeerEvent f1 f2) =
    (HsJSONPB.object ["pub_key" .= f1, "type" .= f2])
  toEncodingPB (PeerEvent f1 f2) =
    (HsJSONPB.pairs ["pub_key" .= f1, "type" .= f2])

instance HsJSONPB.FromJSONPB PeerEvent where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PeerEvent"
        ( \obj ->
            (Hs.pure PeerEvent) <*> obj .: "pub_key" <*> obj .: "type"
        )
    )

instance HsJSONPB.ToJSON PeerEvent where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PeerEvent where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PeerEvent where
  declareNamedSchema _ =
    do
      let declare_pub_key = HsJSONPB.declareSchemaRef
      peerEventPubKey <- declare_pub_key Proxy.Proxy
      let declare_type = HsJSONPB.declareSchemaRef
      peerEventType <- declare_type Proxy.Proxy
      let _ =
            Hs.pure PeerEvent <*> HsJSONPB.asProxy declare_pub_key
              <*> HsJSONPB.asProxy declare_type
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PeerEvent",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("pub_key", peerEventPubKey),
                          ("type", peerEventType)
                        ]
                  }
            }
        )

data PeerEvent_EventType
  = PeerEvent_EventTypePEER_ONLINE
  | PeerEvent_EventTypePEER_OFFLINE
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PeerEvent_EventType where
  nameOf _ = (Hs.fromString "PeerEvent_EventType")

instance HsProtobuf.HasDefault PeerEvent_EventType

instance Hs.Bounded PeerEvent_EventType where
  minBound = PeerEvent_EventTypePEER_ONLINE
  maxBound = PeerEvent_EventTypePEER_OFFLINE

instance Hs.Ord PeerEvent_EventType where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum PeerEvent_EventType where
  toProtoEnumMay 0 = Hs.Just PeerEvent_EventTypePEER_ONLINE
  toProtoEnumMay 1 = Hs.Just PeerEvent_EventTypePEER_OFFLINE
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (PeerEvent_EventTypePEER_ONLINE) = 0
  fromProtoEnum (PeerEvent_EventTypePEER_OFFLINE) = 1

instance HsJSONPB.ToJSONPB PeerEvent_EventType where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB PeerEvent_EventType where
  parseJSONPB (HsJSONPB.String "PEER_ONLINE") =
    Hs.pure PeerEvent_EventTypePEER_ONLINE
  parseJSONPB (HsJSONPB.String "PEER_OFFLINE") =
    Hs.pure PeerEvent_EventTypePEER_OFFLINE
  parseJSONPB v = (HsJSONPB.typeMismatch "PeerEvent_EventType" v)

instance HsJSONPB.ToJSON PeerEvent_EventType where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PeerEvent_EventType where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite PeerEvent_EventType

data GetInfoRequest = GetInfoRequest {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named GetInfoRequest where
  nameOf _ = (Hs.fromString "GetInfoRequest")

instance HsProtobuf.HasDefault GetInfoRequest

instance HsProtobuf.Message GetInfoRequest where
  encodeMessage _ GetInfoRequest {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure GetInfoRequest)
  dotProto _ = []

instance HsJSONPB.ToJSONPB GetInfoRequest where
  toJSONPB (GetInfoRequest) = (HsJSONPB.object [])
  toEncodingPB (GetInfoRequest) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB GetInfoRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "GetInfoRequest"
        (\obj -> (Hs.pure GetInfoRequest))
    )

instance HsJSONPB.ToJSON GetInfoRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetInfoRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetInfoRequest where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "GetInfoRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data GetInfoResponse
  = GetInfoResponse
      { getInfoResponseVersion ::
          Hs.Text,
        getInfoResponseCommitHash :: Hs.Text,
        getInfoResponseIdentityPubkey :: Hs.Text,
        getInfoResponseAlias :: Hs.Text,
        getInfoResponseColor :: Hs.Text,
        getInfoResponseNumPendingChannels :: Hs.Word32,
        getInfoResponseNumActiveChannels :: Hs.Word32,
        getInfoResponseNumInactiveChannels :: Hs.Word32,
        getInfoResponseNumPeers :: Hs.Word32,
        getInfoResponseBlockHeight :: Hs.Word32,
        getInfoResponseBlockHash :: Hs.Text,
        getInfoResponseBestHeaderTimestamp :: Hs.Int64,
        getInfoResponseSyncedToChain :: Hs.Bool,
        getInfoResponseSyncedToGraph :: Hs.Bool,
        getInfoResponseTestnet :: Hs.Bool,
        getInfoResponseChains :: Hs.Vector LndGrpc.Chain,
        getInfoResponseUris :: Hs.Vector Hs.Text,
        getInfoResponseFeatures ::
          Hs.Map Hs.Word32
            (Hs.Maybe LndGrpc.Feature)
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named GetInfoResponse where
  nameOf _ = (Hs.fromString "GetInfoResponse")

instance HsProtobuf.HasDefault GetInfoResponse

instance HsProtobuf.Message GetInfoResponse where
  encodeMessage
    _
    GetInfoResponse
      { getInfoResponseVersion = getInfoResponseVersion,
        getInfoResponseCommitHash = getInfoResponseCommitHash,
        getInfoResponseIdentityPubkey = getInfoResponseIdentityPubkey,
        getInfoResponseAlias = getInfoResponseAlias,
        getInfoResponseColor = getInfoResponseColor,
        getInfoResponseNumPendingChannels =
          getInfoResponseNumPendingChannels,
        getInfoResponseNumActiveChannels =
          getInfoResponseNumActiveChannels,
        getInfoResponseNumInactiveChannels =
          getInfoResponseNumInactiveChannels,
        getInfoResponseNumPeers = getInfoResponseNumPeers,
        getInfoResponseBlockHeight = getInfoResponseBlockHeight,
        getInfoResponseBlockHash = getInfoResponseBlockHash,
        getInfoResponseBestHeaderTimestamp =
          getInfoResponseBestHeaderTimestamp,
        getInfoResponseSyncedToChain = getInfoResponseSyncedToChain,
        getInfoResponseSyncedToGraph = getInfoResponseSyncedToGraph,
        getInfoResponseTestnet = getInfoResponseTestnet,
        getInfoResponseChains = getInfoResponseChains,
        getInfoResponseUris = getInfoResponseUris,
        getInfoResponseFeatures = getInfoResponseFeatures
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 14)
                getInfoResponseVersion
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 20)
                getInfoResponseCommitHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                getInfoResponseIdentityPubkey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                getInfoResponseAlias
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 17)
                getInfoResponseColor
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                getInfoResponseNumPendingChannels
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                getInfoResponseNumActiveChannels
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 15)
                getInfoResponseNumInactiveChannels
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                getInfoResponseNumPeers
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                getInfoResponseBlockHeight
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                getInfoResponseBlockHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 13)
                getInfoResponseBestHeaderTimestamp
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                getInfoResponseSyncedToChain
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 18)
                getInfoResponseSyncedToGraph
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                getInfoResponseTestnet
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 16)
                ( Hs.coerce @(Hs.Vector LndGrpc.Chain)
                    @(HsProtobuf.NestedVec LndGrpc.Chain)
                    getInfoResponseChains
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 12)
                ( Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                    getInfoResponseUris
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 19)
                ( Hs.unsafeCoerce @(Hs.Map Hs.Word32 (Hs.Maybe LndGrpc.Feature))
                    @(Hs.Map Hs.Word32 (HsProtobuf.Nested LndGrpc.Feature))
                    getInfoResponseFeatures
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure GetInfoResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 14)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 20)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 17)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 15)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 13)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 18)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 10)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.Chain))
              @(_ (Hs.Vector LndGrpc.Chain))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 16)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
              @(_ (Hs.Vector Hs.Text))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 12)
              )
          )
      <*> ( Hs.unsafeCoerce
              @(_ (Hs.Map Hs.Word32 (HsProtobuf.Nested LndGrpc.Feature)))
              @(_ (Hs.Map Hs.Word32 (Hs.Maybe LndGrpc.Feature)))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 19)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 14)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "version")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 20)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "commit_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "identity_pubkey")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "alias")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 17)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "color")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "num_pending_channels")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "num_active_channels")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 15)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "num_inactive_channels")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "num_peers")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "block_height")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "block_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 13)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "best_header_timestamp")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "synced_to_chain")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 18)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "synced_to_graph")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "testnet")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 16)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "Chain"))
          )
          (HsProtobuf.Single "chains")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 12)
          (HsProtobuf.Repeated HsProtobuf.String)
          (HsProtobuf.Single "uris")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 19)
          ( HsProtobuf.Map
              HsProtobuf.UInt32
              (HsProtobuf.Named (HsProtobuf.Single "Feature"))
          )
          (HsProtobuf.Single "features")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB GetInfoResponse where
  toJSONPB
    ( GetInfoResponse
        f14
        f20
        f1
        f2
        f17
        f3
        f4
        f15
        f5
        f6
        f8
        f13
        f9
        f18
        f10
        f16
        f12
        f19
      ) =
      ( HsJSONPB.object
          [ "version" .= f14,
            "commit_hash" .= f20,
            "identity_pubkey" .= f1,
            "alias" .= f2,
            "color" .= f17,
            "num_pending_channels" .= f3,
            "num_active_channels" .= f4,
            "num_inactive_channels" .= f15,
            "num_peers" .= f5,
            "block_height" .= f6,
            "block_hash" .= f8,
            "best_header_timestamp" .= f13,
            "synced_to_chain" .= f9,
            "synced_to_graph" .= f18,
            "testnet" .= f10,
            "chains" .= f16,
            "uris" .= f12,
            "features" .= f19
          ]
      )
  toEncodingPB
    ( GetInfoResponse
        f14
        f20
        f1
        f2
        f17
        f3
        f4
        f15
        f5
        f6
        f8
        f13
        f9
        f18
        f10
        f16
        f12
        f19
      ) =
      ( HsJSONPB.pairs
          [ "version" .= f14,
            "commit_hash" .= f20,
            "identity_pubkey" .= f1,
            "alias" .= f2,
            "color" .= f17,
            "num_pending_channels" .= f3,
            "num_active_channels" .= f4,
            "num_inactive_channels" .= f15,
            "num_peers" .= f5,
            "block_height" .= f6,
            "block_hash" .= f8,
            "best_header_timestamp" .= f13,
            "synced_to_chain" .= f9,
            "synced_to_graph" .= f18,
            "testnet" .= f10,
            "chains" .= f16,
            "uris" .= f12,
            "features" .= f19
          ]
      )

instance HsJSONPB.FromJSONPB GetInfoResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "GetInfoResponse"
        ( \obj ->
            (Hs.pure GetInfoResponse) <*> obj .: "version"
              <*> obj .: "commit_hash"
              <*> obj .: "identity_pubkey"
              <*> obj .: "alias"
              <*> obj .: "color"
              <*> obj .: "num_pending_channels"
              <*> obj .: "num_active_channels"
              <*> obj .: "num_inactive_channels"
              <*> obj .: "num_peers"
              <*> obj .: "block_height"
              <*> obj .: "block_hash"
              <*> obj .: "best_header_timestamp"
              <*> obj .: "synced_to_chain"
              <*> obj .: "synced_to_graph"
              <*> obj .: "testnet"
              <*> obj .: "chains"
              <*> obj .: "uris"
              <*> obj .: "features"
        )
    )

instance HsJSONPB.ToJSON GetInfoResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetInfoResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetInfoResponse where
  declareNamedSchema _ =
    do
      let declare_version = HsJSONPB.declareSchemaRef
      getInfoResponseVersion <- declare_version Proxy.Proxy
      let declare_commit_hash = HsJSONPB.declareSchemaRef
      getInfoResponseCommitHash <- declare_commit_hash Proxy.Proxy
      let declare_identity_pubkey = HsJSONPB.declareSchemaRef
      getInfoResponseIdentityPubkey <-
        declare_identity_pubkey
          Proxy.Proxy
      let declare_alias = HsJSONPB.declareSchemaRef
      getInfoResponseAlias <- declare_alias Proxy.Proxy
      let declare_color = HsJSONPB.declareSchemaRef
      getInfoResponseColor <- declare_color Proxy.Proxy
      let declare_num_pending_channels = HsJSONPB.declareSchemaRef
      getInfoResponseNumPendingChannels <-
        declare_num_pending_channels
          Proxy.Proxy
      let declare_num_active_channels = HsJSONPB.declareSchemaRef
      getInfoResponseNumActiveChannels <-
        declare_num_active_channels
          Proxy.Proxy
      let declare_num_inactive_channels = HsJSONPB.declareSchemaRef
      getInfoResponseNumInactiveChannels <-
        declare_num_inactive_channels
          Proxy.Proxy
      let declare_num_peers = HsJSONPB.declareSchemaRef
      getInfoResponseNumPeers <- declare_num_peers Proxy.Proxy
      let declare_block_height = HsJSONPB.declareSchemaRef
      getInfoResponseBlockHeight <- declare_block_height Proxy.Proxy
      let declare_block_hash = HsJSONPB.declareSchemaRef
      getInfoResponseBlockHash <- declare_block_hash Proxy.Proxy
      let declare_best_header_timestamp = HsJSONPB.declareSchemaRef
      getInfoResponseBestHeaderTimestamp <-
        declare_best_header_timestamp
          Proxy.Proxy
      let declare_synced_to_chain = HsJSONPB.declareSchemaRef
      getInfoResponseSyncedToChain <- declare_synced_to_chain Proxy.Proxy
      let declare_synced_to_graph = HsJSONPB.declareSchemaRef
      getInfoResponseSyncedToGraph <- declare_synced_to_graph Proxy.Proxy
      let declare_testnet = HsJSONPB.declareSchemaRef
      getInfoResponseTestnet <- declare_testnet Proxy.Proxy
      let declare_chains = HsJSONPB.declareSchemaRef
      getInfoResponseChains <- declare_chains Proxy.Proxy
      let declare_uris = HsJSONPB.declareSchemaRef
      getInfoResponseUris <- declare_uris Proxy.Proxy
      let declare_features = HsJSONPB.declareSchemaRef
      getInfoResponseFeatures <- declare_features Proxy.Proxy
      let _ =
            Hs.pure GetInfoResponse
              <*> HsJSONPB.asProxy declare_version
              <*> HsJSONPB.asProxy declare_commit_hash
              <*> HsJSONPB.asProxy declare_identity_pubkey
              <*> HsJSONPB.asProxy declare_alias
              <*> HsJSONPB.asProxy declare_color
              <*> HsJSONPB.asProxy declare_num_pending_channels
              <*> HsJSONPB.asProxy declare_num_active_channels
              <*> HsJSONPB.asProxy declare_num_inactive_channels
              <*> HsJSONPB.asProxy declare_num_peers
              <*> HsJSONPB.asProxy declare_block_height
              <*> HsJSONPB.asProxy declare_block_hash
              <*> HsJSONPB.asProxy declare_best_header_timestamp
              <*> HsJSONPB.asProxy declare_synced_to_chain
              <*> HsJSONPB.asProxy declare_synced_to_graph
              <*> HsJSONPB.asProxy declare_testnet
              <*> HsJSONPB.asProxy declare_chains
              <*> HsJSONPB.asProxy declare_uris
              <*> HsJSONPB.asProxy declare_features
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "GetInfoResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("version", getInfoResponseVersion),
                          ("commit_hash", getInfoResponseCommitHash),
                          ( "identity_pubkey",
                            getInfoResponseIdentityPubkey
                          ),
                          ("alias", getInfoResponseAlias),
                          ("color", getInfoResponseColor),
                          ( "num_pending_channels",
                            getInfoResponseNumPendingChannels
                          ),
                          ( "num_active_channels",
                            getInfoResponseNumActiveChannels
                          ),
                          ( "num_inactive_channels",
                            getInfoResponseNumInactiveChannels
                          ),
                          ("num_peers", getInfoResponseNumPeers),
                          ( "block_height",
                            getInfoResponseBlockHeight
                          ),
                          ("block_hash", getInfoResponseBlockHash),
                          ( "best_header_timestamp",
                            getInfoResponseBestHeaderTimestamp
                          ),
                          ( "synced_to_chain",
                            getInfoResponseSyncedToChain
                          ),
                          ( "synced_to_graph",
                            getInfoResponseSyncedToGraph
                          ),
                          ("testnet", getInfoResponseTestnet),
                          ("chains", getInfoResponseChains),
                          ("uris", getInfoResponseUris),
                          ("features", getInfoResponseFeatures)
                        ]
                  }
            }
        )

data Chain = Chain {chainChain :: Hs.Text, chainNetwork :: Hs.Text}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Chain where
  nameOf _ = (Hs.fromString "Chain")

instance HsProtobuf.HasDefault Chain

instance HsProtobuf.Message Chain where
  encodeMessage
    _
    Chain {chainChain = chainChain, chainNetwork = chainNetwork} =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                chainChain
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                chainNetwork
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure Chain)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "chain")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "network")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB Chain where
  toJSONPB (Chain f1 f2) =
    (HsJSONPB.object ["chain" .= f1, "network" .= f2])
  toEncodingPB (Chain f1 f2) =
    (HsJSONPB.pairs ["chain" .= f1, "network" .= f2])

instance HsJSONPB.FromJSONPB Chain where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Chain"
        (\obj -> (Hs.pure Chain) <*> obj .: "chain" <*> obj .: "network")
    )

instance HsJSONPB.ToJSON Chain where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Chain where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema Chain where
  declareNamedSchema _ =
    do
      let declare_chain = HsJSONPB.declareSchemaRef
      chainChain <- declare_chain Proxy.Proxy
      let declare_network = HsJSONPB.declareSchemaRef
      chainNetwork <- declare_network Proxy.Proxy
      let _ =
            Hs.pure Chain <*> HsJSONPB.asProxy declare_chain
              <*> HsJSONPB.asProxy declare_network
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName = Hs.Just "Chain",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("chain", chainChain),
                          ("network", chainNetwork)
                        ]
                  }
            }
        )

data ConfirmationUpdate
  = ConfirmationUpdate
      { confirmationUpdateBlockSha ::
          Hs.ByteString,
        confirmationUpdateBlockHeight :: Hs.Int32,
        confirmationUpdateNumConfsLeft :: Hs.Word32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ConfirmationUpdate where
  nameOf _ = (Hs.fromString "ConfirmationUpdate")

instance HsProtobuf.HasDefault ConfirmationUpdate

instance HsProtobuf.Message ConfirmationUpdate where
  encodeMessage
    _
    ConfirmationUpdate
      { confirmationUpdateBlockSha =
          confirmationUpdateBlockSha,
        confirmationUpdateBlockHeight = confirmationUpdateBlockHeight,
        confirmationUpdateNumConfsLeft = confirmationUpdateNumConfsLeft
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                confirmationUpdateBlockSha
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                confirmationUpdateBlockHeight
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                confirmationUpdateNumConfsLeft
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ConfirmationUpdate)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "block_sha")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "block_height")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "num_confs_left")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ConfirmationUpdate where
  toJSONPB (ConfirmationUpdate f1 f2 f3) =
    ( HsJSONPB.object
        ["block_sha" .= f1, "block_height" .= f2, "num_confs_left" .= f3]
    )
  toEncodingPB (ConfirmationUpdate f1 f2 f3) =
    ( HsJSONPB.pairs
        ["block_sha" .= f1, "block_height" .= f2, "num_confs_left" .= f3]
    )

instance HsJSONPB.FromJSONPB ConfirmationUpdate where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ConfirmationUpdate"
        ( \obj ->
            (Hs.pure ConfirmationUpdate) <*> obj .: "block_sha"
              <*> obj .: "block_height"
              <*> obj .: "num_confs_left"
        )
    )

instance HsJSONPB.ToJSON ConfirmationUpdate where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ConfirmationUpdate where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ConfirmationUpdate where
  declareNamedSchema _ =
    do
      let declare_block_sha = HsJSONPB.declareSchemaRef
      confirmationUpdateBlockSha <- declare_block_sha Proxy.Proxy
      let declare_block_height = HsJSONPB.declareSchemaRef
      confirmationUpdateBlockHeight <- declare_block_height Proxy.Proxy
      let declare_num_confs_left = HsJSONPB.declareSchemaRef
      confirmationUpdateNumConfsLeft <-
        declare_num_confs_left
          Proxy.Proxy
      let _ =
            Hs.pure ConfirmationUpdate
              <*> HsJSONPB.asProxy declare_block_sha
              <*> HsJSONPB.asProxy declare_block_height
              <*> HsJSONPB.asProxy declare_num_confs_left
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ConfirmationUpdate",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("block_sha", confirmationUpdateBlockSha),
                          ( "block_height",
                            confirmationUpdateBlockHeight
                          ),
                          ( "num_confs_left",
                            confirmationUpdateNumConfsLeft
                          )
                        ]
                  }
            }
        )

data ChannelOpenUpdate
  = ChannelOpenUpdate
      { channelOpenUpdateChannelPoint ::
          Hs.Maybe
            LndGrpc.ChannelPoint
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelOpenUpdate where
  nameOf _ = (Hs.fromString "ChannelOpenUpdate")

instance HsProtobuf.HasDefault ChannelOpenUpdate

instance HsProtobuf.Message ChannelOpenUpdate where
  encodeMessage
    _
    ChannelOpenUpdate
      { channelOpenUpdateChannelPoint =
          channelOpenUpdateChannelPoint
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelPoint)
                    @(HsProtobuf.Nested LndGrpc.ChannelPoint)
                    channelOpenUpdateChannelPoint
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChannelOpenUpdate)
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelPoint))
              @(_ (Hs.Maybe LndGrpc.ChannelPoint))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "ChannelPoint"))
          )
          (HsProtobuf.Single "channel_point")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChannelOpenUpdate where
  toJSONPB (ChannelOpenUpdate f1) =
    (HsJSONPB.object ["channel_point" .= f1])
  toEncodingPB (ChannelOpenUpdate f1) =
    (HsJSONPB.pairs ["channel_point" .= f1])

instance HsJSONPB.FromJSONPB ChannelOpenUpdate where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelOpenUpdate"
        (\obj -> (Hs.pure ChannelOpenUpdate) <*> obj .: "channel_point")
    )

instance HsJSONPB.ToJSON ChannelOpenUpdate where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelOpenUpdate where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelOpenUpdate where
  declareNamedSchema _ =
    do
      let declare_channel_point = HsJSONPB.declareSchemaRef
      channelOpenUpdateChannelPoint <- declare_channel_point Proxy.Proxy
      let _ =
            Hs.pure ChannelOpenUpdate
              <*> HsJSONPB.asProxy declare_channel_point
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelOpenUpdate",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "channel_point",
                            channelOpenUpdateChannelPoint
                          )
                        ]
                  }
            }
        )

data ChannelCloseUpdate
  = ChannelCloseUpdate
      { channelCloseUpdateClosingTxid ::
          Hs.ByteString,
        channelCloseUpdateSuccess :: Hs.Bool
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelCloseUpdate where
  nameOf _ = (Hs.fromString "ChannelCloseUpdate")

instance HsProtobuf.HasDefault ChannelCloseUpdate

instance HsProtobuf.Message ChannelCloseUpdate where
  encodeMessage
    _
    ChannelCloseUpdate
      { channelCloseUpdateClosingTxid =
          channelCloseUpdateClosingTxid,
        channelCloseUpdateSuccess = channelCloseUpdateSuccess
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                channelCloseUpdateClosingTxid
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                channelCloseUpdateSuccess
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChannelCloseUpdate)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "closing_txid")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "success")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChannelCloseUpdate where
  toJSONPB (ChannelCloseUpdate f1 f2) =
    (HsJSONPB.object ["closing_txid" .= f1, "success" .= f2])
  toEncodingPB (ChannelCloseUpdate f1 f2) =
    (HsJSONPB.pairs ["closing_txid" .= f1, "success" .= f2])

instance HsJSONPB.FromJSONPB ChannelCloseUpdate where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelCloseUpdate"
        ( \obj ->
            (Hs.pure ChannelCloseUpdate) <*> obj .: "closing_txid"
              <*> obj .: "success"
        )
    )

instance HsJSONPB.ToJSON ChannelCloseUpdate where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelCloseUpdate where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelCloseUpdate where
  declareNamedSchema _ =
    do
      let declare_closing_txid = HsJSONPB.declareSchemaRef
      channelCloseUpdateClosingTxid <- declare_closing_txid Proxy.Proxy
      let declare_success = HsJSONPB.declareSchemaRef
      channelCloseUpdateSuccess <- declare_success Proxy.Proxy
      let _ =
            Hs.pure ChannelCloseUpdate
              <*> HsJSONPB.asProxy declare_closing_txid
              <*> HsJSONPB.asProxy declare_success
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelCloseUpdate",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "closing_txid",
                            channelCloseUpdateClosingTxid
                          ),
                          ("success", channelCloseUpdateSuccess)
                        ]
                  }
            }
        )

data CloseChannelRequest
  = CloseChannelRequest
      { closeChannelRequestChannelPoint ::
          Hs.Maybe
            LndGrpc.ChannelPoint,
        closeChannelRequestForce :: Hs.Bool,
        closeChannelRequestTargetConf :: Hs.Int32,
        closeChannelRequestSatPerByte :: Hs.Int64,
        closeChannelRequestDeliveryAddress :: Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named CloseChannelRequest where
  nameOf _ = (Hs.fromString "CloseChannelRequest")

instance HsProtobuf.HasDefault CloseChannelRequest

instance HsProtobuf.Message CloseChannelRequest where
  encodeMessage
    _
    CloseChannelRequest
      { closeChannelRequestChannelPoint =
          closeChannelRequestChannelPoint,
        closeChannelRequestForce = closeChannelRequestForce,
        closeChannelRequestTargetConf = closeChannelRequestTargetConf,
        closeChannelRequestSatPerByte = closeChannelRequestSatPerByte,
        closeChannelRequestDeliveryAddress =
          closeChannelRequestDeliveryAddress
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelPoint)
                    @(HsProtobuf.Nested LndGrpc.ChannelPoint)
                    closeChannelRequestChannelPoint
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                closeChannelRequestForce
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                closeChannelRequestTargetConf
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                closeChannelRequestSatPerByte
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                closeChannelRequestDeliveryAddress
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure CloseChannelRequest)
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelPoint))
              @(_ (Hs.Maybe LndGrpc.ChannelPoint))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "ChannelPoint"))
          )
          (HsProtobuf.Single "channel_point")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "force")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "target_conf")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "sat_per_byte")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "delivery_address")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB CloseChannelRequest where
  toJSONPB (CloseChannelRequest f1 f2 f3 f4 f5) =
    ( HsJSONPB.object
        [ "channel_point" .= f1,
          "force" .= f2,
          "target_conf" .= f3,
          "sat_per_byte" .= f4,
          "delivery_address" .= f5
        ]
    )
  toEncodingPB (CloseChannelRequest f1 f2 f3 f4 f5) =
    ( HsJSONPB.pairs
        [ "channel_point" .= f1,
          "force" .= f2,
          "target_conf" .= f3,
          "sat_per_byte" .= f4,
          "delivery_address" .= f5
        ]
    )

instance HsJSONPB.FromJSONPB CloseChannelRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "CloseChannelRequest"
        ( \obj ->
            (Hs.pure CloseChannelRequest) <*> obj .: "channel_point"
              <*> obj .: "force"
              <*> obj .: "target_conf"
              <*> obj .: "sat_per_byte"
              <*> obj .: "delivery_address"
        )
    )

instance HsJSONPB.ToJSON CloseChannelRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON CloseChannelRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema CloseChannelRequest where
  declareNamedSchema _ =
    do
      let declare_channel_point = HsJSONPB.declareSchemaRef
      closeChannelRequestChannelPoint <-
        declare_channel_point
          Proxy.Proxy
      let declare_force = HsJSONPB.declareSchemaRef
      closeChannelRequestForce <- declare_force Proxy.Proxy
      let declare_target_conf = HsJSONPB.declareSchemaRef
      closeChannelRequestTargetConf <- declare_target_conf Proxy.Proxy
      let declare_sat_per_byte = HsJSONPB.declareSchemaRef
      closeChannelRequestSatPerByte <- declare_sat_per_byte Proxy.Proxy
      let declare_delivery_address = HsJSONPB.declareSchemaRef
      closeChannelRequestDeliveryAddress <-
        declare_delivery_address
          Proxy.Proxy
      let _ =
            Hs.pure CloseChannelRequest
              <*> HsJSONPB.asProxy declare_channel_point
              <*> HsJSONPB.asProxy declare_force
              <*> HsJSONPB.asProxy declare_target_conf
              <*> HsJSONPB.asProxy declare_sat_per_byte
              <*> HsJSONPB.asProxy declare_delivery_address
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "CloseChannelRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "channel_point",
                            closeChannelRequestChannelPoint
                          ),
                          ("force", closeChannelRequestForce),
                          ( "target_conf",
                            closeChannelRequestTargetConf
                          ),
                          ( "sat_per_byte",
                            closeChannelRequestSatPerByte
                          ),
                          ( "delivery_address",
                            closeChannelRequestDeliveryAddress
                          )
                        ]
                  }
            }
        )

data CloseStatusUpdate
  = CloseStatusUpdate
      { closeStatusUpdateUpdate ::
          Hs.Maybe
            CloseStatusUpdateUpdate
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named CloseStatusUpdate where
  nameOf _ = (Hs.fromString "CloseStatusUpdate")

instance HsProtobuf.HasDefault CloseStatusUpdate

instance HsProtobuf.Message CloseStatusUpdate where
  encodeMessage
    _
    CloseStatusUpdate
      { closeStatusUpdateUpdate =
          closeStatusUpdateUpdate
      } =
      ( Hs.mconcat
          [ case closeStatusUpdateUpdate of
              Hs.Nothing -> Hs.mempty
              Hs.Just x ->
                case x of
                  CloseStatusUpdateUpdateClosePending y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 1)
                        ( Hs.coerce @(Hs.Maybe LndGrpc.PendingUpdate)
                            @(HsProtobuf.Nested LndGrpc.PendingUpdate)
                            (Hs.Just y)
                        )
                    )
                  CloseStatusUpdateUpdateChanClose y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 3)
                        ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelCloseUpdate)
                            @(HsProtobuf.Nested LndGrpc.ChannelCloseUpdate)
                            (Hs.Just y)
                        )
                    )
          ]
      )
  decodeMessage _ =
    (Hs.pure CloseStatusUpdate)
      <*> ( HsProtobuf.oneof
              Hs.Nothing
              [ ( (HsProtobuf.FieldNumber 1),
                  (Hs.pure (Hs.fmap CloseStatusUpdateUpdateClosePending))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.PendingUpdate))
                            @(_ (Hs.Maybe LndGrpc.PendingUpdate))
                            HsProtobuf.decodeMessageField
                        )
                ),
                ( (HsProtobuf.FieldNumber 3),
                  (Hs.pure (Hs.fmap CloseStatusUpdateUpdateChanClose))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelCloseUpdate))
                            @(_ (Hs.Maybe LndGrpc.ChannelCloseUpdate))
                            HsProtobuf.decodeMessageField
                        )
                )
              ]
          )
  dotProto _ = []

instance HsJSONPB.ToJSONPB CloseStatusUpdate where
  toJSONPB (CloseStatusUpdate f1_or_f3) =
    ( HsJSONPB.object
        [ ( let encodeUpdate =
                  ( case f1_or_f3 of
                      Hs.Just (CloseStatusUpdateUpdateClosePending f1) ->
                        (HsJSONPB.pair "close_pending" f1)
                      Hs.Just (CloseStatusUpdateUpdateChanClose f3) ->
                        (HsJSONPB.pair "chan_close" f3)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then
                      ("update" .= (HsJSONPB.objectOrNull [encodeUpdate] options))
                        options
                    else encodeUpdate options
          )
        ]
    )
  toEncodingPB (CloseStatusUpdate f1_or_f3) =
    ( HsJSONPB.pairs
        [ ( let encodeUpdate =
                  ( case f1_or_f3 of
                      Hs.Just (CloseStatusUpdateUpdateClosePending f1) ->
                        (HsJSONPB.pair "close_pending" f1)
                      Hs.Just (CloseStatusUpdateUpdateChanClose f3) ->
                        (HsJSONPB.pair "chan_close" f3)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then ("update" .= (HsJSONPB.pairsOrNull [encodeUpdate] options)) options
                    else encodeUpdate options
          )
        ]
    )

instance HsJSONPB.FromJSONPB CloseStatusUpdate where
  parseJSONPB =
    ( HsJSONPB.withObject
        "CloseStatusUpdate"
        ( \obj ->
            (Hs.pure CloseStatusUpdate)
              <*> ( let parseUpdate parseObj =
                          Hs.msum
                            [ Hs.Just Hs.. CloseStatusUpdateUpdateClosePending
                                <$> (HsJSONPB.parseField parseObj "close_pending"),
                              Hs.Just Hs.. CloseStatusUpdateUpdateChanClose
                                <$> (HsJSONPB.parseField parseObj "chan_close"),
                              Hs.pure Hs.Nothing
                            ]
                     in ( (obj .: "update")
                            Hs.>>= (HsJSONPB.withObject "update" parseUpdate)
                        )
                          <|> (parseUpdate obj)
                  )
        )
    )

instance HsJSONPB.ToJSON CloseStatusUpdate where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON CloseStatusUpdate where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema CloseStatusUpdate where
  declareNamedSchema _ =
    do
      let declare_update = HsJSONPB.declareSchemaRef
      closeStatusUpdateUpdate <- declare_update Proxy.Proxy
      let _ =
            Hs.pure CloseStatusUpdate
              <*> HsJSONPB.asProxy declare_update
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "CloseStatusUpdate",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("update", closeStatusUpdateUpdate)]
                  }
            }
        )

data CloseStatusUpdateUpdate
  = CloseStatusUpdateUpdateClosePending LndGrpc.PendingUpdate
  | CloseStatusUpdateUpdateChanClose LndGrpc.ChannelCloseUpdate
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named CloseStatusUpdateUpdate where
  nameOf _ = (Hs.fromString "CloseStatusUpdateUpdate")

instance HsJSONPB.ToSchema CloseStatusUpdateUpdate where
  declareNamedSchema _ =
    do
      let declare_close_pending = HsJSONPB.declareSchemaRef
      closeStatusUpdateUpdateClosePending <-
        declare_close_pending
          Proxy.Proxy
      let _ =
            Hs.pure CloseStatusUpdateUpdateClosePending
              <*> HsJSONPB.asProxy declare_close_pending
      let declare_chan_close = HsJSONPB.declareSchemaRef
      closeStatusUpdateUpdateChanClose <- declare_chan_close Proxy.Proxy
      let _ =
            Hs.pure CloseStatusUpdateUpdateChanClose
              <*> HsJSONPB.asProxy declare_chan_close
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "CloseStatusUpdateUpdate",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "close_pending",
                            closeStatusUpdateUpdateClosePending
                          ),
                          ( "chan_close",
                            closeStatusUpdateUpdateChanClose
                          )
                        ],
                    HsJSONPB._schemaMinProperties = Hs.Just 1,
                    HsJSONPB._schemaMaxProperties = Hs.Just 1
                  }
            }
        )

data PendingUpdate
  = PendingUpdate
      { pendingUpdateTxid ::
          Hs.ByteString,
        pendingUpdateOutputIndex :: Hs.Word32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PendingUpdate where
  nameOf _ = (Hs.fromString "PendingUpdate")

instance HsProtobuf.HasDefault PendingUpdate

instance HsProtobuf.Message PendingUpdate where
  encodeMessage
    _
    PendingUpdate
      { pendingUpdateTxid = pendingUpdateTxid,
        pendingUpdateOutputIndex = pendingUpdateOutputIndex
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                pendingUpdateTxid
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                pendingUpdateOutputIndex
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PendingUpdate)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "txid")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "output_index")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB PendingUpdate where
  toJSONPB (PendingUpdate f1 f2) =
    (HsJSONPB.object ["txid" .= f1, "output_index" .= f2])
  toEncodingPB (PendingUpdate f1 f2) =
    (HsJSONPB.pairs ["txid" .= f1, "output_index" .= f2])

instance HsJSONPB.FromJSONPB PendingUpdate where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PendingUpdate"
        ( \obj ->
            (Hs.pure PendingUpdate) <*> obj .: "txid"
              <*> obj .: "output_index"
        )
    )

instance HsJSONPB.ToJSON PendingUpdate where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PendingUpdate where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PendingUpdate where
  declareNamedSchema _ =
    do
      let declare_txid = HsJSONPB.declareSchemaRef
      pendingUpdateTxid <- declare_txid Proxy.Proxy
      let declare_output_index = HsJSONPB.declareSchemaRef
      pendingUpdateOutputIndex <- declare_output_index Proxy.Proxy
      let _ =
            Hs.pure PendingUpdate <*> HsJSONPB.asProxy declare_txid
              <*> HsJSONPB.asProxy declare_output_index
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PendingUpdate",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("txid", pendingUpdateTxid),
                          ( "output_index",
                            pendingUpdateOutputIndex
                          )
                        ]
                  }
            }
        )

data ReadyForPsbtFunding
  = ReadyForPsbtFunding
      { readyForPsbtFundingFundingAddress ::
          Hs.Text,
        readyForPsbtFundingFundingAmount :: Hs.Int64,
        readyForPsbtFundingPsbt :: Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ReadyForPsbtFunding where
  nameOf _ = (Hs.fromString "ReadyForPsbtFunding")

instance HsProtobuf.HasDefault ReadyForPsbtFunding

instance HsProtobuf.Message ReadyForPsbtFunding where
  encodeMessage
    _
    ReadyForPsbtFunding
      { readyForPsbtFundingFundingAddress =
          readyForPsbtFundingFundingAddress,
        readyForPsbtFundingFundingAmount =
          readyForPsbtFundingFundingAmount,
        readyForPsbtFundingPsbt = readyForPsbtFundingPsbt
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                readyForPsbtFundingFundingAddress
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                readyForPsbtFundingFundingAmount
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                readyForPsbtFundingPsbt
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ReadyForPsbtFunding)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "funding_address")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "funding_amount")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "psbt")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ReadyForPsbtFunding where
  toJSONPB (ReadyForPsbtFunding f1 f2 f3) =
    ( HsJSONPB.object
        ["funding_address" .= f1, "funding_amount" .= f2, "psbt" .= f3]
    )
  toEncodingPB (ReadyForPsbtFunding f1 f2 f3) =
    ( HsJSONPB.pairs
        ["funding_address" .= f1, "funding_amount" .= f2, "psbt" .= f3]
    )

instance HsJSONPB.FromJSONPB ReadyForPsbtFunding where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ReadyForPsbtFunding"
        ( \obj ->
            (Hs.pure ReadyForPsbtFunding) <*> obj .: "funding_address"
              <*> obj .: "funding_amount"
              <*> obj .: "psbt"
        )
    )

instance HsJSONPB.ToJSON ReadyForPsbtFunding where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ReadyForPsbtFunding where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ReadyForPsbtFunding where
  declareNamedSchema _ =
    do
      let declare_funding_address = HsJSONPB.declareSchemaRef
      readyForPsbtFundingFundingAddress <-
        declare_funding_address
          Proxy.Proxy
      let declare_funding_amount = HsJSONPB.declareSchemaRef
      readyForPsbtFundingFundingAmount <-
        declare_funding_amount
          Proxy.Proxy
      let declare_psbt = HsJSONPB.declareSchemaRef
      readyForPsbtFundingPsbt <- declare_psbt Proxy.Proxy
      let _ =
            Hs.pure ReadyForPsbtFunding
              <*> HsJSONPB.asProxy declare_funding_address
              <*> HsJSONPB.asProxy declare_funding_amount
              <*> HsJSONPB.asProxy declare_psbt
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ReadyForPsbtFunding",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "funding_address",
                            readyForPsbtFundingFundingAddress
                          ),
                          ( "funding_amount",
                            readyForPsbtFundingFundingAmount
                          ),
                          ("psbt", readyForPsbtFundingPsbt)
                        ]
                  }
            }
        )

data OpenChannelRequest
  = OpenChannelRequest
      { openChannelRequestNodePubkey ::
          Hs.ByteString,
        openChannelRequestNodePubkeyString :: Hs.Text,
        openChannelRequestLocalFundingAmount :: Hs.Int64,
        openChannelRequestPushSat :: Hs.Int64,
        openChannelRequestTargetConf :: Hs.Int32,
        openChannelRequestSatPerByte :: Hs.Int64,
        openChannelRequestPrivate :: Hs.Bool,
        openChannelRequestMinHtlcMsat :: Hs.Int64,
        openChannelRequestRemoteCsvDelay :: Hs.Word32,
        openChannelRequestMinConfs :: Hs.Int32,
        openChannelRequestSpendUnconfirmed :: Hs.Bool,
        openChannelRequestCloseAddress :: Hs.Text,
        openChannelRequestFundingShim ::
          Hs.Maybe
            LndGrpc.FundingShim
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named OpenChannelRequest where
  nameOf _ = (Hs.fromString "OpenChannelRequest")

instance HsProtobuf.HasDefault OpenChannelRequest

instance HsProtobuf.Message OpenChannelRequest where
  encodeMessage
    _
    OpenChannelRequest
      { openChannelRequestNodePubkey =
          openChannelRequestNodePubkey,
        openChannelRequestNodePubkeyString =
          openChannelRequestNodePubkeyString,
        openChannelRequestLocalFundingAmount =
          openChannelRequestLocalFundingAmount,
        openChannelRequestPushSat = openChannelRequestPushSat,
        openChannelRequestTargetConf = openChannelRequestTargetConf,
        openChannelRequestSatPerByte = openChannelRequestSatPerByte,
        openChannelRequestPrivate = openChannelRequestPrivate,
        openChannelRequestMinHtlcMsat = openChannelRequestMinHtlcMsat,
        openChannelRequestRemoteCsvDelay =
          openChannelRequestRemoteCsvDelay,
        openChannelRequestMinConfs = openChannelRequestMinConfs,
        openChannelRequestSpendUnconfirmed =
          openChannelRequestSpendUnconfirmed,
        openChannelRequestCloseAddress = openChannelRequestCloseAddress,
        openChannelRequestFundingShim = openChannelRequestFundingShim
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                openChannelRequestNodePubkey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                openChannelRequestNodePubkeyString
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                openChannelRequestLocalFundingAmount
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                openChannelRequestPushSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                openChannelRequestTargetConf
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                openChannelRequestSatPerByte
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                openChannelRequestPrivate
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                openChannelRequestMinHtlcMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                openChannelRequestRemoteCsvDelay
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                openChannelRequestMinConfs
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 12)
                openChannelRequestSpendUnconfirmed
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 13)
                openChannelRequestCloseAddress
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 14)
                ( Hs.coerce @(Hs.Maybe LndGrpc.FundingShim)
                    @(HsProtobuf.Nested LndGrpc.FundingShim)
                    openChannelRequestFundingShim
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure OpenChannelRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 10)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 11)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 12)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 13)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.FundingShim))
              @(_ (Hs.Maybe LndGrpc.FundingShim))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 14)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "node_pubkey")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "node_pubkey_string")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "local_funding_amount")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "push_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "target_conf")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "sat_per_byte")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "private")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "min_htlc_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "remote_csv_delay")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "min_confs")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 12)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "spend_unconfirmed")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 13)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "close_address")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 14)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "FundingShim"))
          )
          (HsProtobuf.Single "funding_shim")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB OpenChannelRequest where
  toJSONPB (OpenChannelRequest f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14) =
    ( HsJSONPB.object
        [ "node_pubkey" .= f2,
          "node_pubkey_string" .= f3,
          "local_funding_amount" .= f4,
          "push_sat" .= f5,
          "target_conf" .= f6,
          "sat_per_byte" .= f7,
          "private" .= f8,
          "min_htlc_msat" .= f9,
          "remote_csv_delay" .= f10,
          "min_confs" .= f11,
          "spend_unconfirmed" .= f12,
          "close_address" .= f13,
          "funding_shim" .= f14
        ]
    )
  toEncodingPB (OpenChannelRequest f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14) =
    ( HsJSONPB.pairs
        [ "node_pubkey" .= f2,
          "node_pubkey_string" .= f3,
          "local_funding_amount" .= f4,
          "push_sat" .= f5,
          "target_conf" .= f6,
          "sat_per_byte" .= f7,
          "private" .= f8,
          "min_htlc_msat" .= f9,
          "remote_csv_delay" .= f10,
          "min_confs" .= f11,
          "spend_unconfirmed" .= f12,
          "close_address" .= f13,
          "funding_shim" .= f14
        ]
    )

instance HsJSONPB.FromJSONPB OpenChannelRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "OpenChannelRequest"
        ( \obj ->
            (Hs.pure OpenChannelRequest) <*> obj .: "node_pubkey"
              <*> obj .: "node_pubkey_string"
              <*> obj .: "local_funding_amount"
              <*> obj .: "push_sat"
              <*> obj .: "target_conf"
              <*> obj .: "sat_per_byte"
              <*> obj .: "private"
              <*> obj .: "min_htlc_msat"
              <*> obj .: "remote_csv_delay"
              <*> obj .: "min_confs"
              <*> obj .: "spend_unconfirmed"
              <*> obj .: "close_address"
              <*> obj .: "funding_shim"
        )
    )

instance HsJSONPB.ToJSON OpenChannelRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON OpenChannelRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema OpenChannelRequest where
  declareNamedSchema _ =
    do
      let declare_node_pubkey = HsJSONPB.declareSchemaRef
      openChannelRequestNodePubkey <- declare_node_pubkey Proxy.Proxy
      let declare_node_pubkey_string = HsJSONPB.declareSchemaRef
      openChannelRequestNodePubkeyString <-
        declare_node_pubkey_string
          Proxy.Proxy
      let declare_local_funding_amount = HsJSONPB.declareSchemaRef
      openChannelRequestLocalFundingAmount <-
        declare_local_funding_amount
          Proxy.Proxy
      let declare_push_sat = HsJSONPB.declareSchemaRef
      openChannelRequestPushSat <- declare_push_sat Proxy.Proxy
      let declare_target_conf = HsJSONPB.declareSchemaRef
      openChannelRequestTargetConf <- declare_target_conf Proxy.Proxy
      let declare_sat_per_byte = HsJSONPB.declareSchemaRef
      openChannelRequestSatPerByte <- declare_sat_per_byte Proxy.Proxy
      let declare_private = HsJSONPB.declareSchemaRef
      openChannelRequestPrivate <- declare_private Proxy.Proxy
      let declare_min_htlc_msat = HsJSONPB.declareSchemaRef
      openChannelRequestMinHtlcMsat <- declare_min_htlc_msat Proxy.Proxy
      let declare_remote_csv_delay = HsJSONPB.declareSchemaRef
      openChannelRequestRemoteCsvDelay <-
        declare_remote_csv_delay
          Proxy.Proxy
      let declare_min_confs = HsJSONPB.declareSchemaRef
      openChannelRequestMinConfs <- declare_min_confs Proxy.Proxy
      let declare_spend_unconfirmed = HsJSONPB.declareSchemaRef
      openChannelRequestSpendUnconfirmed <-
        declare_spend_unconfirmed
          Proxy.Proxy
      let declare_close_address = HsJSONPB.declareSchemaRef
      openChannelRequestCloseAddress <- declare_close_address Proxy.Proxy
      let declare_funding_shim = HsJSONPB.declareSchemaRef
      openChannelRequestFundingShim <- declare_funding_shim Proxy.Proxy
      let _ =
            Hs.pure OpenChannelRequest
              <*> HsJSONPB.asProxy declare_node_pubkey
              <*> HsJSONPB.asProxy declare_node_pubkey_string
              <*> HsJSONPB.asProxy declare_local_funding_amount
              <*> HsJSONPB.asProxy declare_push_sat
              <*> HsJSONPB.asProxy declare_target_conf
              <*> HsJSONPB.asProxy declare_sat_per_byte
              <*> HsJSONPB.asProxy declare_private
              <*> HsJSONPB.asProxy declare_min_htlc_msat
              <*> HsJSONPB.asProxy declare_remote_csv_delay
              <*> HsJSONPB.asProxy declare_min_confs
              <*> HsJSONPB.asProxy declare_spend_unconfirmed
              <*> HsJSONPB.asProxy declare_close_address
              <*> HsJSONPB.asProxy declare_funding_shim
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "OpenChannelRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "node_pubkey",
                            openChannelRequestNodePubkey
                          ),
                          ( "node_pubkey_string",
                            openChannelRequestNodePubkeyString
                          ),
                          ( "local_funding_amount",
                            openChannelRequestLocalFundingAmount
                          ),
                          ("push_sat", openChannelRequestPushSat),
                          ( "target_conf",
                            openChannelRequestTargetConf
                          ),
                          ( "sat_per_byte",
                            openChannelRequestSatPerByte
                          ),
                          ("private", openChannelRequestPrivate),
                          ( "min_htlc_msat",
                            openChannelRequestMinHtlcMsat
                          ),
                          ( "remote_csv_delay",
                            openChannelRequestRemoteCsvDelay
                          ),
                          ("min_confs", openChannelRequestMinConfs),
                          ( "spend_unconfirmed",
                            openChannelRequestSpendUnconfirmed
                          ),
                          ( "close_address",
                            openChannelRequestCloseAddress
                          ),
                          ( "funding_shim",
                            openChannelRequestFundingShim
                          )
                        ]
                  }
            }
        )

data OpenStatusUpdate
  = OpenStatusUpdate
      { openStatusUpdateUpdate ::
          Hs.Maybe
            OpenStatusUpdateUpdate,
        openStatusUpdatePendingChanId :: Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named OpenStatusUpdate where
  nameOf _ = (Hs.fromString "OpenStatusUpdate")

instance HsProtobuf.HasDefault OpenStatusUpdate

instance HsProtobuf.Message OpenStatusUpdate where
  encodeMessage
    _
    OpenStatusUpdate
      { openStatusUpdateUpdate = openStatusUpdateUpdate,
        openStatusUpdatePendingChanId = openStatusUpdatePendingChanId
      } =
      ( Hs.mconcat
          [ case openStatusUpdateUpdate of
              Hs.Nothing -> Hs.mempty
              Hs.Just x ->
                case x of
                  OpenStatusUpdateUpdateChanPending y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 1)
                        ( Hs.coerce @(Hs.Maybe LndGrpc.PendingUpdate)
                            @(HsProtobuf.Nested LndGrpc.PendingUpdate)
                            (Hs.Just y)
                        )
                    )
                  OpenStatusUpdateUpdateChanOpen y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 3)
                        ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelOpenUpdate)
                            @(HsProtobuf.Nested LndGrpc.ChannelOpenUpdate)
                            (Hs.Just y)
                        )
                    )
                  OpenStatusUpdateUpdatePsbtFund y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 5)
                        ( Hs.coerce @(Hs.Maybe LndGrpc.ReadyForPsbtFunding)
                            @(HsProtobuf.Nested LndGrpc.ReadyForPsbtFunding)
                            (Hs.Just y)
                        )
                    ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                openStatusUpdatePendingChanId
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure OpenStatusUpdate)
      <*> ( HsProtobuf.oneof
              Hs.Nothing
              [ ( (HsProtobuf.FieldNumber 1),
                  (Hs.pure (Hs.fmap OpenStatusUpdateUpdateChanPending))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.PendingUpdate))
                            @(_ (Hs.Maybe LndGrpc.PendingUpdate))
                            HsProtobuf.decodeMessageField
                        )
                ),
                ( (HsProtobuf.FieldNumber 3),
                  (Hs.pure (Hs.fmap OpenStatusUpdateUpdateChanOpen))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelOpenUpdate))
                            @(_ (Hs.Maybe LndGrpc.ChannelOpenUpdate))
                            HsProtobuf.decodeMessageField
                        )
                ),
                ( (HsProtobuf.FieldNumber 5),
                  (Hs.pure (Hs.fmap OpenStatusUpdateUpdatePsbtFund))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ReadyForPsbtFunding))
                            @(_ (Hs.Maybe LndGrpc.ReadyForPsbtFunding))
                            HsProtobuf.decodeMessageField
                        )
                )
              ]
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "pending_chan_id")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB OpenStatusUpdate where
  toJSONPB (OpenStatusUpdate f1_or_f3_or_f5 f4) =
    ( HsJSONPB.object
        [ ( let encodeUpdate =
                  ( case f1_or_f3_or_f5 of
                      Hs.Just (OpenStatusUpdateUpdateChanPending f1) ->
                        (HsJSONPB.pair "chan_pending" f1)
                      Hs.Just (OpenStatusUpdateUpdateChanOpen f3) ->
                        (HsJSONPB.pair "chan_open" f3)
                      Hs.Just (OpenStatusUpdateUpdatePsbtFund f5) ->
                        (HsJSONPB.pair "psbt_fund" f5)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then
                      ("update" .= (HsJSONPB.objectOrNull [encodeUpdate] options))
                        options
                    else encodeUpdate options
          ),
          "pending_chan_id" .= f4
        ]
    )
  toEncodingPB (OpenStatusUpdate f1_or_f3_or_f5 f4) =
    ( HsJSONPB.pairs
        [ ( let encodeUpdate =
                  ( case f1_or_f3_or_f5 of
                      Hs.Just (OpenStatusUpdateUpdateChanPending f1) ->
                        (HsJSONPB.pair "chan_pending" f1)
                      Hs.Just (OpenStatusUpdateUpdateChanOpen f3) ->
                        (HsJSONPB.pair "chan_open" f3)
                      Hs.Just (OpenStatusUpdateUpdatePsbtFund f5) ->
                        (HsJSONPB.pair "psbt_fund" f5)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then ("update" .= (HsJSONPB.pairsOrNull [encodeUpdate] options)) options
                    else encodeUpdate options
          ),
          "pending_chan_id" .= f4
        ]
    )

instance HsJSONPB.FromJSONPB OpenStatusUpdate where
  parseJSONPB =
    ( HsJSONPB.withObject
        "OpenStatusUpdate"
        ( \obj ->
            (Hs.pure OpenStatusUpdate)
              <*> ( let parseUpdate parseObj =
                          Hs.msum
                            [ Hs.Just Hs.. OpenStatusUpdateUpdateChanPending
                                <$> (HsJSONPB.parseField parseObj "chan_pending"),
                              Hs.Just Hs.. OpenStatusUpdateUpdateChanOpen
                                <$> (HsJSONPB.parseField parseObj "chan_open"),
                              Hs.Just Hs.. OpenStatusUpdateUpdatePsbtFund
                                <$> (HsJSONPB.parseField parseObj "psbt_fund"),
                              Hs.pure Hs.Nothing
                            ]
                     in ( (obj .: "update")
                            Hs.>>= (HsJSONPB.withObject "update" parseUpdate)
                        )
                          <|> (parseUpdate obj)
                  )
              <*> obj .: "pending_chan_id"
        )
    )

instance HsJSONPB.ToJSON OpenStatusUpdate where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON OpenStatusUpdate where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema OpenStatusUpdate where
  declareNamedSchema _ =
    do
      let declare_update = HsJSONPB.declareSchemaRef
      openStatusUpdateUpdate <- declare_update Proxy.Proxy
      let declare_pending_chan_id = HsJSONPB.declareSchemaRef
      openStatusUpdatePendingChanId <-
        declare_pending_chan_id
          Proxy.Proxy
      let _ =
            Hs.pure OpenStatusUpdate
              <*> HsJSONPB.asProxy declare_update
              <*> HsJSONPB.asProxy declare_pending_chan_id
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "OpenStatusUpdate",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("update", openStatusUpdateUpdate),
                          ( "pending_chan_id",
                            openStatusUpdatePendingChanId
                          )
                        ]
                  }
            }
        )

data OpenStatusUpdateUpdate
  = OpenStatusUpdateUpdateChanPending LndGrpc.PendingUpdate
  | OpenStatusUpdateUpdateChanOpen LndGrpc.ChannelOpenUpdate
  | OpenStatusUpdateUpdatePsbtFund LndGrpc.ReadyForPsbtFunding
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named OpenStatusUpdateUpdate where
  nameOf _ = (Hs.fromString "OpenStatusUpdateUpdate")

instance HsJSONPB.ToSchema OpenStatusUpdateUpdate where
  declareNamedSchema _ =
    do
      let declare_chan_pending = HsJSONPB.declareSchemaRef
      openStatusUpdateUpdateChanPending <-
        declare_chan_pending
          Proxy.Proxy
      let _ =
            Hs.pure OpenStatusUpdateUpdateChanPending
              <*> HsJSONPB.asProxy declare_chan_pending
      let declare_chan_open = HsJSONPB.declareSchemaRef
      openStatusUpdateUpdateChanOpen <- declare_chan_open Proxy.Proxy
      let _ =
            Hs.pure OpenStatusUpdateUpdateChanOpen
              <*> HsJSONPB.asProxy declare_chan_open
      let declare_psbt_fund = HsJSONPB.declareSchemaRef
      openStatusUpdateUpdatePsbtFund <- declare_psbt_fund Proxy.Proxy
      let _ =
            Hs.pure OpenStatusUpdateUpdatePsbtFund
              <*> HsJSONPB.asProxy declare_psbt_fund
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "OpenStatusUpdateUpdate",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "chan_pending",
                            openStatusUpdateUpdateChanPending
                          ),
                          ( "chan_open",
                            openStatusUpdateUpdateChanOpen
                          ),
                          ( "psbt_fund",
                            openStatusUpdateUpdatePsbtFund
                          )
                        ],
                    HsJSONPB._schemaMinProperties = Hs.Just 1,
                    HsJSONPB._schemaMaxProperties = Hs.Just 1
                  }
            }
        )

data KeyLocator
  = KeyLocator
      { keyLocatorKeyFamily :: Hs.Int32,
        keyLocatorKeyIndex :: Hs.Int32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named KeyLocator where
  nameOf _ = (Hs.fromString "KeyLocator")

instance HsProtobuf.HasDefault KeyLocator

instance HsProtobuf.Message KeyLocator where
  encodeMessage
    _
    KeyLocator
      { keyLocatorKeyFamily = keyLocatorKeyFamily,
        keyLocatorKeyIndex = keyLocatorKeyIndex
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                keyLocatorKeyFamily
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                keyLocatorKeyIndex
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure KeyLocator)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "key_family")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "key_index")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB KeyLocator where
  toJSONPB (KeyLocator f1 f2) =
    (HsJSONPB.object ["key_family" .= f1, "key_index" .= f2])
  toEncodingPB (KeyLocator f1 f2) =
    (HsJSONPB.pairs ["key_family" .= f1, "key_index" .= f2])

instance HsJSONPB.FromJSONPB KeyLocator where
  parseJSONPB =
    ( HsJSONPB.withObject
        "KeyLocator"
        ( \obj ->
            (Hs.pure KeyLocator) <*> obj .: "key_family"
              <*> obj .: "key_index"
        )
    )

instance HsJSONPB.ToJSON KeyLocator where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON KeyLocator where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema KeyLocator where
  declareNamedSchema _ =
    do
      let declare_key_family = HsJSONPB.declareSchemaRef
      keyLocatorKeyFamily <- declare_key_family Proxy.Proxy
      let declare_key_index = HsJSONPB.declareSchemaRef
      keyLocatorKeyIndex <- declare_key_index Proxy.Proxy
      let _ =
            Hs.pure KeyLocator <*> HsJSONPB.asProxy declare_key_family
              <*> HsJSONPB.asProxy declare_key_index
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "KeyLocator",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("key_family", keyLocatorKeyFamily),
                          ("key_index", keyLocatorKeyIndex)
                        ]
                  }
            }
        )

data KeyDescriptor
  = KeyDescriptor
      { keyDescriptorRawKeyBytes ::
          Hs.ByteString,
        keyDescriptorKeyLoc :: Hs.Maybe LndGrpc.KeyLocator
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named KeyDescriptor where
  nameOf _ = (Hs.fromString "KeyDescriptor")

instance HsProtobuf.HasDefault KeyDescriptor

instance HsProtobuf.Message KeyDescriptor where
  encodeMessage
    _
    KeyDescriptor
      { keyDescriptorRawKeyBytes = keyDescriptorRawKeyBytes,
        keyDescriptorKeyLoc = keyDescriptorKeyLoc
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                keyDescriptorRawKeyBytes
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce @(Hs.Maybe LndGrpc.KeyLocator)
                    @(HsProtobuf.Nested LndGrpc.KeyLocator)
                    keyDescriptorKeyLoc
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure KeyDescriptor)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.KeyLocator))
              @(_ (Hs.Maybe LndGrpc.KeyLocator))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "raw_key_bytes")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "KeyLocator"))
          )
          (HsProtobuf.Single "key_loc")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB KeyDescriptor where
  toJSONPB (KeyDescriptor f1 f2) =
    (HsJSONPB.object ["raw_key_bytes" .= f1, "key_loc" .= f2])
  toEncodingPB (KeyDescriptor f1 f2) =
    (HsJSONPB.pairs ["raw_key_bytes" .= f1, "key_loc" .= f2])

instance HsJSONPB.FromJSONPB KeyDescriptor where
  parseJSONPB =
    ( HsJSONPB.withObject
        "KeyDescriptor"
        ( \obj ->
            (Hs.pure KeyDescriptor) <*> obj .: "raw_key_bytes"
              <*> obj .: "key_loc"
        )
    )

instance HsJSONPB.ToJSON KeyDescriptor where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON KeyDescriptor where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema KeyDescriptor where
  declareNamedSchema _ =
    do
      let declare_raw_key_bytes = HsJSONPB.declareSchemaRef
      keyDescriptorRawKeyBytes <- declare_raw_key_bytes Proxy.Proxy
      let declare_key_loc = HsJSONPB.declareSchemaRef
      keyDescriptorKeyLoc <- declare_key_loc Proxy.Proxy
      let _ =
            Hs.pure KeyDescriptor
              <*> HsJSONPB.asProxy declare_raw_key_bytes
              <*> HsJSONPB.asProxy declare_key_loc
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "KeyDescriptor",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("raw_key_bytes", keyDescriptorRawKeyBytes),
                          ("key_loc", keyDescriptorKeyLoc)
                        ]
                  }
            }
        )

data ChanPointShim
  = ChanPointShim
      { chanPointShimAmt :: Hs.Int64,
        chanPointShimChanPoint :: Hs.Maybe LndGrpc.ChannelPoint,
        chanPointShimLocalKey :: Hs.Maybe LndGrpc.KeyDescriptor,
        chanPointShimRemoteKey :: Hs.ByteString,
        chanPointShimPendingChanId :: Hs.ByteString,
        chanPointShimThawHeight :: Hs.Word32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChanPointShim where
  nameOf _ = (Hs.fromString "ChanPointShim")

instance HsProtobuf.HasDefault ChanPointShim

instance HsProtobuf.Message ChanPointShim where
  encodeMessage
    _
    ChanPointShim
      { chanPointShimAmt = chanPointShimAmt,
        chanPointShimChanPoint = chanPointShimChanPoint,
        chanPointShimLocalKey = chanPointShimLocalKey,
        chanPointShimRemoteKey = chanPointShimRemoteKey,
        chanPointShimPendingChanId = chanPointShimPendingChanId,
        chanPointShimThawHeight = chanPointShimThawHeight
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                chanPointShimAmt
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelPoint)
                    @(HsProtobuf.Nested LndGrpc.ChannelPoint)
                    chanPointShimChanPoint
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                ( Hs.coerce @(Hs.Maybe LndGrpc.KeyDescriptor)
                    @(HsProtobuf.Nested LndGrpc.KeyDescriptor)
                    chanPointShimLocalKey
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                chanPointShimRemoteKey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                chanPointShimPendingChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                chanPointShimThawHeight
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChanPointShim)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelPoint))
              @(_ (Hs.Maybe LndGrpc.ChannelPoint))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.KeyDescriptor))
              @(_ (Hs.Maybe LndGrpc.KeyDescriptor))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amt")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "ChannelPoint"))
          )
          (HsProtobuf.Single "chan_point")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "KeyDescriptor"))
          )
          (HsProtobuf.Single "local_key")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "remote_key")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "pending_chan_id")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "thaw_height")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChanPointShim where
  toJSONPB (ChanPointShim f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.object
        [ "amt" .= f1,
          "chan_point" .= f2,
          "local_key" .= f3,
          "remote_key" .= f4,
          "pending_chan_id" .= f5,
          "thaw_height" .= f6
        ]
    )
  toEncodingPB (ChanPointShim f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.pairs
        [ "amt" .= f1,
          "chan_point" .= f2,
          "local_key" .= f3,
          "remote_key" .= f4,
          "pending_chan_id" .= f5,
          "thaw_height" .= f6
        ]
    )

instance HsJSONPB.FromJSONPB ChanPointShim where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChanPointShim"
        ( \obj ->
            (Hs.pure ChanPointShim) <*> obj .: "amt" <*> obj .: "chan_point"
              <*> obj .: "local_key"
              <*> obj .: "remote_key"
              <*> obj .: "pending_chan_id"
              <*> obj .: "thaw_height"
        )
    )

instance HsJSONPB.ToJSON ChanPointShim where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChanPointShim where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChanPointShim where
  declareNamedSchema _ =
    do
      let declare_amt = HsJSONPB.declareSchemaRef
      chanPointShimAmt <- declare_amt Proxy.Proxy
      let declare_chan_point = HsJSONPB.declareSchemaRef
      chanPointShimChanPoint <- declare_chan_point Proxy.Proxy
      let declare_local_key = HsJSONPB.declareSchemaRef
      chanPointShimLocalKey <- declare_local_key Proxy.Proxy
      let declare_remote_key = HsJSONPB.declareSchemaRef
      chanPointShimRemoteKey <- declare_remote_key Proxy.Proxy
      let declare_pending_chan_id = HsJSONPB.declareSchemaRef
      chanPointShimPendingChanId <- declare_pending_chan_id Proxy.Proxy
      let declare_thaw_height = HsJSONPB.declareSchemaRef
      chanPointShimThawHeight <- declare_thaw_height Proxy.Proxy
      let _ =
            Hs.pure ChanPointShim <*> HsJSONPB.asProxy declare_amt
              <*> HsJSONPB.asProxy declare_chan_point
              <*> HsJSONPB.asProxy declare_local_key
              <*> HsJSONPB.asProxy declare_remote_key
              <*> HsJSONPB.asProxy declare_pending_chan_id
              <*> HsJSONPB.asProxy declare_thaw_height
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChanPointShim",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("amt", chanPointShimAmt),
                          ("chan_point", chanPointShimChanPoint),
                          ("local_key", chanPointShimLocalKey),
                          ("remote_key", chanPointShimRemoteKey),
                          ( "pending_chan_id",
                            chanPointShimPendingChanId
                          ),
                          ("thaw_height", chanPointShimThawHeight)
                        ]
                  }
            }
        )

data PsbtShim
  = PsbtShim
      { psbtShimPendingChanId :: Hs.ByteString,
        psbtShimBasePsbt :: Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PsbtShim where
  nameOf _ = (Hs.fromString "PsbtShim")

instance HsProtobuf.HasDefault PsbtShim

instance HsProtobuf.Message PsbtShim where
  encodeMessage
    _
    PsbtShim
      { psbtShimPendingChanId = psbtShimPendingChanId,
        psbtShimBasePsbt = psbtShimBasePsbt
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                psbtShimPendingChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                psbtShimBasePsbt
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PsbtShim)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "pending_chan_id")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "base_psbt")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB PsbtShim where
  toJSONPB (PsbtShim f1 f2) =
    (HsJSONPB.object ["pending_chan_id" .= f1, "base_psbt" .= f2])
  toEncodingPB (PsbtShim f1 f2) =
    (HsJSONPB.pairs ["pending_chan_id" .= f1, "base_psbt" .= f2])

instance HsJSONPB.FromJSONPB PsbtShim where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PsbtShim"
        ( \obj ->
            (Hs.pure PsbtShim) <*> obj .: "pending_chan_id"
              <*> obj .: "base_psbt"
        )
    )

instance HsJSONPB.ToJSON PsbtShim where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PsbtShim where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PsbtShim where
  declareNamedSchema _ =
    do
      let declare_pending_chan_id = HsJSONPB.declareSchemaRef
      psbtShimPendingChanId <- declare_pending_chan_id Proxy.Proxy
      let declare_base_psbt = HsJSONPB.declareSchemaRef
      psbtShimBasePsbt <- declare_base_psbt Proxy.Proxy
      let _ =
            Hs.pure PsbtShim
              <*> HsJSONPB.asProxy declare_pending_chan_id
              <*> HsJSONPB.asProxy declare_base_psbt
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PsbtShim",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("pending_chan_id", psbtShimPendingChanId),
                          ("base_psbt", psbtShimBasePsbt)
                        ]
                  }
            }
        )

data FundingShim
  = FundingShim
      { fundingShimShim ::
          Hs.Maybe
            FundingShimShim
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FundingShim where
  nameOf _ = (Hs.fromString "FundingShim")

instance HsProtobuf.HasDefault FundingShim

instance HsProtobuf.Message FundingShim where
  encodeMessage _ FundingShim {fundingShimShim = fundingShimShim} =
    ( Hs.mconcat
        [ case fundingShimShim of
            Hs.Nothing -> Hs.mempty
            Hs.Just x ->
              case x of
                FundingShimShimChanPointShim y ->
                  ( HsProtobuf.encodeMessageField
                      (HsProtobuf.FieldNumber 1)
                      ( Hs.coerce @(Hs.Maybe LndGrpc.ChanPointShim)
                          @(HsProtobuf.Nested LndGrpc.ChanPointShim)
                          (Hs.Just y)
                      )
                  )
                FundingShimShimPsbtShim y ->
                  ( HsProtobuf.encodeMessageField
                      (HsProtobuf.FieldNumber 2)
                      ( Hs.coerce @(Hs.Maybe LndGrpc.PsbtShim)
                          @(HsProtobuf.Nested LndGrpc.PsbtShim)
                          (Hs.Just y)
                      )
                  )
        ]
    )
  decodeMessage _ =
    (Hs.pure FundingShim)
      <*> ( HsProtobuf.oneof
              Hs.Nothing
              [ ( (HsProtobuf.FieldNumber 1),
                  (Hs.pure (Hs.fmap FundingShimShimChanPointShim))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChanPointShim))
                            @(_ (Hs.Maybe LndGrpc.ChanPointShim))
                            HsProtobuf.decodeMessageField
                        )
                ),
                ( (HsProtobuf.FieldNumber 2),
                  (Hs.pure (Hs.fmap FundingShimShimPsbtShim))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.PsbtShim))
                            @(_ (Hs.Maybe LndGrpc.PsbtShim))
                            HsProtobuf.decodeMessageField
                        )
                )
              ]
          )
  dotProto _ = []

instance HsJSONPB.ToJSONPB FundingShim where
  toJSONPB (FundingShim f1_or_f2) =
    ( HsJSONPB.object
        [ ( let encodeShim =
                  ( case f1_or_f2 of
                      Hs.Just (FundingShimShimChanPointShim f1) ->
                        (HsJSONPB.pair "chan_point_shim" f1)
                      Hs.Just (FundingShimShimPsbtShim f2) ->
                        (HsJSONPB.pair "psbt_shim" f2)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then ("shim" .= (HsJSONPB.objectOrNull [encodeShim] options)) options
                    else encodeShim options
          )
        ]
    )
  toEncodingPB (FundingShim f1_or_f2) =
    ( HsJSONPB.pairs
        [ ( let encodeShim =
                  ( case f1_or_f2 of
                      Hs.Just (FundingShimShimChanPointShim f1) ->
                        (HsJSONPB.pair "chan_point_shim" f1)
                      Hs.Just (FundingShimShimPsbtShim f2) ->
                        (HsJSONPB.pair "psbt_shim" f2)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then ("shim" .= (HsJSONPB.pairsOrNull [encodeShim] options)) options
                    else encodeShim options
          )
        ]
    )

instance HsJSONPB.FromJSONPB FundingShim where
  parseJSONPB =
    ( HsJSONPB.withObject
        "FundingShim"
        ( \obj ->
            (Hs.pure FundingShim)
              <*> ( let parseShim parseObj =
                          Hs.msum
                            [ Hs.Just Hs.. FundingShimShimChanPointShim
                                <$> (HsJSONPB.parseField parseObj "chan_point_shim"),
                              Hs.Just Hs.. FundingShimShimPsbtShim
                                <$> (HsJSONPB.parseField parseObj "psbt_shim"),
                              Hs.pure Hs.Nothing
                            ]
                     in ((obj .: "shim") Hs.>>= (HsJSONPB.withObject "shim" parseShim))
                          <|> (parseShim obj)
                  )
        )
    )

instance HsJSONPB.ToJSON FundingShim where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON FundingShim where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema FundingShim where
  declareNamedSchema _ =
    do
      let declare_shim = HsJSONPB.declareSchemaRef
      fundingShimShim <- declare_shim Proxy.Proxy
      let _ = Hs.pure FundingShim <*> HsJSONPB.asProxy declare_shim
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "FundingShim",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("shim", fundingShimShim)]
                  }
            }
        )

data FundingShimShim
  = FundingShimShimChanPointShim LndGrpc.ChanPointShim
  | FundingShimShimPsbtShim LndGrpc.PsbtShim
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FundingShimShim where
  nameOf _ = (Hs.fromString "FundingShimShim")

instance HsJSONPB.ToSchema FundingShimShim where
  declareNamedSchema _ =
    do
      let declare_chan_point_shim = HsJSONPB.declareSchemaRef
      fundingShimShimChanPointShim <- declare_chan_point_shim Proxy.Proxy
      let _ =
            Hs.pure FundingShimShimChanPointShim
              <*> HsJSONPB.asProxy declare_chan_point_shim
      let declare_psbt_shim = HsJSONPB.declareSchemaRef
      fundingShimShimPsbtShim <- declare_psbt_shim Proxy.Proxy
      let _ =
            Hs.pure FundingShimShimPsbtShim
              <*> HsJSONPB.asProxy declare_psbt_shim
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "FundingShimShim",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "chan_point_shim",
                            fundingShimShimChanPointShim
                          ),
                          ("psbt_shim", fundingShimShimPsbtShim)
                        ],
                    HsJSONPB._schemaMinProperties = Hs.Just 1,
                    HsJSONPB._schemaMaxProperties = Hs.Just 1
                  }
            }
        )

data FundingShimCancel
  = FundingShimCancel
      { fundingShimCancelPendingChanId ::
          Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FundingShimCancel where
  nameOf _ = (Hs.fromString "FundingShimCancel")

instance HsProtobuf.HasDefault FundingShimCancel

instance HsProtobuf.Message FundingShimCancel where
  encodeMessage
    _
    FundingShimCancel
      { fundingShimCancelPendingChanId =
          fundingShimCancelPendingChanId
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                fundingShimCancelPendingChanId
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure FundingShimCancel)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "pending_chan_id")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB FundingShimCancel where
  toJSONPB (FundingShimCancel f1) =
    (HsJSONPB.object ["pending_chan_id" .= f1])
  toEncodingPB (FundingShimCancel f1) =
    (HsJSONPB.pairs ["pending_chan_id" .= f1])

instance HsJSONPB.FromJSONPB FundingShimCancel where
  parseJSONPB =
    ( HsJSONPB.withObject
        "FundingShimCancel"
        ( \obj ->
            (Hs.pure FundingShimCancel) <*> obj .: "pending_chan_id"
        )
    )

instance HsJSONPB.ToJSON FundingShimCancel where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON FundingShimCancel where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema FundingShimCancel where
  declareNamedSchema _ =
    do
      let declare_pending_chan_id = HsJSONPB.declareSchemaRef
      fundingShimCancelPendingChanId <-
        declare_pending_chan_id
          Proxy.Proxy
      let _ =
            Hs.pure FundingShimCancel
              <*> HsJSONPB.asProxy declare_pending_chan_id
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "FundingShimCancel",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "pending_chan_id",
                            fundingShimCancelPendingChanId
                          )
                        ]
                  }
            }
        )

data FundingPsbtVerify
  = FundingPsbtVerify
      { fundingPsbtVerifyFundedPsbt ::
          Hs.ByteString,
        fundingPsbtVerifyPendingChanId :: Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FundingPsbtVerify where
  nameOf _ = (Hs.fromString "FundingPsbtVerify")

instance HsProtobuf.HasDefault FundingPsbtVerify

instance HsProtobuf.Message FundingPsbtVerify where
  encodeMessage
    _
    FundingPsbtVerify
      { fundingPsbtVerifyFundedPsbt =
          fundingPsbtVerifyFundedPsbt,
        fundingPsbtVerifyPendingChanId = fundingPsbtVerifyPendingChanId
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                fundingPsbtVerifyFundedPsbt
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                fundingPsbtVerifyPendingChanId
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure FundingPsbtVerify)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "funded_psbt")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "pending_chan_id")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB FundingPsbtVerify where
  toJSONPB (FundingPsbtVerify f1 f2) =
    (HsJSONPB.object ["funded_psbt" .= f1, "pending_chan_id" .= f2])
  toEncodingPB (FundingPsbtVerify f1 f2) =
    (HsJSONPB.pairs ["funded_psbt" .= f1, "pending_chan_id" .= f2])

instance HsJSONPB.FromJSONPB FundingPsbtVerify where
  parseJSONPB =
    ( HsJSONPB.withObject
        "FundingPsbtVerify"
        ( \obj ->
            (Hs.pure FundingPsbtVerify) <*> obj .: "funded_psbt"
              <*> obj .: "pending_chan_id"
        )
    )

instance HsJSONPB.ToJSON FundingPsbtVerify where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON FundingPsbtVerify where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema FundingPsbtVerify where
  declareNamedSchema _ =
    do
      let declare_funded_psbt = HsJSONPB.declareSchemaRef
      fundingPsbtVerifyFundedPsbt <- declare_funded_psbt Proxy.Proxy
      let declare_pending_chan_id = HsJSONPB.declareSchemaRef
      fundingPsbtVerifyPendingChanId <-
        declare_pending_chan_id
          Proxy.Proxy
      let _ =
            Hs.pure FundingPsbtVerify
              <*> HsJSONPB.asProxy declare_funded_psbt
              <*> HsJSONPB.asProxy declare_pending_chan_id
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "FundingPsbtVerify",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "funded_psbt",
                            fundingPsbtVerifyFundedPsbt
                          ),
                          ( "pending_chan_id",
                            fundingPsbtVerifyPendingChanId
                          )
                        ]
                  }
            }
        )

data FundingPsbtFinalize
  = FundingPsbtFinalize
      { fundingPsbtFinalizeSignedPsbt ::
          Hs.ByteString,
        fundingPsbtFinalizePendingChanId :: Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FundingPsbtFinalize where
  nameOf _ = (Hs.fromString "FundingPsbtFinalize")

instance HsProtobuf.HasDefault FundingPsbtFinalize

instance HsProtobuf.Message FundingPsbtFinalize where
  encodeMessage
    _
    FundingPsbtFinalize
      { fundingPsbtFinalizeSignedPsbt =
          fundingPsbtFinalizeSignedPsbt,
        fundingPsbtFinalizePendingChanId =
          fundingPsbtFinalizePendingChanId
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                fundingPsbtFinalizeSignedPsbt
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                fundingPsbtFinalizePendingChanId
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure FundingPsbtFinalize)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "signed_psbt")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "pending_chan_id")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB FundingPsbtFinalize where
  toJSONPB (FundingPsbtFinalize f1 f2) =
    (HsJSONPB.object ["signed_psbt" .= f1, "pending_chan_id" .= f2])
  toEncodingPB (FundingPsbtFinalize f1 f2) =
    (HsJSONPB.pairs ["signed_psbt" .= f1, "pending_chan_id" .= f2])

instance HsJSONPB.FromJSONPB FundingPsbtFinalize where
  parseJSONPB =
    ( HsJSONPB.withObject
        "FundingPsbtFinalize"
        ( \obj ->
            (Hs.pure FundingPsbtFinalize) <*> obj .: "signed_psbt"
              <*> obj .: "pending_chan_id"
        )
    )

instance HsJSONPB.ToJSON FundingPsbtFinalize where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON FundingPsbtFinalize where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema FundingPsbtFinalize where
  declareNamedSchema _ =
    do
      let declare_signed_psbt = HsJSONPB.declareSchemaRef
      fundingPsbtFinalizeSignedPsbt <- declare_signed_psbt Proxy.Proxy
      let declare_pending_chan_id = HsJSONPB.declareSchemaRef
      fundingPsbtFinalizePendingChanId <-
        declare_pending_chan_id
          Proxy.Proxy
      let _ =
            Hs.pure FundingPsbtFinalize
              <*> HsJSONPB.asProxy declare_signed_psbt
              <*> HsJSONPB.asProxy declare_pending_chan_id
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "FundingPsbtFinalize",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "signed_psbt",
                            fundingPsbtFinalizeSignedPsbt
                          ),
                          ( "pending_chan_id",
                            fundingPsbtFinalizePendingChanId
                          )
                        ]
                  }
            }
        )

data FundingTransitionMsg
  = FundingTransitionMsg
      { fundingTransitionMsgTrigger ::
          Hs.Maybe
            FundingTransitionMsgTrigger
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FundingTransitionMsg where
  nameOf _ = (Hs.fromString "FundingTransitionMsg")

instance HsProtobuf.HasDefault FundingTransitionMsg

instance HsProtobuf.Message FundingTransitionMsg where
  encodeMessage
    _
    FundingTransitionMsg
      { fundingTransitionMsgTrigger =
          fundingTransitionMsgTrigger
      } =
      ( Hs.mconcat
          [ case fundingTransitionMsgTrigger of
              Hs.Nothing -> Hs.mempty
              Hs.Just x ->
                case x of
                  FundingTransitionMsgTriggerShimRegister y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 1)
                        ( Hs.coerce @(Hs.Maybe LndGrpc.FundingShim)
                            @(HsProtobuf.Nested LndGrpc.FundingShim)
                            (Hs.Just y)
                        )
                    )
                  FundingTransitionMsgTriggerShimCancel y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 2)
                        ( Hs.coerce @(Hs.Maybe LndGrpc.FundingShimCancel)
                            @(HsProtobuf.Nested LndGrpc.FundingShimCancel)
                            (Hs.Just y)
                        )
                    )
                  FundingTransitionMsgTriggerPsbtVerify y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 3)
                        ( Hs.coerce @(Hs.Maybe LndGrpc.FundingPsbtVerify)
                            @(HsProtobuf.Nested LndGrpc.FundingPsbtVerify)
                            (Hs.Just y)
                        )
                    )
                  FundingTransitionMsgTriggerPsbtFinalize y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 4)
                        ( Hs.coerce @(Hs.Maybe LndGrpc.FundingPsbtFinalize)
                            @(HsProtobuf.Nested LndGrpc.FundingPsbtFinalize)
                            (Hs.Just y)
                        )
                    )
          ]
      )
  decodeMessage _ =
    (Hs.pure FundingTransitionMsg)
      <*> ( HsProtobuf.oneof
              Hs.Nothing
              [ ( (HsProtobuf.FieldNumber 1),
                  (Hs.pure (Hs.fmap FundingTransitionMsgTriggerShimRegister))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.FundingShim))
                            @(_ (Hs.Maybe LndGrpc.FundingShim))
                            HsProtobuf.decodeMessageField
                        )
                ),
                ( (HsProtobuf.FieldNumber 2),
                  (Hs.pure (Hs.fmap FundingTransitionMsgTriggerShimCancel))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.FundingShimCancel))
                            @(_ (Hs.Maybe LndGrpc.FundingShimCancel))
                            HsProtobuf.decodeMessageField
                        )
                ),
                ( (HsProtobuf.FieldNumber 3),
                  (Hs.pure (Hs.fmap FundingTransitionMsgTriggerPsbtVerify))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.FundingPsbtVerify))
                            @(_ (Hs.Maybe LndGrpc.FundingPsbtVerify))
                            HsProtobuf.decodeMessageField
                        )
                ),
                ( (HsProtobuf.FieldNumber 4),
                  (Hs.pure (Hs.fmap FundingTransitionMsgTriggerPsbtFinalize))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.FundingPsbtFinalize))
                            @(_ (Hs.Maybe LndGrpc.FundingPsbtFinalize))
                            HsProtobuf.decodeMessageField
                        )
                )
              ]
          )
  dotProto _ = []

instance HsJSONPB.ToJSONPB FundingTransitionMsg where
  toJSONPB (FundingTransitionMsg f1_or_f2_or_f3_or_f4) =
    ( HsJSONPB.object
        [ ( let encodeTrigger =
                  ( case f1_or_f2_or_f3_or_f4 of
                      Hs.Just (FundingTransitionMsgTriggerShimRegister f1) ->
                        (HsJSONPB.pair "shim_register" f1)
                      Hs.Just (FundingTransitionMsgTriggerShimCancel f2) ->
                        (HsJSONPB.pair "shim_cancel" f2)
                      Hs.Just (FundingTransitionMsgTriggerPsbtVerify f3) ->
                        (HsJSONPB.pair "psbt_verify" f3)
                      Hs.Just (FundingTransitionMsgTriggerPsbtFinalize f4) ->
                        (HsJSONPB.pair "psbt_finalize" f4)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then
                      ("trigger" .= (HsJSONPB.objectOrNull [encodeTrigger] options))
                        options
                    else encodeTrigger options
          )
        ]
    )
  toEncodingPB (FundingTransitionMsg f1_or_f2_or_f3_or_f4) =
    ( HsJSONPB.pairs
        [ ( let encodeTrigger =
                  ( case f1_or_f2_or_f3_or_f4 of
                      Hs.Just (FundingTransitionMsgTriggerShimRegister f1) ->
                        (HsJSONPB.pair "shim_register" f1)
                      Hs.Just (FundingTransitionMsgTriggerShimCancel f2) ->
                        (HsJSONPB.pair "shim_cancel" f2)
                      Hs.Just (FundingTransitionMsgTriggerPsbtVerify f3) ->
                        (HsJSONPB.pair "psbt_verify" f3)
                      Hs.Just (FundingTransitionMsgTriggerPsbtFinalize f4) ->
                        (HsJSONPB.pair "psbt_finalize" f4)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then
                      ("trigger" .= (HsJSONPB.pairsOrNull [encodeTrigger] options))
                        options
                    else encodeTrigger options
          )
        ]
    )

instance HsJSONPB.FromJSONPB FundingTransitionMsg where
  parseJSONPB =
    ( HsJSONPB.withObject
        "FundingTransitionMsg"
        ( \obj ->
            (Hs.pure FundingTransitionMsg)
              <*> ( let parseTrigger parseObj =
                          Hs.msum
                            [ Hs.Just Hs.. FundingTransitionMsgTriggerShimRegister
                                <$> (HsJSONPB.parseField parseObj "shim_register"),
                              Hs.Just Hs.. FundingTransitionMsgTriggerShimCancel
                                <$> (HsJSONPB.parseField parseObj "shim_cancel"),
                              Hs.Just Hs.. FundingTransitionMsgTriggerPsbtVerify
                                <$> (HsJSONPB.parseField parseObj "psbt_verify"),
                              Hs.Just Hs.. FundingTransitionMsgTriggerPsbtFinalize
                                <$> (HsJSONPB.parseField parseObj "psbt_finalize"),
                              Hs.pure Hs.Nothing
                            ]
                     in ( (obj .: "trigger")
                            Hs.>>= (HsJSONPB.withObject "trigger" parseTrigger)
                        )
                          <|> (parseTrigger obj)
                  )
        )
    )

instance HsJSONPB.ToJSON FundingTransitionMsg where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON FundingTransitionMsg where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema FundingTransitionMsg where
  declareNamedSchema _ =
    do
      let declare_trigger = HsJSONPB.declareSchemaRef
      fundingTransitionMsgTrigger <- declare_trigger Proxy.Proxy
      let _ =
            Hs.pure FundingTransitionMsg
              <*> HsJSONPB.asProxy declare_trigger
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "FundingTransitionMsg",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("trigger", fundingTransitionMsgTrigger)]
                  }
            }
        )

data FundingTransitionMsgTrigger
  = FundingTransitionMsgTriggerShimRegister LndGrpc.FundingShim
  | FundingTransitionMsgTriggerShimCancel LndGrpc.FundingShimCancel
  | FundingTransitionMsgTriggerPsbtVerify LndGrpc.FundingPsbtVerify
  | FundingTransitionMsgTriggerPsbtFinalize LndGrpc.FundingPsbtFinalize
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FundingTransitionMsgTrigger where
  nameOf _ = (Hs.fromString "FundingTransitionMsgTrigger")

instance HsJSONPB.ToSchema FundingTransitionMsgTrigger where
  declareNamedSchema _ =
    do
      let declare_shim_register = HsJSONPB.declareSchemaRef
      fundingTransitionMsgTriggerShimRegister <-
        declare_shim_register
          Proxy.Proxy
      let _ =
            Hs.pure FundingTransitionMsgTriggerShimRegister
              <*> HsJSONPB.asProxy declare_shim_register
      let declare_shim_cancel = HsJSONPB.declareSchemaRef
      fundingTransitionMsgTriggerShimCancel <-
        declare_shim_cancel
          Proxy.Proxy
      let _ =
            Hs.pure FundingTransitionMsgTriggerShimCancel
              <*> HsJSONPB.asProxy declare_shim_cancel
      let declare_psbt_verify = HsJSONPB.declareSchemaRef
      fundingTransitionMsgTriggerPsbtVerify <-
        declare_psbt_verify
          Proxy.Proxy
      let _ =
            Hs.pure FundingTransitionMsgTriggerPsbtVerify
              <*> HsJSONPB.asProxy declare_psbt_verify
      let declare_psbt_finalize = HsJSONPB.declareSchemaRef
      fundingTransitionMsgTriggerPsbtFinalize <-
        declare_psbt_finalize
          Proxy.Proxy
      let _ =
            Hs.pure FundingTransitionMsgTriggerPsbtFinalize
              <*> HsJSONPB.asProxy declare_psbt_finalize
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "FundingTransitionMsgTrigger",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "shim_register",
                            fundingTransitionMsgTriggerShimRegister
                          ),
                          ( "shim_cancel",
                            fundingTransitionMsgTriggerShimCancel
                          ),
                          ( "psbt_verify",
                            fundingTransitionMsgTriggerPsbtVerify
                          ),
                          ( "psbt_finalize",
                            fundingTransitionMsgTriggerPsbtFinalize
                          )
                        ],
                    HsJSONPB._schemaMinProperties = Hs.Just 1,
                    HsJSONPB._schemaMaxProperties = Hs.Just 1
                  }
            }
        )

data FundingStateStepResp = FundingStateStepResp {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FundingStateStepResp where
  nameOf _ = (Hs.fromString "FundingStateStepResp")

instance HsProtobuf.HasDefault FundingStateStepResp

instance HsProtobuf.Message FundingStateStepResp where
  encodeMessage _ FundingStateStepResp {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure FundingStateStepResp)
  dotProto _ = []

instance HsJSONPB.ToJSONPB FundingStateStepResp where
  toJSONPB (FundingStateStepResp) = (HsJSONPB.object [])
  toEncodingPB (FundingStateStepResp) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB FundingStateStepResp where
  parseJSONPB =
    ( HsJSONPB.withObject
        "FundingStateStepResp"
        (\obj -> (Hs.pure FundingStateStepResp))
    )

instance HsJSONPB.ToJSON FundingStateStepResp where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON FundingStateStepResp where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema FundingStateStepResp where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "FundingStateStepResp",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data PendingHTLC
  = PendingHTLC
      { pendingHTLCIncoming :: Hs.Bool,
        pendingHTLCAmount :: Hs.Int64,
        pendingHTLCOutpoint :: Hs.Text,
        pendingHTLCMaturityHeight :: Hs.Word32,
        pendingHTLCBlocksTilMaturity :: Hs.Int32,
        pendingHTLCStage :: Hs.Word32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PendingHTLC where
  nameOf _ = (Hs.fromString "PendingHTLC")

instance HsProtobuf.HasDefault PendingHTLC

instance HsProtobuf.Message PendingHTLC where
  encodeMessage
    _
    PendingHTLC
      { pendingHTLCIncoming = pendingHTLCIncoming,
        pendingHTLCAmount = pendingHTLCAmount,
        pendingHTLCOutpoint = pendingHTLCOutpoint,
        pendingHTLCMaturityHeight = pendingHTLCMaturityHeight,
        pendingHTLCBlocksTilMaturity = pendingHTLCBlocksTilMaturity,
        pendingHTLCStage = pendingHTLCStage
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                pendingHTLCIncoming
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                pendingHTLCAmount
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                pendingHTLCOutpoint
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                pendingHTLCMaturityHeight
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                pendingHTLCBlocksTilMaturity
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                pendingHTLCStage
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PendingHTLC)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "incoming")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amount")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "outpoint")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "maturity_height")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "blocks_til_maturity")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "stage")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB PendingHTLC where
  toJSONPB (PendingHTLC f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.object
        [ "incoming" .= f1,
          "amount" .= f2,
          "outpoint" .= f3,
          "maturity_height" .= f4,
          "blocks_til_maturity" .= f5,
          "stage" .= f6
        ]
    )
  toEncodingPB (PendingHTLC f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.pairs
        [ "incoming" .= f1,
          "amount" .= f2,
          "outpoint" .= f3,
          "maturity_height" .= f4,
          "blocks_til_maturity" .= f5,
          "stage" .= f6
        ]
    )

instance HsJSONPB.FromJSONPB PendingHTLC where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PendingHTLC"
        ( \obj ->
            (Hs.pure PendingHTLC) <*> obj .: "incoming" <*> obj .: "amount"
              <*> obj .: "outpoint"
              <*> obj .: "maturity_height"
              <*> obj .: "blocks_til_maturity"
              <*> obj .: "stage"
        )
    )

instance HsJSONPB.ToJSON PendingHTLC where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PendingHTLC where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PendingHTLC where
  declareNamedSchema _ =
    do
      let declare_incoming = HsJSONPB.declareSchemaRef
      pendingHTLCIncoming <- declare_incoming Proxy.Proxy
      let declare_amount = HsJSONPB.declareSchemaRef
      pendingHTLCAmount <- declare_amount Proxy.Proxy
      let declare_outpoint = HsJSONPB.declareSchemaRef
      pendingHTLCOutpoint <- declare_outpoint Proxy.Proxy
      let declare_maturity_height = HsJSONPB.declareSchemaRef
      pendingHTLCMaturityHeight <- declare_maturity_height Proxy.Proxy
      let declare_blocks_til_maturity = HsJSONPB.declareSchemaRef
      pendingHTLCBlocksTilMaturity <-
        declare_blocks_til_maturity
          Proxy.Proxy
      let declare_stage = HsJSONPB.declareSchemaRef
      pendingHTLCStage <- declare_stage Proxy.Proxy
      let _ =
            Hs.pure PendingHTLC <*> HsJSONPB.asProxy declare_incoming
              <*> HsJSONPB.asProxy declare_amount
              <*> HsJSONPB.asProxy declare_outpoint
              <*> HsJSONPB.asProxy declare_maturity_height
              <*> HsJSONPB.asProxy declare_blocks_til_maturity
              <*> HsJSONPB.asProxy declare_stage
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PendingHTLC",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("incoming", pendingHTLCIncoming),
                          ("amount", pendingHTLCAmount),
                          ("outpoint", pendingHTLCOutpoint),
                          ( "maturity_height",
                            pendingHTLCMaturityHeight
                          ),
                          ( "blocks_til_maturity",
                            pendingHTLCBlocksTilMaturity
                          ),
                          ("stage", pendingHTLCStage)
                        ]
                  }
            }
        )

data PendingChannelsRequest = PendingChannelsRequest {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PendingChannelsRequest where
  nameOf _ = (Hs.fromString "PendingChannelsRequest")

instance HsProtobuf.HasDefault PendingChannelsRequest

instance HsProtobuf.Message PendingChannelsRequest where
  encodeMessage _ PendingChannelsRequest {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure PendingChannelsRequest)
  dotProto _ = []

instance HsJSONPB.ToJSONPB PendingChannelsRequest where
  toJSONPB (PendingChannelsRequest) = (HsJSONPB.object [])
  toEncodingPB (PendingChannelsRequest) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB PendingChannelsRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PendingChannelsRequest"
        (\obj -> (Hs.pure PendingChannelsRequest))
    )

instance HsJSONPB.ToJSON PendingChannelsRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PendingChannelsRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PendingChannelsRequest where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PendingChannelsRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data PendingChannelsResponse
  = PendingChannelsResponse
      { pendingChannelsResponseTotalLimboBalance ::
          Hs.Int64,
        pendingChannelsResponsePendingOpenChannels ::
          Hs.Vector
            LndGrpc.PendingChannelsResponse_PendingOpenChannel,
        pendingChannelsResponsePendingClosingChannels ::
          Hs.Vector
            LndGrpc.PendingChannelsResponse_ClosedChannel,
        pendingChannelsResponsePendingForceClosingChannels ::
          Hs.Vector
            LndGrpc.PendingChannelsResponse_ForceClosedChannel,
        pendingChannelsResponseWaitingCloseChannels ::
          Hs.Vector
            LndGrpc.PendingChannelsResponse_WaitingCloseChannel
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PendingChannelsResponse where
  nameOf _ = (Hs.fromString "PendingChannelsResponse")

instance HsProtobuf.HasDefault PendingChannelsResponse

instance HsProtobuf.Message PendingChannelsResponse where
  encodeMessage
    _
    PendingChannelsResponse
      { pendingChannelsResponseTotalLimboBalance =
          pendingChannelsResponseTotalLimboBalance,
        pendingChannelsResponsePendingOpenChannels =
          pendingChannelsResponsePendingOpenChannels,
        pendingChannelsResponsePendingClosingChannels =
          pendingChannelsResponsePendingClosingChannels,
        pendingChannelsResponsePendingForceClosingChannels =
          pendingChannelsResponsePendingForceClosingChannels,
        pendingChannelsResponseWaitingCloseChannels =
          pendingChannelsResponseWaitingCloseChannels
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                pendingChannelsResponseTotalLimboBalance
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce
                    @(Hs.Vector LndGrpc.PendingChannelsResponse_PendingOpenChannel)
                    @(HsProtobuf.NestedVec LndGrpc.PendingChannelsResponse_PendingOpenChannel)
                    pendingChannelsResponsePendingOpenChannels
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                ( Hs.coerce
                    @(Hs.Vector LndGrpc.PendingChannelsResponse_ClosedChannel)
                    @(HsProtobuf.NestedVec LndGrpc.PendingChannelsResponse_ClosedChannel)
                    pendingChannelsResponsePendingClosingChannels
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                ( Hs.coerce
                    @(Hs.Vector LndGrpc.PendingChannelsResponse_ForceClosedChannel)
                    @(HsProtobuf.NestedVec LndGrpc.PendingChannelsResponse_ForceClosedChannel)
                    pendingChannelsResponsePendingForceClosingChannels
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                ( Hs.coerce
                    @(Hs.Vector LndGrpc.PendingChannelsResponse_WaitingCloseChannel)
                    @(HsProtobuf.NestedVec LndGrpc.PendingChannelsResponse_WaitingCloseChannel)
                    pendingChannelsResponseWaitingCloseChannels
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PendingChannelsResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.NestedVec LndGrpc.PendingChannelsResponse_PendingOpenChannel))
              @(_ (Hs.Vector LndGrpc.PendingChannelsResponse_PendingOpenChannel))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.NestedVec LndGrpc.PendingChannelsResponse_ClosedChannel))
              @(_ (Hs.Vector LndGrpc.PendingChannelsResponse_ClosedChannel))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.NestedVec LndGrpc.PendingChannelsResponse_ForceClosedChannel))
              @(_ (Hs.Vector LndGrpc.PendingChannelsResponse_ForceClosedChannel))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.NestedVec LndGrpc.PendingChannelsResponse_WaitingCloseChannel))
              @(_ (Hs.Vector LndGrpc.PendingChannelsResponse_WaitingCloseChannel))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 5)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "total_limbo_balance")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "PendingOpenChannel"))
          )
          (HsProtobuf.Single "pending_open_channels")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "ClosedChannel"))
          )
          (HsProtobuf.Single "pending_closing_channels")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "ForceClosedChannel"))
          )
          (HsProtobuf.Single "pending_force_closing_channels")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "WaitingCloseChannel"))
          )
          (HsProtobuf.Single "waiting_close_channels")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB PendingChannelsResponse where
  toJSONPB (PendingChannelsResponse f1 f2 f3 f4 f5) =
    ( HsJSONPB.object
        [ "total_limbo_balance" .= f1,
          "pending_open_channels" .= f2,
          "pending_closing_channels" .= f3,
          "pending_force_closing_channels" .= f4,
          "waiting_close_channels" .= f5
        ]
    )
  toEncodingPB (PendingChannelsResponse f1 f2 f3 f4 f5) =
    ( HsJSONPB.pairs
        [ "total_limbo_balance" .= f1,
          "pending_open_channels" .= f2,
          "pending_closing_channels" .= f3,
          "pending_force_closing_channels" .= f4,
          "waiting_close_channels" .= f5
        ]
    )

instance HsJSONPB.FromJSONPB PendingChannelsResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PendingChannelsResponse"
        ( \obj ->
            (Hs.pure PendingChannelsResponse) <*> obj .: "total_limbo_balance"
              <*> obj .: "pending_open_channels"
              <*> obj .: "pending_closing_channels"
              <*> obj .: "pending_force_closing_channels"
              <*> obj .: "waiting_close_channels"
        )
    )

instance HsJSONPB.ToJSON PendingChannelsResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PendingChannelsResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PendingChannelsResponse where
  declareNamedSchema _ =
    do
      let declare_total_limbo_balance = HsJSONPB.declareSchemaRef
      pendingChannelsResponseTotalLimboBalance <-
        declare_total_limbo_balance
          Proxy.Proxy
      let declare_pending_open_channels = HsJSONPB.declareSchemaRef
      pendingChannelsResponsePendingOpenChannels <-
        declare_pending_open_channels
          Proxy.Proxy
      let declare_pending_closing_channels = HsJSONPB.declareSchemaRef
      pendingChannelsResponsePendingClosingChannels <-
        declare_pending_closing_channels
          Proxy.Proxy
      let declare_pending_force_closing_channels =
            HsJSONPB.declareSchemaRef
      pendingChannelsResponsePendingForceClosingChannels <-
        declare_pending_force_closing_channels
          Proxy.Proxy
      let declare_waiting_close_channels = HsJSONPB.declareSchemaRef
      pendingChannelsResponseWaitingCloseChannels <-
        declare_waiting_close_channels
          Proxy.Proxy
      let _ =
            Hs.pure PendingChannelsResponse
              <*> HsJSONPB.asProxy declare_total_limbo_balance
              <*> HsJSONPB.asProxy declare_pending_open_channels
              <*> HsJSONPB.asProxy declare_pending_closing_channels
              <*> HsJSONPB.asProxy declare_pending_force_closing_channels
              <*> HsJSONPB.asProxy declare_waiting_close_channels
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PendingChannelsResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "total_limbo_balance",
                            pendingChannelsResponseTotalLimboBalance
                          ),
                          ( "pending_open_channels",
                            pendingChannelsResponsePendingOpenChannels
                          ),
                          ( "pending_closing_channels",
                            pendingChannelsResponsePendingClosingChannels
                          ),
                          ( "pending_force_closing_channels",
                            pendingChannelsResponsePendingForceClosingChannels
                          ),
                          ( "waiting_close_channels",
                            pendingChannelsResponseWaitingCloseChannels
                          )
                        ]
                  }
            }
        )

data PendingChannelsResponse_PendingChannel
  = PendingChannelsResponse_PendingChannel
      { pendingChannelsResponse_PendingChannelRemoteNodePub ::
          Hs.Text,
        pendingChannelsResponse_PendingChannelChannelPoint ::
          Hs.Text,
        pendingChannelsResponse_PendingChannelCapacity ::
          Hs.Int64,
        pendingChannelsResponse_PendingChannelLocalBalance ::
          Hs.Int64,
        pendingChannelsResponse_PendingChannelRemoteBalance ::
          Hs.Int64,
        pendingChannelsResponse_PendingChannelLocalChanReserveSat ::
          Hs.Int64,
        pendingChannelsResponse_PendingChannelRemoteChanReserveSat ::
          Hs.Int64,
        pendingChannelsResponse_PendingChannelInitiator ::
          HsProtobuf.Enumerated
            LndGrpc.Initiator,
        pendingChannelsResponse_PendingChannelCommitmentType ::
          HsProtobuf.Enumerated
            LndGrpc.CommitmentType
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PendingChannelsResponse_PendingChannel where
  nameOf _ = (Hs.fromString "PendingChannelsResponse_PendingChannel")

instance
  HsProtobuf.HasDefault
    PendingChannelsResponse_PendingChannel

instance HsProtobuf.Message PendingChannelsResponse_PendingChannel where
  encodeMessage
    _
    PendingChannelsResponse_PendingChannel
      { pendingChannelsResponse_PendingChannelRemoteNodePub =
          pendingChannelsResponse_PendingChannelRemoteNodePub,
        pendingChannelsResponse_PendingChannelChannelPoint =
          pendingChannelsResponse_PendingChannelChannelPoint,
        pendingChannelsResponse_PendingChannelCapacity =
          pendingChannelsResponse_PendingChannelCapacity,
        pendingChannelsResponse_PendingChannelLocalBalance =
          pendingChannelsResponse_PendingChannelLocalBalance,
        pendingChannelsResponse_PendingChannelRemoteBalance =
          pendingChannelsResponse_PendingChannelRemoteBalance,
        pendingChannelsResponse_PendingChannelLocalChanReserveSat =
          pendingChannelsResponse_PendingChannelLocalChanReserveSat,
        pendingChannelsResponse_PendingChannelRemoteChanReserveSat =
          pendingChannelsResponse_PendingChannelRemoteChanReserveSat,
        pendingChannelsResponse_PendingChannelInitiator =
          pendingChannelsResponse_PendingChannelInitiator,
        pendingChannelsResponse_PendingChannelCommitmentType =
          pendingChannelsResponse_PendingChannelCommitmentType
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                pendingChannelsResponse_PendingChannelRemoteNodePub
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                pendingChannelsResponse_PendingChannelChannelPoint
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                pendingChannelsResponse_PendingChannelCapacity
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                pendingChannelsResponse_PendingChannelLocalBalance
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                pendingChannelsResponse_PendingChannelRemoteBalance
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                pendingChannelsResponse_PendingChannelLocalChanReserveSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                pendingChannelsResponse_PendingChannelRemoteChanReserveSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                pendingChannelsResponse_PendingChannelInitiator
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                pendingChannelsResponse_PendingChannelCommitmentType
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PendingChannelsResponse_PendingChannel)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "remote_node_pub")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "channel_point")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "capacity")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "local_balance")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "remote_balance")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "local_chan_reserve_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "remote_chan_reserve_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "Initiator"))
          )
          (HsProtobuf.Single "initiator")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "CommitmentType"))
          )
          (HsProtobuf.Single "commitment_type")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB PendingChannelsResponse_PendingChannel where
  toJSONPB (PendingChannelsResponse_PendingChannel f1 f2 f3 f4 f5 f6 f7 f8 f9) =
    ( HsJSONPB.object
        [ "remote_node_pub" .= f1,
          "channel_point" .= f2,
          "capacity" .= f3,
          "local_balance" .= f4,
          "remote_balance" .= f5,
          "local_chan_reserve_sat" .= f6,
          "remote_chan_reserve_sat" .= f7,
          "initiator" .= f8,
          "commitment_type" .= f9
        ]
    )
  toEncodingPB (PendingChannelsResponse_PendingChannel f1 f2 f3 f4 f5 f6 f7 f8 f9) =
    ( HsJSONPB.pairs
        [ "remote_node_pub" .= f1,
          "channel_point" .= f2,
          "capacity" .= f3,
          "local_balance" .= f4,
          "remote_balance" .= f5,
          "local_chan_reserve_sat" .= f6,
          "remote_chan_reserve_sat" .= f7,
          "initiator" .= f8,
          "commitment_type" .= f9
        ]
    )

instance HsJSONPB.FromJSONPB PendingChannelsResponse_PendingChannel where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PendingChannelsResponse_PendingChannel"
        ( \obj ->
            (Hs.pure PendingChannelsResponse_PendingChannel)
              <*> obj .: "remote_node_pub"
              <*> obj .: "channel_point"
              <*> obj .: "capacity"
              <*> obj .: "local_balance"
              <*> obj .: "remote_balance"
              <*> obj .: "local_chan_reserve_sat"
              <*> obj .: "remote_chan_reserve_sat"
              <*> obj .: "initiator"
              <*> obj .: "commitment_type"
        )
    )

instance HsJSONPB.ToJSON PendingChannelsResponse_PendingChannel where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PendingChannelsResponse_PendingChannel where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PendingChannelsResponse_PendingChannel where
  declareNamedSchema _ =
    do
      let declare_remote_node_pub = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_PendingChannelRemoteNodePub <-
        declare_remote_node_pub
          Proxy.Proxy
      let declare_channel_point = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_PendingChannelChannelPoint <-
        declare_channel_point
          Proxy.Proxy
      let declare_capacity = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_PendingChannelCapacity <-
        declare_capacity
          Proxy.Proxy
      let declare_local_balance = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_PendingChannelLocalBalance <-
        declare_local_balance
          Proxy.Proxy
      let declare_remote_balance = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_PendingChannelRemoteBalance <-
        declare_remote_balance
          Proxy.Proxy
      let declare_local_chan_reserve_sat = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_PendingChannelLocalChanReserveSat <-
        declare_local_chan_reserve_sat
          Proxy.Proxy
      let declare_remote_chan_reserve_sat = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_PendingChannelRemoteChanReserveSat <-
        declare_remote_chan_reserve_sat
          Proxy.Proxy
      let declare_initiator = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_PendingChannelInitiator <-
        declare_initiator
          Proxy.Proxy
      let declare_commitment_type = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_PendingChannelCommitmentType <-
        declare_commitment_type
          Proxy.Proxy
      let _ =
            Hs.pure PendingChannelsResponse_PendingChannel
              <*> HsJSONPB.asProxy declare_remote_node_pub
              <*> HsJSONPB.asProxy declare_channel_point
              <*> HsJSONPB.asProxy declare_capacity
              <*> HsJSONPB.asProxy declare_local_balance
              <*> HsJSONPB.asProxy declare_remote_balance
              <*> HsJSONPB.asProxy declare_local_chan_reserve_sat
              <*> HsJSONPB.asProxy declare_remote_chan_reserve_sat
              <*> HsJSONPB.asProxy declare_initiator
              <*> HsJSONPB.asProxy declare_commitment_type
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PendingChannelsResponse_PendingChannel",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "remote_node_pub",
                            pendingChannelsResponse_PendingChannelRemoteNodePub
                          ),
                          ( "channel_point",
                            pendingChannelsResponse_PendingChannelChannelPoint
                          ),
                          ( "capacity",
                            pendingChannelsResponse_PendingChannelCapacity
                          ),
                          ( "local_balance",
                            pendingChannelsResponse_PendingChannelLocalBalance
                          ),
                          ( "remote_balance",
                            pendingChannelsResponse_PendingChannelRemoteBalance
                          ),
                          ( "local_chan_reserve_sat",
                            pendingChannelsResponse_PendingChannelLocalChanReserveSat
                          ),
                          ( "remote_chan_reserve_sat",
                            pendingChannelsResponse_PendingChannelRemoteChanReserveSat
                          ),
                          ( "initiator",
                            pendingChannelsResponse_PendingChannelInitiator
                          ),
                          ( "commitment_type",
                            pendingChannelsResponse_PendingChannelCommitmentType
                          )
                        ]
                  }
            }
        )

data PendingChannelsResponse_PendingOpenChannel
  = PendingChannelsResponse_PendingOpenChannel
      { pendingChannelsResponse_PendingOpenChannelChannel ::
          Hs.Maybe
            LndGrpc.PendingChannelsResponse_PendingChannel,
        pendingChannelsResponse_PendingOpenChannelConfirmationHeight ::
          Hs.Word32,
        pendingChannelsResponse_PendingOpenChannelCommitFee ::
          Hs.Int64,
        pendingChannelsResponse_PendingOpenChannelCommitWeight ::
          Hs.Int64,
        pendingChannelsResponse_PendingOpenChannelFeePerKw ::
          Hs.Int64
      }
  deriving
    ( Hs.Show,
      Hs.Eq,
      Hs.Ord,
      Hs.Generic,
      Hs.NFData
    )

instance
  HsProtobuf.Named
    PendingChannelsResponse_PendingOpenChannel
  where
  nameOf _ =
    (Hs.fromString "PendingChannelsResponse_PendingOpenChannel")

instance
  HsProtobuf.HasDefault
    PendingChannelsResponse_PendingOpenChannel

instance
  HsProtobuf.Message
    PendingChannelsResponse_PendingOpenChannel
  where
  encodeMessage
    _
    PendingChannelsResponse_PendingOpenChannel
      { pendingChannelsResponse_PendingOpenChannelChannel =
          pendingChannelsResponse_PendingOpenChannelChannel,
        pendingChannelsResponse_PendingOpenChannelConfirmationHeight =
          pendingChannelsResponse_PendingOpenChannelConfirmationHeight,
        pendingChannelsResponse_PendingOpenChannelCommitFee =
          pendingChannelsResponse_PendingOpenChannelCommitFee,
        pendingChannelsResponse_PendingOpenChannelCommitWeight =
          pendingChannelsResponse_PendingOpenChannelCommitWeight,
        pendingChannelsResponse_PendingOpenChannelFeePerKw =
          pendingChannelsResponse_PendingOpenChannelFeePerKw
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce
                    @(Hs.Maybe LndGrpc.PendingChannelsResponse_PendingChannel)
                    @(HsProtobuf.Nested LndGrpc.PendingChannelsResponse_PendingChannel)
                    pendingChannelsResponse_PendingOpenChannelChannel
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                pendingChannelsResponse_PendingOpenChannelConfirmationHeight
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                pendingChannelsResponse_PendingOpenChannelCommitFee
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                pendingChannelsResponse_PendingOpenChannelCommitWeight
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                pendingChannelsResponse_PendingOpenChannelFeePerKw
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PendingChannelsResponse_PendingOpenChannel)
      <*> ( Hs.coerce
              @(_ (HsProtobuf.Nested LndGrpc.PendingChannelsResponse_PendingChannel))
              @(_ (Hs.Maybe LndGrpc.PendingChannelsResponse_PendingChannel))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "PendingChannel"))
          )
          (HsProtobuf.Single "channel")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "confirmation_height")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "commit_fee")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "commit_weight")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "fee_per_kw")
          []
          ""
      )
    ]

instance
  HsJSONPB.ToJSONPB
    PendingChannelsResponse_PendingOpenChannel
  where
  toJSONPB (PendingChannelsResponse_PendingOpenChannel f1 f2 f4 f5 f6) =
    ( HsJSONPB.object
        [ "channel" .= f1,
          "confirmation_height" .= f2,
          "commit_fee" .= f4,
          "commit_weight" .= f5,
          "fee_per_kw" .= f6
        ]
    )
  toEncodingPB (PendingChannelsResponse_PendingOpenChannel f1 f2 f4 f5 f6) =
    ( HsJSONPB.pairs
        [ "channel" .= f1,
          "confirmation_height" .= f2,
          "commit_fee" .= f4,
          "commit_weight" .= f5,
          "fee_per_kw" .= f6
        ]
    )

instance
  HsJSONPB.FromJSONPB
    PendingChannelsResponse_PendingOpenChannel
  where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PendingChannelsResponse_PendingOpenChannel"
        ( \obj ->
            (Hs.pure PendingChannelsResponse_PendingOpenChannel)
              <*> obj .: "channel"
              <*> obj .: "confirmation_height"
              <*> obj .: "commit_fee"
              <*> obj .: "commit_weight"
              <*> obj .: "fee_per_kw"
        )
    )

instance HsJSONPB.ToJSON PendingChannelsResponse_PendingOpenChannel where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance
  HsJSONPB.FromJSON
    PendingChannelsResponse_PendingOpenChannel
  where
  parseJSON = HsJSONPB.parseJSONPB

instance
  HsJSONPB.ToSchema
    PendingChannelsResponse_PendingOpenChannel
  where
  declareNamedSchema _ =
    do
      let declare_channel = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_PendingOpenChannelChannel <-
        declare_channel
          Proxy.Proxy
      let declare_confirmation_height = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_PendingOpenChannelConfirmationHeight <-
        declare_confirmation_height
          Proxy.Proxy
      let declare_commit_fee = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_PendingOpenChannelCommitFee <-
        declare_commit_fee
          Proxy.Proxy
      let declare_commit_weight = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_PendingOpenChannelCommitWeight <-
        declare_commit_weight
          Proxy.Proxy
      let declare_fee_per_kw = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_PendingOpenChannelFeePerKw <-
        declare_fee_per_kw
          Proxy.Proxy
      let _ =
            Hs.pure PendingChannelsResponse_PendingOpenChannel
              <*> HsJSONPB.asProxy declare_channel
              <*> HsJSONPB.asProxy declare_confirmation_height
              <*> HsJSONPB.asProxy declare_commit_fee
              <*> HsJSONPB.asProxy declare_commit_weight
              <*> HsJSONPB.asProxy declare_fee_per_kw
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PendingChannelsResponse_PendingOpenChannel",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "channel",
                            pendingChannelsResponse_PendingOpenChannelChannel
                          ),
                          ( "confirmation_height",
                            pendingChannelsResponse_PendingOpenChannelConfirmationHeight
                          ),
                          ( "commit_fee",
                            pendingChannelsResponse_PendingOpenChannelCommitFee
                          ),
                          ( "commit_weight",
                            pendingChannelsResponse_PendingOpenChannelCommitWeight
                          ),
                          ( "fee_per_kw",
                            pendingChannelsResponse_PendingOpenChannelFeePerKw
                          )
                        ]
                  }
            }
        )

data PendingChannelsResponse_WaitingCloseChannel
  = PendingChannelsResponse_WaitingCloseChannel
      { pendingChannelsResponse_WaitingCloseChannelChannel ::
          Hs.Maybe
            LndGrpc.PendingChannelsResponse_PendingChannel,
        pendingChannelsResponse_WaitingCloseChannelLimboBalance ::
          Hs.Int64,
        pendingChannelsResponse_WaitingCloseChannelCommitments ::
          Hs.Maybe
            LndGrpc.PendingChannelsResponse_Commitments
      }
  deriving
    ( Hs.Show,
      Hs.Eq,
      Hs.Ord,
      Hs.Generic,
      Hs.NFData
    )

instance
  HsProtobuf.Named
    PendingChannelsResponse_WaitingCloseChannel
  where
  nameOf _ =
    (Hs.fromString "PendingChannelsResponse_WaitingCloseChannel")

instance
  HsProtobuf.HasDefault
    PendingChannelsResponse_WaitingCloseChannel

instance
  HsProtobuf.Message
    PendingChannelsResponse_WaitingCloseChannel
  where
  encodeMessage
    _
    PendingChannelsResponse_WaitingCloseChannel
      { pendingChannelsResponse_WaitingCloseChannelChannel =
          pendingChannelsResponse_WaitingCloseChannelChannel,
        pendingChannelsResponse_WaitingCloseChannelLimboBalance =
          pendingChannelsResponse_WaitingCloseChannelLimboBalance,
        pendingChannelsResponse_WaitingCloseChannelCommitments =
          pendingChannelsResponse_WaitingCloseChannelCommitments
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce
                    @(Hs.Maybe LndGrpc.PendingChannelsResponse_PendingChannel)
                    @(HsProtobuf.Nested LndGrpc.PendingChannelsResponse_PendingChannel)
                    pendingChannelsResponse_WaitingCloseChannelChannel
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                pendingChannelsResponse_WaitingCloseChannelLimboBalance
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                ( Hs.coerce @(Hs.Maybe LndGrpc.PendingChannelsResponse_Commitments)
                    @(HsProtobuf.Nested LndGrpc.PendingChannelsResponse_Commitments)
                    pendingChannelsResponse_WaitingCloseChannelCommitments
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PendingChannelsResponse_WaitingCloseChannel)
      <*> ( Hs.coerce
              @(_ (HsProtobuf.Nested LndGrpc.PendingChannelsResponse_PendingChannel))
              @(_ (Hs.Maybe LndGrpc.PendingChannelsResponse_PendingChannel))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.Nested LndGrpc.PendingChannelsResponse_Commitments))
              @(_ (Hs.Maybe LndGrpc.PendingChannelsResponse_Commitments))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "PendingChannel"))
          )
          (HsProtobuf.Single "channel")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "limbo_balance")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "Commitments"))
          )
          (HsProtobuf.Single "commitments")
          []
          ""
      )
    ]

instance
  HsJSONPB.ToJSONPB
    PendingChannelsResponse_WaitingCloseChannel
  where
  toJSONPB (PendingChannelsResponse_WaitingCloseChannel f1 f2 f3) =
    ( HsJSONPB.object
        ["channel" .= f1, "limbo_balance" .= f2, "commitments" .= f3]
    )
  toEncodingPB (PendingChannelsResponse_WaitingCloseChannel f1 f2 f3) =
    ( HsJSONPB.pairs
        ["channel" .= f1, "limbo_balance" .= f2, "commitments" .= f3]
    )

instance
  HsJSONPB.FromJSONPB
    PendingChannelsResponse_WaitingCloseChannel
  where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PendingChannelsResponse_WaitingCloseChannel"
        ( \obj ->
            (Hs.pure PendingChannelsResponse_WaitingCloseChannel)
              <*> obj .: "channel"
              <*> obj .: "limbo_balance"
              <*> obj .: "commitments"
        )
    )

instance
  HsJSONPB.ToJSON
    PendingChannelsResponse_WaitingCloseChannel
  where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance
  HsJSONPB.FromJSON
    PendingChannelsResponse_WaitingCloseChannel
  where
  parseJSON = HsJSONPB.parseJSONPB

instance
  HsJSONPB.ToSchema
    PendingChannelsResponse_WaitingCloseChannel
  where
  declareNamedSchema _ =
    do
      let declare_channel = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_WaitingCloseChannelChannel <-
        declare_channel
          Proxy.Proxy
      let declare_limbo_balance = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_WaitingCloseChannelLimboBalance <-
        declare_limbo_balance
          Proxy.Proxy
      let declare_commitments = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_WaitingCloseChannelCommitments <-
        declare_commitments
          Proxy.Proxy
      let _ =
            Hs.pure PendingChannelsResponse_WaitingCloseChannel
              <*> HsJSONPB.asProxy declare_channel
              <*> HsJSONPB.asProxy declare_limbo_balance
              <*> HsJSONPB.asProxy declare_commitments
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PendingChannelsResponse_WaitingCloseChannel",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "channel",
                            pendingChannelsResponse_WaitingCloseChannelChannel
                          ),
                          ( "limbo_balance",
                            pendingChannelsResponse_WaitingCloseChannelLimboBalance
                          ),
                          ( "commitments",
                            pendingChannelsResponse_WaitingCloseChannelCommitments
                          )
                        ]
                  }
            }
        )

data PendingChannelsResponse_Commitments
  = PendingChannelsResponse_Commitments
      { pendingChannelsResponse_CommitmentsLocalTxid ::
          Hs.Text,
        pendingChannelsResponse_CommitmentsRemoteTxid ::
          Hs.Text,
        pendingChannelsResponse_CommitmentsRemotePendingTxid ::
          Hs.Text,
        pendingChannelsResponse_CommitmentsLocalCommitFeeSat ::
          Hs.Word64,
        pendingChannelsResponse_CommitmentsRemoteCommitFeeSat ::
          Hs.Word64,
        pendingChannelsResponse_CommitmentsRemotePendingCommitFeeSat ::
          Hs.Word64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PendingChannelsResponse_Commitments where
  nameOf _ = (Hs.fromString "PendingChannelsResponse_Commitments")

instance HsProtobuf.HasDefault PendingChannelsResponse_Commitments

instance HsProtobuf.Message PendingChannelsResponse_Commitments where
  encodeMessage
    _
    PendingChannelsResponse_Commitments
      { pendingChannelsResponse_CommitmentsLocalTxid =
          pendingChannelsResponse_CommitmentsLocalTxid,
        pendingChannelsResponse_CommitmentsRemoteTxid =
          pendingChannelsResponse_CommitmentsRemoteTxid,
        pendingChannelsResponse_CommitmentsRemotePendingTxid =
          pendingChannelsResponse_CommitmentsRemotePendingTxid,
        pendingChannelsResponse_CommitmentsLocalCommitFeeSat =
          pendingChannelsResponse_CommitmentsLocalCommitFeeSat,
        pendingChannelsResponse_CommitmentsRemoteCommitFeeSat =
          pendingChannelsResponse_CommitmentsRemoteCommitFeeSat,
        pendingChannelsResponse_CommitmentsRemotePendingCommitFeeSat =
          pendingChannelsResponse_CommitmentsRemotePendingCommitFeeSat
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                pendingChannelsResponse_CommitmentsLocalTxid
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                pendingChannelsResponse_CommitmentsRemoteTxid
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                pendingChannelsResponse_CommitmentsRemotePendingTxid
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                pendingChannelsResponse_CommitmentsLocalCommitFeeSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                pendingChannelsResponse_CommitmentsRemoteCommitFeeSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                pendingChannelsResponse_CommitmentsRemotePendingCommitFeeSat
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PendingChannelsResponse_Commitments)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "local_txid")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "remote_txid")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "remote_pending_txid")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "local_commit_fee_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "remote_commit_fee_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "remote_pending_commit_fee_sat")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB PendingChannelsResponse_Commitments where
  toJSONPB (PendingChannelsResponse_Commitments f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.object
        [ "local_txid" .= f1,
          "remote_txid" .= f2,
          "remote_pending_txid" .= f3,
          "local_commit_fee_sat" .= f4,
          "remote_commit_fee_sat" .= f5,
          "remote_pending_commit_fee_sat" .= f6
        ]
    )
  toEncodingPB (PendingChannelsResponse_Commitments f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.pairs
        [ "local_txid" .= f1,
          "remote_txid" .= f2,
          "remote_pending_txid" .= f3,
          "local_commit_fee_sat" .= f4,
          "remote_commit_fee_sat" .= f5,
          "remote_pending_commit_fee_sat" .= f6
        ]
    )

instance HsJSONPB.FromJSONPB PendingChannelsResponse_Commitments where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PendingChannelsResponse_Commitments"
        ( \obj ->
            (Hs.pure PendingChannelsResponse_Commitments)
              <*> obj .: "local_txid"
              <*> obj .: "remote_txid"
              <*> obj .: "remote_pending_txid"
              <*> obj .: "local_commit_fee_sat"
              <*> obj .: "remote_commit_fee_sat"
              <*> obj .: "remote_pending_commit_fee_sat"
        )
    )

instance HsJSONPB.ToJSON PendingChannelsResponse_Commitments where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PendingChannelsResponse_Commitments where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PendingChannelsResponse_Commitments where
  declareNamedSchema _ =
    do
      let declare_local_txid = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_CommitmentsLocalTxid <-
        declare_local_txid
          Proxy.Proxy
      let declare_remote_txid = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_CommitmentsRemoteTxid <-
        declare_remote_txid
          Proxy.Proxy
      let declare_remote_pending_txid = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_CommitmentsRemotePendingTxid <-
        declare_remote_pending_txid
          Proxy.Proxy
      let declare_local_commit_fee_sat = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_CommitmentsLocalCommitFeeSat <-
        declare_local_commit_fee_sat
          Proxy.Proxy
      let declare_remote_commit_fee_sat = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_CommitmentsRemoteCommitFeeSat <-
        declare_remote_commit_fee_sat
          Proxy.Proxy
      let declare_remote_pending_commit_fee_sat =
            HsJSONPB.declareSchemaRef
      pendingChannelsResponse_CommitmentsRemotePendingCommitFeeSat <-
        declare_remote_pending_commit_fee_sat
          Proxy.Proxy
      let _ =
            Hs.pure PendingChannelsResponse_Commitments
              <*> HsJSONPB.asProxy declare_local_txid
              <*> HsJSONPB.asProxy declare_remote_txid
              <*> HsJSONPB.asProxy declare_remote_pending_txid
              <*> HsJSONPB.asProxy declare_local_commit_fee_sat
              <*> HsJSONPB.asProxy declare_remote_commit_fee_sat
              <*> HsJSONPB.asProxy declare_remote_pending_commit_fee_sat
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PendingChannelsResponse_Commitments",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "local_txid",
                            pendingChannelsResponse_CommitmentsLocalTxid
                          ),
                          ( "remote_txid",
                            pendingChannelsResponse_CommitmentsRemoteTxid
                          ),
                          ( "remote_pending_txid",
                            pendingChannelsResponse_CommitmentsRemotePendingTxid
                          ),
                          ( "local_commit_fee_sat",
                            pendingChannelsResponse_CommitmentsLocalCommitFeeSat
                          ),
                          ( "remote_commit_fee_sat",
                            pendingChannelsResponse_CommitmentsRemoteCommitFeeSat
                          ),
                          ( "remote_pending_commit_fee_sat",
                            pendingChannelsResponse_CommitmentsRemotePendingCommitFeeSat
                          )
                        ]
                  }
            }
        )

data PendingChannelsResponse_ClosedChannel
  = PendingChannelsResponse_ClosedChannel
      { pendingChannelsResponse_ClosedChannelChannel ::
          Hs.Maybe
            LndGrpc.PendingChannelsResponse_PendingChannel,
        pendingChannelsResponse_ClosedChannelClosingTxid ::
          Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PendingChannelsResponse_ClosedChannel where
  nameOf _ = (Hs.fromString "PendingChannelsResponse_ClosedChannel")

instance
  HsProtobuf.HasDefault
    PendingChannelsResponse_ClosedChannel

instance HsProtobuf.Message PendingChannelsResponse_ClosedChannel where
  encodeMessage
    _
    PendingChannelsResponse_ClosedChannel
      { pendingChannelsResponse_ClosedChannelChannel =
          pendingChannelsResponse_ClosedChannelChannel,
        pendingChannelsResponse_ClosedChannelClosingTxid =
          pendingChannelsResponse_ClosedChannelClosingTxid
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce
                    @(Hs.Maybe LndGrpc.PendingChannelsResponse_PendingChannel)
                    @(HsProtobuf.Nested LndGrpc.PendingChannelsResponse_PendingChannel)
                    pendingChannelsResponse_ClosedChannelChannel
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                pendingChannelsResponse_ClosedChannelClosingTxid
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PendingChannelsResponse_ClosedChannel)
      <*> ( Hs.coerce
              @(_ (HsProtobuf.Nested LndGrpc.PendingChannelsResponse_PendingChannel))
              @(_ (Hs.Maybe LndGrpc.PendingChannelsResponse_PendingChannel))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "PendingChannel"))
          )
          (HsProtobuf.Single "channel")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "closing_txid")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB PendingChannelsResponse_ClosedChannel where
  toJSONPB (PendingChannelsResponse_ClosedChannel f1 f2) =
    (HsJSONPB.object ["channel" .= f1, "closing_txid" .= f2])
  toEncodingPB (PendingChannelsResponse_ClosedChannel f1 f2) =
    (HsJSONPB.pairs ["channel" .= f1, "closing_txid" .= f2])

instance HsJSONPB.FromJSONPB PendingChannelsResponse_ClosedChannel where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PendingChannelsResponse_ClosedChannel"
        ( \obj ->
            (Hs.pure PendingChannelsResponse_ClosedChannel)
              <*> obj .: "channel"
              <*> obj .: "closing_txid"
        )
    )

instance HsJSONPB.ToJSON PendingChannelsResponse_ClosedChannel where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PendingChannelsResponse_ClosedChannel where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PendingChannelsResponse_ClosedChannel where
  declareNamedSchema _ =
    do
      let declare_channel = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_ClosedChannelChannel <-
        declare_channel
          Proxy.Proxy
      let declare_closing_txid = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_ClosedChannelClosingTxid <-
        declare_closing_txid
          Proxy.Proxy
      let _ =
            Hs.pure PendingChannelsResponse_ClosedChannel
              <*> HsJSONPB.asProxy declare_channel
              <*> HsJSONPB.asProxy declare_closing_txid
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PendingChannelsResponse_ClosedChannel",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "channel",
                            pendingChannelsResponse_ClosedChannelChannel
                          ),
                          ( "closing_txid",
                            pendingChannelsResponse_ClosedChannelClosingTxid
                          )
                        ]
                  }
            }
        )

data PendingChannelsResponse_ForceClosedChannel
  = PendingChannelsResponse_ForceClosedChannel
      { pendingChannelsResponse_ForceClosedChannelChannel ::
          Hs.Maybe
            LndGrpc.PendingChannelsResponse_PendingChannel,
        pendingChannelsResponse_ForceClosedChannelClosingTxid ::
          Hs.Text,
        pendingChannelsResponse_ForceClosedChannelLimboBalance ::
          Hs.Int64,
        pendingChannelsResponse_ForceClosedChannelMaturityHeight ::
          Hs.Word32,
        pendingChannelsResponse_ForceClosedChannelBlocksTilMaturity ::
          Hs.Int32,
        pendingChannelsResponse_ForceClosedChannelRecoveredBalance ::
          Hs.Int64,
        pendingChannelsResponse_ForceClosedChannelPendingHtlcs ::
          Hs.Vector
            LndGrpc.PendingHTLC,
        pendingChannelsResponse_ForceClosedChannelAnchor ::
          HsProtobuf.Enumerated
            LndGrpc.PendingChannelsResponse_ForceClosedChannel_AnchorState
      }
  deriving
    ( Hs.Show,
      Hs.Eq,
      Hs.Ord,
      Hs.Generic,
      Hs.NFData
    )

instance
  HsProtobuf.Named
    PendingChannelsResponse_ForceClosedChannel
  where
  nameOf _ =
    (Hs.fromString "PendingChannelsResponse_ForceClosedChannel")

instance
  HsProtobuf.HasDefault
    PendingChannelsResponse_ForceClosedChannel

instance
  HsProtobuf.Message
    PendingChannelsResponse_ForceClosedChannel
  where
  encodeMessage
    _
    PendingChannelsResponse_ForceClosedChannel
      { pendingChannelsResponse_ForceClosedChannelChannel =
          pendingChannelsResponse_ForceClosedChannelChannel,
        pendingChannelsResponse_ForceClosedChannelClosingTxid =
          pendingChannelsResponse_ForceClosedChannelClosingTxid,
        pendingChannelsResponse_ForceClosedChannelLimboBalance =
          pendingChannelsResponse_ForceClosedChannelLimboBalance,
        pendingChannelsResponse_ForceClosedChannelMaturityHeight =
          pendingChannelsResponse_ForceClosedChannelMaturityHeight,
        pendingChannelsResponse_ForceClosedChannelBlocksTilMaturity =
          pendingChannelsResponse_ForceClosedChannelBlocksTilMaturity,
        pendingChannelsResponse_ForceClosedChannelRecoveredBalance =
          pendingChannelsResponse_ForceClosedChannelRecoveredBalance,
        pendingChannelsResponse_ForceClosedChannelPendingHtlcs =
          pendingChannelsResponse_ForceClosedChannelPendingHtlcs,
        pendingChannelsResponse_ForceClosedChannelAnchor =
          pendingChannelsResponse_ForceClosedChannelAnchor
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce
                    @(Hs.Maybe LndGrpc.PendingChannelsResponse_PendingChannel)
                    @(HsProtobuf.Nested LndGrpc.PendingChannelsResponse_PendingChannel)
                    pendingChannelsResponse_ForceClosedChannelChannel
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                pendingChannelsResponse_ForceClosedChannelClosingTxid
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                pendingChannelsResponse_ForceClosedChannelLimboBalance
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                pendingChannelsResponse_ForceClosedChannelMaturityHeight
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                pendingChannelsResponse_ForceClosedChannelBlocksTilMaturity
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                pendingChannelsResponse_ForceClosedChannelRecoveredBalance
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                ( Hs.coerce @(Hs.Vector LndGrpc.PendingHTLC)
                    @(HsProtobuf.NestedVec LndGrpc.PendingHTLC)
                    pendingChannelsResponse_ForceClosedChannelPendingHtlcs
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                pendingChannelsResponse_ForceClosedChannelAnchor
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PendingChannelsResponse_ForceClosedChannel)
      <*> ( Hs.coerce
              @(_ (HsProtobuf.Nested LndGrpc.PendingChannelsResponse_PendingChannel))
              @(_ (Hs.Maybe LndGrpc.PendingChannelsResponse_PendingChannel))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.PendingHTLC))
              @(_ (Hs.Vector LndGrpc.PendingHTLC))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 8)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "PendingChannel"))
          )
          (HsProtobuf.Single "channel")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "closing_txid")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "limbo_balance")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "maturity_height")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "blocks_til_maturity")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "recovered_balance")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "PendingHTLC"))
          )
          (HsProtobuf.Single "pending_htlcs")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "AnchorState"))
          )
          (HsProtobuf.Single "anchor")
          []
          ""
      )
    ]

instance
  HsJSONPB.ToJSONPB
    PendingChannelsResponse_ForceClosedChannel
  where
  toJSONPB
    ( PendingChannelsResponse_ForceClosedChannel
        f1
        f2
        f3
        f4
        f5
        f6
        f8
        f9
      ) =
      ( HsJSONPB.object
          [ "channel" .= f1,
            "closing_txid" .= f2,
            "limbo_balance" .= f3,
            "maturity_height" .= f4,
            "blocks_til_maturity" .= f5,
            "recovered_balance" .= f6,
            "pending_htlcs" .= f8,
            "anchor" .= f9
          ]
      )
  toEncodingPB
    ( PendingChannelsResponse_ForceClosedChannel
        f1
        f2
        f3
        f4
        f5
        f6
        f8
        f9
      ) =
      ( HsJSONPB.pairs
          [ "channel" .= f1,
            "closing_txid" .= f2,
            "limbo_balance" .= f3,
            "maturity_height" .= f4,
            "blocks_til_maturity" .= f5,
            "recovered_balance" .= f6,
            "pending_htlcs" .= f8,
            "anchor" .= f9
          ]
      )

instance
  HsJSONPB.FromJSONPB
    PendingChannelsResponse_ForceClosedChannel
  where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PendingChannelsResponse_ForceClosedChannel"
        ( \obj ->
            (Hs.pure PendingChannelsResponse_ForceClosedChannel)
              <*> obj .: "channel"
              <*> obj .: "closing_txid"
              <*> obj .: "limbo_balance"
              <*> obj .: "maturity_height"
              <*> obj .: "blocks_til_maturity"
              <*> obj .: "recovered_balance"
              <*> obj .: "pending_htlcs"
              <*> obj .: "anchor"
        )
    )

instance HsJSONPB.ToJSON PendingChannelsResponse_ForceClosedChannel where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance
  HsJSONPB.FromJSON
    PendingChannelsResponse_ForceClosedChannel
  where
  parseJSON = HsJSONPB.parseJSONPB

instance
  HsJSONPB.ToSchema
    PendingChannelsResponse_ForceClosedChannel
  where
  declareNamedSchema _ =
    do
      let declare_channel = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_ForceClosedChannelChannel <-
        declare_channel
          Proxy.Proxy
      let declare_closing_txid = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_ForceClosedChannelClosingTxid <-
        declare_closing_txid
          Proxy.Proxy
      let declare_limbo_balance = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_ForceClosedChannelLimboBalance <-
        declare_limbo_balance
          Proxy.Proxy
      let declare_maturity_height = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_ForceClosedChannelMaturityHeight <-
        declare_maturity_height
          Proxy.Proxy
      let declare_blocks_til_maturity = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_ForceClosedChannelBlocksTilMaturity <-
        declare_blocks_til_maturity
          Proxy.Proxy
      let declare_recovered_balance = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_ForceClosedChannelRecoveredBalance <-
        declare_recovered_balance
          Proxy.Proxy
      let declare_pending_htlcs = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_ForceClosedChannelPendingHtlcs <-
        declare_pending_htlcs
          Proxy.Proxy
      let declare_anchor = HsJSONPB.declareSchemaRef
      pendingChannelsResponse_ForceClosedChannelAnchor <-
        declare_anchor
          Proxy.Proxy
      let _ =
            Hs.pure PendingChannelsResponse_ForceClosedChannel
              <*> HsJSONPB.asProxy declare_channel
              <*> HsJSONPB.asProxy declare_closing_txid
              <*> HsJSONPB.asProxy declare_limbo_balance
              <*> HsJSONPB.asProxy declare_maturity_height
              <*> HsJSONPB.asProxy declare_blocks_til_maturity
              <*> HsJSONPB.asProxy declare_recovered_balance
              <*> HsJSONPB.asProxy declare_pending_htlcs
              <*> HsJSONPB.asProxy declare_anchor
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PendingChannelsResponse_ForceClosedChannel",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "channel",
                            pendingChannelsResponse_ForceClosedChannelChannel
                          ),
                          ( "closing_txid",
                            pendingChannelsResponse_ForceClosedChannelClosingTxid
                          ),
                          ( "limbo_balance",
                            pendingChannelsResponse_ForceClosedChannelLimboBalance
                          ),
                          ( "maturity_height",
                            pendingChannelsResponse_ForceClosedChannelMaturityHeight
                          ),
                          ( "blocks_til_maturity",
                            pendingChannelsResponse_ForceClosedChannelBlocksTilMaturity
                          ),
                          ( "recovered_balance",
                            pendingChannelsResponse_ForceClosedChannelRecoveredBalance
                          ),
                          ( "pending_htlcs",
                            pendingChannelsResponse_ForceClosedChannelPendingHtlcs
                          ),
                          ( "anchor",
                            pendingChannelsResponse_ForceClosedChannelAnchor
                          )
                        ]
                  }
            }
        )

data PendingChannelsResponse_ForceClosedChannel_AnchorState
  = PendingChannelsResponse_ForceClosedChannel_AnchorStateLIMBO
  | PendingChannelsResponse_ForceClosedChannel_AnchorStateRECOVERED
  | PendingChannelsResponse_ForceClosedChannel_AnchorStateLOST
  deriving
    ( Hs.Show,
      Hs.Eq,
      Hs.Generic,
      Hs.NFData
    )

instance
  HsProtobuf.Named
    PendingChannelsResponse_ForceClosedChannel_AnchorState
  where
  nameOf _ =
    ( Hs.fromString
        "PendingChannelsResponse_ForceClosedChannel_AnchorState"
    )

instance
  HsProtobuf.HasDefault
    PendingChannelsResponse_ForceClosedChannel_AnchorState

instance
  Hs.Bounded
    PendingChannelsResponse_ForceClosedChannel_AnchorState
  where
  minBound =
    PendingChannelsResponse_ForceClosedChannel_AnchorStateLIMBO
  maxBound =
    PendingChannelsResponse_ForceClosedChannel_AnchorStateLOST

instance
  Hs.Ord
    PendingChannelsResponse_ForceClosedChannel_AnchorState
  where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance
  HsProtobuf.ProtoEnum
    PendingChannelsResponse_ForceClosedChannel_AnchorState
  where
  toProtoEnumMay 0 =
    Hs.Just
      PendingChannelsResponse_ForceClosedChannel_AnchorStateLIMBO
  toProtoEnumMay 1 =
    Hs.Just
      PendingChannelsResponse_ForceClosedChannel_AnchorStateRECOVERED
  toProtoEnumMay 2 =
    Hs.Just
      PendingChannelsResponse_ForceClosedChannel_AnchorStateLOST
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (PendingChannelsResponse_ForceClosedChannel_AnchorStateLIMBO) = 0
  fromProtoEnum (PendingChannelsResponse_ForceClosedChannel_AnchorStateRECOVERED) =
    1
  fromProtoEnum (PendingChannelsResponse_ForceClosedChannel_AnchorStateLOST) = 2

instance
  HsJSONPB.ToJSONPB
    PendingChannelsResponse_ForceClosedChannel_AnchorState
  where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance
  HsJSONPB.FromJSONPB
    PendingChannelsResponse_ForceClosedChannel_AnchorState
  where
  parseJSONPB (HsJSONPB.String "LIMBO") =
    Hs.pure
      PendingChannelsResponse_ForceClosedChannel_AnchorStateLIMBO
  parseJSONPB (HsJSONPB.String "RECOVERED") =
    Hs.pure
      PendingChannelsResponse_ForceClosedChannel_AnchorStateRECOVERED
  parseJSONPB (HsJSONPB.String "LOST") =
    Hs.pure
      PendingChannelsResponse_ForceClosedChannel_AnchorStateLOST
  parseJSONPB v =
    ( HsJSONPB.typeMismatch
        "PendingChannelsResponse_ForceClosedChannel_AnchorState"
        v
    )

instance
  HsJSONPB.ToJSON
    PendingChannelsResponse_ForceClosedChannel_AnchorState
  where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance
  HsJSONPB.FromJSON
    PendingChannelsResponse_ForceClosedChannel_AnchorState
  where
  parseJSON = HsJSONPB.parseJSONPB

instance
  HsProtobuf.Finite
    PendingChannelsResponse_ForceClosedChannel_AnchorState

data ChannelEventSubscription = ChannelEventSubscription {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelEventSubscription where
  nameOf _ = (Hs.fromString "ChannelEventSubscription")

instance HsProtobuf.HasDefault ChannelEventSubscription

instance HsProtobuf.Message ChannelEventSubscription where
  encodeMessage _ ChannelEventSubscription {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure ChannelEventSubscription)
  dotProto _ = []

instance HsJSONPB.ToJSONPB ChannelEventSubscription where
  toJSONPB (ChannelEventSubscription) = (HsJSONPB.object [])
  toEncodingPB (ChannelEventSubscription) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB ChannelEventSubscription where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelEventSubscription"
        (\obj -> (Hs.pure ChannelEventSubscription))
    )

instance HsJSONPB.ToJSON ChannelEventSubscription where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelEventSubscription where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelEventSubscription where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelEventSubscription",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data ChannelEventUpdate
  = ChannelEventUpdate
      { channelEventUpdateChannel ::
          Hs.Maybe
            ChannelEventUpdateChannel,
        channelEventUpdateType ::
          HsProtobuf.Enumerated
            LndGrpc.ChannelEventUpdate_UpdateType
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelEventUpdate where
  nameOf _ = (Hs.fromString "ChannelEventUpdate")

instance HsProtobuf.HasDefault ChannelEventUpdate

instance HsProtobuf.Message ChannelEventUpdate where
  encodeMessage
    _
    ChannelEventUpdate
      { channelEventUpdateChannel =
          channelEventUpdateChannel,
        channelEventUpdateType = channelEventUpdateType
      } =
      ( Hs.mconcat
          [ case channelEventUpdateChannel of
              Hs.Nothing -> Hs.mempty
              Hs.Just x ->
                case x of
                  ChannelEventUpdateChannelOpenChannel y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 1)
                        ( Hs.coerce @(Hs.Maybe LndGrpc.Channel)
                            @(HsProtobuf.Nested LndGrpc.Channel)
                            (Hs.Just y)
                        )
                    )
                  ChannelEventUpdateChannelClosedChannel y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 2)
                        ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelCloseSummary)
                            @(HsProtobuf.Nested LndGrpc.ChannelCloseSummary)
                            (Hs.Just y)
                        )
                    )
                  ChannelEventUpdateChannelActiveChannel y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 3)
                        ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelPoint)
                            @(HsProtobuf.Nested LndGrpc.ChannelPoint)
                            (Hs.Just y)
                        )
                    )
                  ChannelEventUpdateChannelInactiveChannel y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 4)
                        ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelPoint)
                            @(HsProtobuf.Nested LndGrpc.ChannelPoint)
                            (Hs.Just y)
                        )
                    )
                  ChannelEventUpdateChannelPendingOpenChannel y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 6)
                        ( Hs.coerce @(Hs.Maybe LndGrpc.PendingUpdate)
                            @(HsProtobuf.Nested LndGrpc.PendingUpdate)
                            (Hs.Just y)
                        )
                    ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                channelEventUpdateType
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChannelEventUpdate)
      <*> ( HsProtobuf.oneof
              Hs.Nothing
              [ ( (HsProtobuf.FieldNumber 1),
                  (Hs.pure (Hs.fmap ChannelEventUpdateChannelOpenChannel))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.Channel))
                            @(_ (Hs.Maybe LndGrpc.Channel))
                            HsProtobuf.decodeMessageField
                        )
                ),
                ( (HsProtobuf.FieldNumber 2),
                  (Hs.pure (Hs.fmap ChannelEventUpdateChannelClosedChannel))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelCloseSummary))
                            @(_ (Hs.Maybe LndGrpc.ChannelCloseSummary))
                            HsProtobuf.decodeMessageField
                        )
                ),
                ( (HsProtobuf.FieldNumber 3),
                  (Hs.pure (Hs.fmap ChannelEventUpdateChannelActiveChannel))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelPoint))
                            @(_ (Hs.Maybe LndGrpc.ChannelPoint))
                            HsProtobuf.decodeMessageField
                        )
                ),
                ( (HsProtobuf.FieldNumber 4),
                  (Hs.pure (Hs.fmap ChannelEventUpdateChannelInactiveChannel))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelPoint))
                            @(_ (Hs.Maybe LndGrpc.ChannelPoint))
                            HsProtobuf.decodeMessageField
                        )
                ),
                ( (HsProtobuf.FieldNumber 6),
                  (Hs.pure (Hs.fmap ChannelEventUpdateChannelPendingOpenChannel))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.PendingUpdate))
                            @(_ (Hs.Maybe LndGrpc.PendingUpdate))
                            HsProtobuf.decodeMessageField
                        )
                )
              ]
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "UpdateType"))
          )
          (HsProtobuf.Single "type")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChannelEventUpdate where
  toJSONPB (ChannelEventUpdate f1_or_f2_or_f3_or_f4_or_f6 f5) =
    ( HsJSONPB.object
        [ ( let encodeChannel =
                  ( case f1_or_f2_or_f3_or_f4_or_f6 of
                      Hs.Just (ChannelEventUpdateChannelOpenChannel f1) ->
                        (HsJSONPB.pair "open_channel" f1)
                      Hs.Just (ChannelEventUpdateChannelClosedChannel f2) ->
                        (HsJSONPB.pair "closed_channel" f2)
                      Hs.Just (ChannelEventUpdateChannelActiveChannel f3) ->
                        (HsJSONPB.pair "active_channel" f3)
                      Hs.Just (ChannelEventUpdateChannelInactiveChannel f4) ->
                        (HsJSONPB.pair "inactive_channel" f4)
                      Hs.Just (ChannelEventUpdateChannelPendingOpenChannel f6) ->
                        (HsJSONPB.pair "pending_open_channel" f6)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then
                      ("channel" .= (HsJSONPB.objectOrNull [encodeChannel] options))
                        options
                    else encodeChannel options
          ),
          "type" .= f5
        ]
    )
  toEncodingPB (ChannelEventUpdate f1_or_f2_or_f3_or_f4_or_f6 f5) =
    ( HsJSONPB.pairs
        [ ( let encodeChannel =
                  ( case f1_or_f2_or_f3_or_f4_or_f6 of
                      Hs.Just (ChannelEventUpdateChannelOpenChannel f1) ->
                        (HsJSONPB.pair "open_channel" f1)
                      Hs.Just (ChannelEventUpdateChannelClosedChannel f2) ->
                        (HsJSONPB.pair "closed_channel" f2)
                      Hs.Just (ChannelEventUpdateChannelActiveChannel f3) ->
                        (HsJSONPB.pair "active_channel" f3)
                      Hs.Just (ChannelEventUpdateChannelInactiveChannel f4) ->
                        (HsJSONPB.pair "inactive_channel" f4)
                      Hs.Just (ChannelEventUpdateChannelPendingOpenChannel f6) ->
                        (HsJSONPB.pair "pending_open_channel" f6)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then
                      ("channel" .= (HsJSONPB.pairsOrNull [encodeChannel] options))
                        options
                    else encodeChannel options
          ),
          "type" .= f5
        ]
    )

instance HsJSONPB.FromJSONPB ChannelEventUpdate where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelEventUpdate"
        ( \obj ->
            (Hs.pure ChannelEventUpdate)
              <*> ( let parseChannel parseObj =
                          Hs.msum
                            [ Hs.Just Hs.. ChannelEventUpdateChannelOpenChannel
                                <$> (HsJSONPB.parseField parseObj "open_channel"),
                              Hs.Just Hs.. ChannelEventUpdateChannelClosedChannel
                                <$> (HsJSONPB.parseField parseObj "closed_channel"),
                              Hs.Just Hs.. ChannelEventUpdateChannelActiveChannel
                                <$> (HsJSONPB.parseField parseObj "active_channel"),
                              Hs.Just Hs.. ChannelEventUpdateChannelInactiveChannel
                                <$> (HsJSONPB.parseField parseObj "inactive_channel"),
                              Hs.Just Hs.. ChannelEventUpdateChannelPendingOpenChannel
                                <$> (HsJSONPB.parseField parseObj "pending_open_channel"),
                              Hs.pure Hs.Nothing
                            ]
                     in ( (obj .: "channel")
                            Hs.>>= (HsJSONPB.withObject "channel" parseChannel)
                        )
                          <|> (parseChannel obj)
                  )
              <*> obj .: "type"
        )
    )

instance HsJSONPB.ToJSON ChannelEventUpdate where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelEventUpdate where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelEventUpdate where
  declareNamedSchema _ =
    do
      let declare_channel = HsJSONPB.declareSchemaRef
      channelEventUpdateChannel <- declare_channel Proxy.Proxy
      let declare_type = HsJSONPB.declareSchemaRef
      channelEventUpdateType <- declare_type Proxy.Proxy
      let _ =
            Hs.pure ChannelEventUpdate
              <*> HsJSONPB.asProxy declare_channel
              <*> HsJSONPB.asProxy declare_type
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelEventUpdate",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("channel", channelEventUpdateChannel),
                          ("type", channelEventUpdateType)
                        ]
                  }
            }
        )

data ChannelEventUpdate_UpdateType
  = ChannelEventUpdate_UpdateTypeOPEN_CHANNEL
  | ChannelEventUpdate_UpdateTypeCLOSED_CHANNEL
  | ChannelEventUpdate_UpdateTypeACTIVE_CHANNEL
  | ChannelEventUpdate_UpdateTypeINACTIVE_CHANNEL
  | ChannelEventUpdate_UpdateTypePENDING_OPEN_CHANNEL
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelEventUpdate_UpdateType where
  nameOf _ = (Hs.fromString "ChannelEventUpdate_UpdateType")

instance HsProtobuf.HasDefault ChannelEventUpdate_UpdateType

instance Hs.Bounded ChannelEventUpdate_UpdateType where
  minBound = ChannelEventUpdate_UpdateTypeOPEN_CHANNEL
  maxBound = ChannelEventUpdate_UpdateTypePENDING_OPEN_CHANNEL

instance Hs.Ord ChannelEventUpdate_UpdateType where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum ChannelEventUpdate_UpdateType where
  toProtoEnumMay 0 =
    Hs.Just ChannelEventUpdate_UpdateTypeOPEN_CHANNEL
  toProtoEnumMay 1 =
    Hs.Just ChannelEventUpdate_UpdateTypeCLOSED_CHANNEL
  toProtoEnumMay 2 =
    Hs.Just ChannelEventUpdate_UpdateTypeACTIVE_CHANNEL
  toProtoEnumMay 3 =
    Hs.Just ChannelEventUpdate_UpdateTypeINACTIVE_CHANNEL
  toProtoEnumMay 4 =
    Hs.Just ChannelEventUpdate_UpdateTypePENDING_OPEN_CHANNEL
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (ChannelEventUpdate_UpdateTypeOPEN_CHANNEL) = 0
  fromProtoEnum (ChannelEventUpdate_UpdateTypeCLOSED_CHANNEL) = 1
  fromProtoEnum (ChannelEventUpdate_UpdateTypeACTIVE_CHANNEL) = 2
  fromProtoEnum (ChannelEventUpdate_UpdateTypeINACTIVE_CHANNEL) = 3
  fromProtoEnum (ChannelEventUpdate_UpdateTypePENDING_OPEN_CHANNEL) =
    4

instance HsJSONPB.ToJSONPB ChannelEventUpdate_UpdateType where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB ChannelEventUpdate_UpdateType where
  parseJSONPB (HsJSONPB.String "OPEN_CHANNEL") =
    Hs.pure ChannelEventUpdate_UpdateTypeOPEN_CHANNEL
  parseJSONPB (HsJSONPB.String "CLOSED_CHANNEL") =
    Hs.pure ChannelEventUpdate_UpdateTypeCLOSED_CHANNEL
  parseJSONPB (HsJSONPB.String "ACTIVE_CHANNEL") =
    Hs.pure ChannelEventUpdate_UpdateTypeACTIVE_CHANNEL
  parseJSONPB (HsJSONPB.String "INACTIVE_CHANNEL") =
    Hs.pure ChannelEventUpdate_UpdateTypeINACTIVE_CHANNEL
  parseJSONPB (HsJSONPB.String "PENDING_OPEN_CHANNEL") =
    Hs.pure ChannelEventUpdate_UpdateTypePENDING_OPEN_CHANNEL
  parseJSONPB v =
    (HsJSONPB.typeMismatch "ChannelEventUpdate_UpdateType" v)

instance HsJSONPB.ToJSON ChannelEventUpdate_UpdateType where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelEventUpdate_UpdateType where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite ChannelEventUpdate_UpdateType

data ChannelEventUpdateChannel
  = ChannelEventUpdateChannelOpenChannel LndGrpc.Channel
  | ChannelEventUpdateChannelClosedChannel LndGrpc.ChannelCloseSummary
  | ChannelEventUpdateChannelActiveChannel LndGrpc.ChannelPoint
  | ChannelEventUpdateChannelInactiveChannel LndGrpc.ChannelPoint
  | ChannelEventUpdateChannelPendingOpenChannel LndGrpc.PendingUpdate
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelEventUpdateChannel where
  nameOf _ = (Hs.fromString "ChannelEventUpdateChannel")

instance HsJSONPB.ToSchema ChannelEventUpdateChannel where
  declareNamedSchema _ =
    do
      let declare_open_channel = HsJSONPB.declareSchemaRef
      channelEventUpdateChannelOpenChannel <-
        declare_open_channel
          Proxy.Proxy
      let _ =
            Hs.pure ChannelEventUpdateChannelOpenChannel
              <*> HsJSONPB.asProxy declare_open_channel
      let declare_closed_channel = HsJSONPB.declareSchemaRef
      channelEventUpdateChannelClosedChannel <-
        declare_closed_channel
          Proxy.Proxy
      let _ =
            Hs.pure ChannelEventUpdateChannelClosedChannel
              <*> HsJSONPB.asProxy declare_closed_channel
      let declare_active_channel = HsJSONPB.declareSchemaRef
      channelEventUpdateChannelActiveChannel <-
        declare_active_channel
          Proxy.Proxy
      let _ =
            Hs.pure ChannelEventUpdateChannelActiveChannel
              <*> HsJSONPB.asProxy declare_active_channel
      let declare_inactive_channel = HsJSONPB.declareSchemaRef
      channelEventUpdateChannelInactiveChannel <-
        declare_inactive_channel
          Proxy.Proxy
      let _ =
            Hs.pure ChannelEventUpdateChannelInactiveChannel
              <*> HsJSONPB.asProxy declare_inactive_channel
      let declare_pending_open_channel = HsJSONPB.declareSchemaRef
      channelEventUpdateChannelPendingOpenChannel <-
        declare_pending_open_channel
          Proxy.Proxy
      let _ =
            Hs.pure ChannelEventUpdateChannelPendingOpenChannel
              <*> HsJSONPB.asProxy declare_pending_open_channel
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelEventUpdateChannel",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "open_channel",
                            channelEventUpdateChannelOpenChannel
                          ),
                          ( "closed_channel",
                            channelEventUpdateChannelClosedChannel
                          ),
                          ( "active_channel",
                            channelEventUpdateChannelActiveChannel
                          ),
                          ( "inactive_channel",
                            channelEventUpdateChannelInactiveChannel
                          ),
                          ( "pending_open_channel",
                            channelEventUpdateChannelPendingOpenChannel
                          )
                        ],
                    HsJSONPB._schemaMinProperties = Hs.Just 1,
                    HsJSONPB._schemaMaxProperties = Hs.Just 1
                  }
            }
        )

data WalletBalanceRequest = WalletBalanceRequest {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named WalletBalanceRequest where
  nameOf _ = (Hs.fromString "WalletBalanceRequest")

instance HsProtobuf.HasDefault WalletBalanceRequest

instance HsProtobuf.Message WalletBalanceRequest where
  encodeMessage _ WalletBalanceRequest {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure WalletBalanceRequest)
  dotProto _ = []

instance HsJSONPB.ToJSONPB WalletBalanceRequest where
  toJSONPB (WalletBalanceRequest) = (HsJSONPB.object [])
  toEncodingPB (WalletBalanceRequest) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB WalletBalanceRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "WalletBalanceRequest"
        (\obj -> (Hs.pure WalletBalanceRequest))
    )

instance HsJSONPB.ToJSON WalletBalanceRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON WalletBalanceRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema WalletBalanceRequest where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "WalletBalanceRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data WalletBalanceResponse
  = WalletBalanceResponse
      { walletBalanceResponseTotalBalance ::
          Hs.Int64,
        walletBalanceResponseConfirmedBalance ::
          Hs.Int64,
        walletBalanceResponseUnconfirmedBalance ::
          Hs.Int64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named WalletBalanceResponse where
  nameOf _ = (Hs.fromString "WalletBalanceResponse")

instance HsProtobuf.HasDefault WalletBalanceResponse

instance HsProtobuf.Message WalletBalanceResponse where
  encodeMessage
    _
    WalletBalanceResponse
      { walletBalanceResponseTotalBalance =
          walletBalanceResponseTotalBalance,
        walletBalanceResponseConfirmedBalance =
          walletBalanceResponseConfirmedBalance,
        walletBalanceResponseUnconfirmedBalance =
          walletBalanceResponseUnconfirmedBalance
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                walletBalanceResponseTotalBalance
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                walletBalanceResponseConfirmedBalance
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                walletBalanceResponseUnconfirmedBalance
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure WalletBalanceResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "total_balance")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "confirmed_balance")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "unconfirmed_balance")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB WalletBalanceResponse where
  toJSONPB (WalletBalanceResponse f1 f2 f3) =
    ( HsJSONPB.object
        [ "total_balance" .= f1,
          "confirmed_balance" .= f2,
          "unconfirmed_balance" .= f3
        ]
    )
  toEncodingPB (WalletBalanceResponse f1 f2 f3) =
    ( HsJSONPB.pairs
        [ "total_balance" .= f1,
          "confirmed_balance" .= f2,
          "unconfirmed_balance" .= f3
        ]
    )

instance HsJSONPB.FromJSONPB WalletBalanceResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "WalletBalanceResponse"
        ( \obj ->
            (Hs.pure WalletBalanceResponse) <*> obj .: "total_balance"
              <*> obj .: "confirmed_balance"
              <*> obj .: "unconfirmed_balance"
        )
    )

instance HsJSONPB.ToJSON WalletBalanceResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON WalletBalanceResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema WalletBalanceResponse where
  declareNamedSchema _ =
    do
      let declare_total_balance = HsJSONPB.declareSchemaRef
      walletBalanceResponseTotalBalance <-
        declare_total_balance
          Proxy.Proxy
      let declare_confirmed_balance = HsJSONPB.declareSchemaRef
      walletBalanceResponseConfirmedBalance <-
        declare_confirmed_balance
          Proxy.Proxy
      let declare_unconfirmed_balance = HsJSONPB.declareSchemaRef
      walletBalanceResponseUnconfirmedBalance <-
        declare_unconfirmed_balance
          Proxy.Proxy
      let _ =
            Hs.pure WalletBalanceResponse
              <*> HsJSONPB.asProxy declare_total_balance
              <*> HsJSONPB.asProxy declare_confirmed_balance
              <*> HsJSONPB.asProxy declare_unconfirmed_balance
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "WalletBalanceResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "total_balance",
                            walletBalanceResponseTotalBalance
                          ),
                          ( "confirmed_balance",
                            walletBalanceResponseConfirmedBalance
                          ),
                          ( "unconfirmed_balance",
                            walletBalanceResponseUnconfirmedBalance
                          )
                        ]
                  }
            }
        )

data ChannelBalanceRequest = ChannelBalanceRequest {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelBalanceRequest where
  nameOf _ = (Hs.fromString "ChannelBalanceRequest")

instance HsProtobuf.HasDefault ChannelBalanceRequest

instance HsProtobuf.Message ChannelBalanceRequest where
  encodeMessage _ ChannelBalanceRequest {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure ChannelBalanceRequest)
  dotProto _ = []

instance HsJSONPB.ToJSONPB ChannelBalanceRequest where
  toJSONPB (ChannelBalanceRequest) = (HsJSONPB.object [])
  toEncodingPB (ChannelBalanceRequest) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB ChannelBalanceRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelBalanceRequest"
        (\obj -> (Hs.pure ChannelBalanceRequest))
    )

instance HsJSONPB.ToJSON ChannelBalanceRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelBalanceRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelBalanceRequest where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelBalanceRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data ChannelBalanceResponse
  = ChannelBalanceResponse
      { channelBalanceResponseBalance ::
          Hs.Int64,
        channelBalanceResponsePendingOpenBalance ::
          Hs.Int64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelBalanceResponse where
  nameOf _ = (Hs.fromString "ChannelBalanceResponse")

instance HsProtobuf.HasDefault ChannelBalanceResponse

instance HsProtobuf.Message ChannelBalanceResponse where
  encodeMessage
    _
    ChannelBalanceResponse
      { channelBalanceResponseBalance =
          channelBalanceResponseBalance,
        channelBalanceResponsePendingOpenBalance =
          channelBalanceResponsePendingOpenBalance
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                channelBalanceResponseBalance
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                channelBalanceResponsePendingOpenBalance
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChannelBalanceResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "balance")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "pending_open_balance")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChannelBalanceResponse where
  toJSONPB (ChannelBalanceResponse f1 f2) =
    (HsJSONPB.object ["balance" .= f1, "pending_open_balance" .= f2])
  toEncodingPB (ChannelBalanceResponse f1 f2) =
    (HsJSONPB.pairs ["balance" .= f1, "pending_open_balance" .= f2])

instance HsJSONPB.FromJSONPB ChannelBalanceResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelBalanceResponse"
        ( \obj ->
            (Hs.pure ChannelBalanceResponse) <*> obj .: "balance"
              <*> obj .: "pending_open_balance"
        )
    )

instance HsJSONPB.ToJSON ChannelBalanceResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelBalanceResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelBalanceResponse where
  declareNamedSchema _ =
    do
      let declare_balance = HsJSONPB.declareSchemaRef
      channelBalanceResponseBalance <- declare_balance Proxy.Proxy
      let declare_pending_open_balance = HsJSONPB.declareSchemaRef
      channelBalanceResponsePendingOpenBalance <-
        declare_pending_open_balance
          Proxy.Proxy
      let _ =
            Hs.pure ChannelBalanceResponse
              <*> HsJSONPB.asProxy declare_balance
              <*> HsJSONPB.asProxy declare_pending_open_balance
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelBalanceResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("balance", channelBalanceResponseBalance),
                          ( "pending_open_balance",
                            channelBalanceResponsePendingOpenBalance
                          )
                        ]
                  }
            }
        )

data QueryRoutesRequest
  = QueryRoutesRequest
      { queryRoutesRequestPubKey ::
          Hs.Text,
        queryRoutesRequestAmt :: Hs.Int64,
        queryRoutesRequestAmtMsat :: Hs.Int64,
        queryRoutesRequestFinalCltvDelta :: Hs.Int32,
        queryRoutesRequestFeeLimit ::
          Hs.Maybe
            LndGrpc.FeeLimit,
        queryRoutesRequestIgnoredNodes ::
          Hs.Vector
            Hs.ByteString,
        queryRoutesRequestIgnoredEdges ::
          Hs.Vector
            LndGrpc.EdgeLocator,
        queryRoutesRequestSourcePubKey :: Hs.Text,
        queryRoutesRequestUseMissionControl :: Hs.Bool,
        queryRoutesRequestIgnoredPairs ::
          Hs.Vector
            LndGrpc.NodePair,
        queryRoutesRequestCltvLimit :: Hs.Word32,
        queryRoutesRequestDestCustomRecords ::
          Hs.Map Hs.Word64
            Hs.ByteString,
        queryRoutesRequestOutgoingChanId :: Hs.Word64,
        queryRoutesRequestLastHopPubkey :: Hs.ByteString,
        queryRoutesRequestRouteHints ::
          Hs.Vector
            LndGrpc.RouteHint,
        queryRoutesRequestDestFeatures ::
          Hs.Vector
            (HsProtobuf.Enumerated LndGrpc.FeatureBit)
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named QueryRoutesRequest where
  nameOf _ = (Hs.fromString "QueryRoutesRequest")

instance HsProtobuf.HasDefault QueryRoutesRequest

instance HsProtobuf.Message QueryRoutesRequest where
  encodeMessage
    _
    QueryRoutesRequest
      { queryRoutesRequestPubKey =
          queryRoutesRequestPubKey,
        queryRoutesRequestAmt = queryRoutesRequestAmt,
        queryRoutesRequestAmtMsat = queryRoutesRequestAmtMsat,
        queryRoutesRequestFinalCltvDelta =
          queryRoutesRequestFinalCltvDelta,
        queryRoutesRequestFeeLimit = queryRoutesRequestFeeLimit,
        queryRoutesRequestIgnoredNodes = queryRoutesRequestIgnoredNodes,
        queryRoutesRequestIgnoredEdges = queryRoutesRequestIgnoredEdges,
        queryRoutesRequestSourcePubKey = queryRoutesRequestSourcePubKey,
        queryRoutesRequestUseMissionControl =
          queryRoutesRequestUseMissionControl,
        queryRoutesRequestIgnoredPairs = queryRoutesRequestIgnoredPairs,
        queryRoutesRequestCltvLimit = queryRoutesRequestCltvLimit,
        queryRoutesRequestDestCustomRecords =
          queryRoutesRequestDestCustomRecords,
        queryRoutesRequestOutgoingChanId =
          queryRoutesRequestOutgoingChanId,
        queryRoutesRequestLastHopPubkey = queryRoutesRequestLastHopPubkey,
        queryRoutesRequestRouteHints = queryRoutesRequestRouteHints,
        queryRoutesRequestDestFeatures = queryRoutesRequestDestFeatures
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                queryRoutesRequestPubKey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                queryRoutesRequestAmt
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 12)
                queryRoutesRequestAmtMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                queryRoutesRequestFinalCltvDelta
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                ( Hs.coerce @(Hs.Maybe LndGrpc.FeeLimit)
                    @(HsProtobuf.Nested LndGrpc.FeeLimit)
                    queryRoutesRequestFeeLimit
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                ( Hs.coerce @(Hs.Vector Hs.ByteString)
                    @(HsProtobuf.UnpackedVec Hs.ByteString)
                    queryRoutesRequestIgnoredNodes
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                ( Hs.coerce @(Hs.Vector LndGrpc.EdgeLocator)
                    @(HsProtobuf.NestedVec LndGrpc.EdgeLocator)
                    queryRoutesRequestIgnoredEdges
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                queryRoutesRequestSourcePubKey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                queryRoutesRequestUseMissionControl
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                ( Hs.coerce @(Hs.Vector LndGrpc.NodePair)
                    @(HsProtobuf.NestedVec LndGrpc.NodePair)
                    queryRoutesRequestIgnoredPairs
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                queryRoutesRequestCltvLimit
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 13)
                queryRoutesRequestDestCustomRecords
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 14)
                queryRoutesRequestOutgoingChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 15)
                queryRoutesRequestLastHopPubkey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 16)
                ( Hs.coerce @(Hs.Vector LndGrpc.RouteHint)
                    @(HsProtobuf.NestedVec LndGrpc.RouteHint)
                    queryRoutesRequestRouteHints
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 17)
                ( Hs.coerce @(Hs.Vector (HsProtobuf.Enumerated LndGrpc.FeatureBit))
                    @(HsProtobuf.PackedVec (HsProtobuf.Enumerated LndGrpc.FeatureBit))
                    queryRoutesRequestDestFeatures
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure QueryRoutesRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 12)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.FeeLimit))
              @(_ (Hs.Maybe LndGrpc.FeeLimit))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 5)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.ByteString))
              @(_ (Hs.Vector Hs.ByteString))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 6)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.EdgeLocator))
              @(_ (Hs.Vector LndGrpc.EdgeLocator))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 7)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.NodePair))
              @(_ (Hs.Vector LndGrpc.NodePair))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 10)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 11)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 13)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 14)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 15)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.RouteHint))
              @(_ (Hs.Vector LndGrpc.RouteHint))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 16)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.PackedVec (HsProtobuf.Enumerated LndGrpc.FeatureBit)))
              @(_ (Hs.Vector (HsProtobuf.Enumerated LndGrpc.FeatureBit)))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 17)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "pub_key")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amt")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 12)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amt_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "final_cltv_delta")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "FeeLimit")))
          (HsProtobuf.Single "fee_limit")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Repeated HsProtobuf.Bytes)
          (HsProtobuf.Single "ignored_nodes")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "EdgeLocator"))
          )
          (HsProtobuf.Single "ignored_edges")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "source_pub_key")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "use_mission_control")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "NodePair"))
          )
          (HsProtobuf.Single "ignored_pairs")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "cltv_limit")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 13)
          (HsProtobuf.Map HsProtobuf.UInt64 HsProtobuf.Bytes)
          (HsProtobuf.Single "dest_custom_records")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 14)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "outgoing_chan_id")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 15)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "last_hop_pubkey")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 16)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "RouteHint"))
          )
          (HsProtobuf.Single "route_hints")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 17)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "FeatureBit"))
          )
          (HsProtobuf.Single "dest_features")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB QueryRoutesRequest where
  toJSONPB
    ( QueryRoutesRequest
        f1
        f2
        f12
        f4
        f5
        f6
        f7
        f8
        f9
        f10
        f11
        f13
        f14
        f15
        f16
        f17
      ) =
      ( HsJSONPB.object
          [ "pub_key" .= f1,
            "amt" .= f2,
            "amt_msat" .= f12,
            "final_cltv_delta" .= f4,
            "fee_limit" .= f5,
            "ignored_nodes" .= f6,
            "ignored_edges" .= f7,
            "source_pub_key" .= f8,
            "use_mission_control" .= f9,
            "ignored_pairs" .= f10,
            "cltv_limit" .= f11,
            "dest_custom_records" .= f13,
            "outgoing_chan_id" .= f14,
            "last_hop_pubkey" .= f15,
            "route_hints" .= f16,
            "dest_features" .= f17
          ]
      )
  toEncodingPB
    ( QueryRoutesRequest
        f1
        f2
        f12
        f4
        f5
        f6
        f7
        f8
        f9
        f10
        f11
        f13
        f14
        f15
        f16
        f17
      ) =
      ( HsJSONPB.pairs
          [ "pub_key" .= f1,
            "amt" .= f2,
            "amt_msat" .= f12,
            "final_cltv_delta" .= f4,
            "fee_limit" .= f5,
            "ignored_nodes" .= f6,
            "ignored_edges" .= f7,
            "source_pub_key" .= f8,
            "use_mission_control" .= f9,
            "ignored_pairs" .= f10,
            "cltv_limit" .= f11,
            "dest_custom_records" .= f13,
            "outgoing_chan_id" .= f14,
            "last_hop_pubkey" .= f15,
            "route_hints" .= f16,
            "dest_features" .= f17
          ]
      )

instance HsJSONPB.FromJSONPB QueryRoutesRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "QueryRoutesRequest"
        ( \obj ->
            (Hs.pure QueryRoutesRequest) <*> obj .: "pub_key" <*> obj .: "amt"
              <*> obj .: "amt_msat"
              <*> obj .: "final_cltv_delta"
              <*> obj .: "fee_limit"
              <*> obj .: "ignored_nodes"
              <*> obj .: "ignored_edges"
              <*> obj .: "source_pub_key"
              <*> obj .: "use_mission_control"
              <*> obj .: "ignored_pairs"
              <*> obj .: "cltv_limit"
              <*> obj .: "dest_custom_records"
              <*> obj .: "outgoing_chan_id"
              <*> obj .: "last_hop_pubkey"
              <*> obj .: "route_hints"
              <*> obj .: "dest_features"
        )
    )

instance HsJSONPB.ToJSON QueryRoutesRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON QueryRoutesRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema QueryRoutesRequest where
  declareNamedSchema _ =
    do
      let declare_pub_key = HsJSONPB.declareSchemaRef
      queryRoutesRequestPubKey <- declare_pub_key Proxy.Proxy
      let declare_amt = HsJSONPB.declareSchemaRef
      queryRoutesRequestAmt <- declare_amt Proxy.Proxy
      let declare_amt_msat = HsJSONPB.declareSchemaRef
      queryRoutesRequestAmtMsat <- declare_amt_msat Proxy.Proxy
      let declare_final_cltv_delta = HsJSONPB.declareSchemaRef
      queryRoutesRequestFinalCltvDelta <-
        declare_final_cltv_delta
          Proxy.Proxy
      let declare_fee_limit = HsJSONPB.declareSchemaRef
      queryRoutesRequestFeeLimit <- declare_fee_limit Proxy.Proxy
      let declare_ignored_nodes = HsJSONPB.declareSchemaRef
      queryRoutesRequestIgnoredNodes <- declare_ignored_nodes Proxy.Proxy
      let declare_ignored_edges = HsJSONPB.declareSchemaRef
      queryRoutesRequestIgnoredEdges <- declare_ignored_edges Proxy.Proxy
      let declare_source_pub_key = HsJSONPB.declareSchemaRef
      queryRoutesRequestSourcePubKey <-
        declare_source_pub_key
          Proxy.Proxy
      let declare_use_mission_control = HsJSONPB.declareSchemaRef
      queryRoutesRequestUseMissionControl <-
        declare_use_mission_control
          Proxy.Proxy
      let declare_ignored_pairs = HsJSONPB.declareSchemaRef
      queryRoutesRequestIgnoredPairs <- declare_ignored_pairs Proxy.Proxy
      let declare_cltv_limit = HsJSONPB.declareSchemaRef
      queryRoutesRequestCltvLimit <- declare_cltv_limit Proxy.Proxy
      let declare_dest_custom_records = HsJSONPB.declareSchemaRef
      queryRoutesRequestDestCustomRecords <-
        declare_dest_custom_records
          Proxy.Proxy
      let declare_outgoing_chan_id = HsJSONPB.declareSchemaRef
      queryRoutesRequestOutgoingChanId <-
        declare_outgoing_chan_id
          Proxy.Proxy
      let declare_last_hop_pubkey = HsJSONPB.declareSchemaRef
      queryRoutesRequestLastHopPubkey <-
        declare_last_hop_pubkey
          Proxy.Proxy
      let declare_route_hints = HsJSONPB.declareSchemaRef
      queryRoutesRequestRouteHints <- declare_route_hints Proxy.Proxy
      let declare_dest_features = HsJSONPB.declareSchemaRef
      queryRoutesRequestDestFeatures <- declare_dest_features Proxy.Proxy
      let _ =
            Hs.pure QueryRoutesRequest
              <*> HsJSONPB.asProxy declare_pub_key
              <*> HsJSONPB.asProxy declare_amt
              <*> HsJSONPB.asProxy declare_amt_msat
              <*> HsJSONPB.asProxy declare_final_cltv_delta
              <*> HsJSONPB.asProxy declare_fee_limit
              <*> HsJSONPB.asProxy declare_ignored_nodes
              <*> HsJSONPB.asProxy declare_ignored_edges
              <*> HsJSONPB.asProxy declare_source_pub_key
              <*> HsJSONPB.asProxy declare_use_mission_control
              <*> HsJSONPB.asProxy declare_ignored_pairs
              <*> HsJSONPB.asProxy declare_cltv_limit
              <*> HsJSONPB.asProxy declare_dest_custom_records
              <*> HsJSONPB.asProxy declare_outgoing_chan_id
              <*> HsJSONPB.asProxy declare_last_hop_pubkey
              <*> HsJSONPB.asProxy declare_route_hints
              <*> HsJSONPB.asProxy declare_dest_features
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "QueryRoutesRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("pub_key", queryRoutesRequestPubKey),
                          ("amt", queryRoutesRequestAmt),
                          ("amt_msat", queryRoutesRequestAmtMsat),
                          ( "final_cltv_delta",
                            queryRoutesRequestFinalCltvDelta
                          ),
                          ("fee_limit", queryRoutesRequestFeeLimit),
                          ( "ignored_nodes",
                            queryRoutesRequestIgnoredNodes
                          ),
                          ( "ignored_edges",
                            queryRoutesRequestIgnoredEdges
                          ),
                          ( "source_pub_key",
                            queryRoutesRequestSourcePubKey
                          ),
                          ( "use_mission_control",
                            queryRoutesRequestUseMissionControl
                          ),
                          ( "ignored_pairs",
                            queryRoutesRequestIgnoredPairs
                          ),
                          ("cltv_limit", queryRoutesRequestCltvLimit),
                          ( "dest_custom_records",
                            queryRoutesRequestDestCustomRecords
                          ),
                          ( "outgoing_chan_id",
                            queryRoutesRequestOutgoingChanId
                          ),
                          ( "last_hop_pubkey",
                            queryRoutesRequestLastHopPubkey
                          ),
                          ( "route_hints",
                            queryRoutesRequestRouteHints
                          ),
                          ( "dest_features",
                            queryRoutesRequestDestFeatures
                          )
                        ]
                  }
            }
        )

data NodePair
  = NodePair
      { nodePairFrom :: Hs.ByteString,
        nodePairTo :: Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named NodePair where
  nameOf _ = (Hs.fromString "NodePair")

instance HsProtobuf.HasDefault NodePair

instance HsProtobuf.Message NodePair where
  encodeMessage
    _
    NodePair {nodePairFrom = nodePairFrom, nodePairTo = nodePairTo} =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                nodePairFrom
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                nodePairTo
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure NodePair)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "from")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "to")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB NodePair where
  toJSONPB (NodePair f1 f2) =
    (HsJSONPB.object ["from" .= f1, "to" .= f2])
  toEncodingPB (NodePair f1 f2) =
    (HsJSONPB.pairs ["from" .= f1, "to" .= f2])

instance HsJSONPB.FromJSONPB NodePair where
  parseJSONPB =
    ( HsJSONPB.withObject
        "NodePair"
        (\obj -> (Hs.pure NodePair) <*> obj .: "from" <*> obj .: "to")
    )

instance HsJSONPB.ToJSON NodePair where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON NodePair where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema NodePair where
  declareNamedSchema _ =
    do
      let declare_from = HsJSONPB.declareSchemaRef
      nodePairFrom <- declare_from Proxy.Proxy
      let declare_to = HsJSONPB.declareSchemaRef
      nodePairTo <- declare_to Proxy.Proxy
      let _ =
            Hs.pure NodePair <*> HsJSONPB.asProxy declare_from
              <*> HsJSONPB.asProxy declare_to
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "NodePair",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("from", nodePairFrom),
                          ("to", nodePairTo)
                        ]
                  }
            }
        )

data EdgeLocator
  = EdgeLocator
      { edgeLocatorChannelId :: Hs.Word64,
        edgeLocatorDirectionReverse :: Hs.Bool
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named EdgeLocator where
  nameOf _ = (Hs.fromString "EdgeLocator")

instance HsProtobuf.HasDefault EdgeLocator

instance HsProtobuf.Message EdgeLocator where
  encodeMessage
    _
    EdgeLocator
      { edgeLocatorChannelId = edgeLocatorChannelId,
        edgeLocatorDirectionReverse = edgeLocatorDirectionReverse
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                edgeLocatorChannelId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                edgeLocatorDirectionReverse
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure EdgeLocator)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "channel_id")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "direction_reverse")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB EdgeLocator where
  toJSONPB (EdgeLocator f1 f2) =
    (HsJSONPB.object ["channel_id" .= f1, "direction_reverse" .= f2])
  toEncodingPB (EdgeLocator f1 f2) =
    (HsJSONPB.pairs ["channel_id" .= f1, "direction_reverse" .= f2])

instance HsJSONPB.FromJSONPB EdgeLocator where
  parseJSONPB =
    ( HsJSONPB.withObject
        "EdgeLocator"
        ( \obj ->
            (Hs.pure EdgeLocator) <*> obj .: "channel_id"
              <*> obj .: "direction_reverse"
        )
    )

instance HsJSONPB.ToJSON EdgeLocator where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON EdgeLocator where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema EdgeLocator where
  declareNamedSchema _ =
    do
      let declare_channel_id = HsJSONPB.declareSchemaRef
      edgeLocatorChannelId <- declare_channel_id Proxy.Proxy
      let declare_direction_reverse = HsJSONPB.declareSchemaRef
      edgeLocatorDirectionReverse <-
        declare_direction_reverse
          Proxy.Proxy
      let _ =
            Hs.pure EdgeLocator <*> HsJSONPB.asProxy declare_channel_id
              <*> HsJSONPB.asProxy declare_direction_reverse
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "EdgeLocator",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("channel_id", edgeLocatorChannelId),
                          ( "direction_reverse",
                            edgeLocatorDirectionReverse
                          )
                        ]
                  }
            }
        )

data QueryRoutesResponse
  = QueryRoutesResponse
      { queryRoutesResponseRoutes ::
          Hs.Vector
            LndGrpc.Route,
        queryRoutesResponseSuccessProb :: Hs.Double
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named QueryRoutesResponse where
  nameOf _ = (Hs.fromString "QueryRoutesResponse")

instance HsProtobuf.HasDefault QueryRoutesResponse

instance HsProtobuf.Message QueryRoutesResponse where
  encodeMessage
    _
    QueryRoutesResponse
      { queryRoutesResponseRoutes =
          queryRoutesResponseRoutes,
        queryRoutesResponseSuccessProb = queryRoutesResponseSuccessProb
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector LndGrpc.Route)
                    @(HsProtobuf.NestedVec LndGrpc.Route)
                    queryRoutesResponseRoutes
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                queryRoutesResponseSuccessProb
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure QueryRoutesResponse)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.Route))
              @(_ (Hs.Vector LndGrpc.Route))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "Route"))
          )
          (HsProtobuf.Single "routes")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Double)
          (HsProtobuf.Single "success_prob")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB QueryRoutesResponse where
  toJSONPB (QueryRoutesResponse f1 f2) =
    (HsJSONPB.object ["routes" .= f1, "success_prob" .= f2])
  toEncodingPB (QueryRoutesResponse f1 f2) =
    (HsJSONPB.pairs ["routes" .= f1, "success_prob" .= f2])

instance HsJSONPB.FromJSONPB QueryRoutesResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "QueryRoutesResponse"
        ( \obj ->
            (Hs.pure QueryRoutesResponse) <*> obj .: "routes"
              <*> obj .: "success_prob"
        )
    )

instance HsJSONPB.ToJSON QueryRoutesResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON QueryRoutesResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema QueryRoutesResponse where
  declareNamedSchema _ =
    do
      let declare_routes = HsJSONPB.declareSchemaRef
      queryRoutesResponseRoutes <- declare_routes Proxy.Proxy
      let declare_success_prob = HsJSONPB.declareSchemaRef
      queryRoutesResponseSuccessProb <- declare_success_prob Proxy.Proxy
      let _ =
            Hs.pure QueryRoutesResponse
              <*> HsJSONPB.asProxy declare_routes
              <*> HsJSONPB.asProxy declare_success_prob
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "QueryRoutesResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("routes", queryRoutesResponseRoutes),
                          ( "success_prob",
                            queryRoutesResponseSuccessProb
                          )
                        ]
                  }
            }
        )

data Hop
  = Hop
      { hopChanId :: Hs.Word64,
        hopChanCapacity :: Hs.Int64,
        hopAmtToForward :: Hs.Int64,
        hopFee :: Hs.Int64,
        hopExpiry :: Hs.Word32,
        hopAmtToForwardMsat :: Hs.Int64,
        hopFeeMsat :: Hs.Int64,
        hopPubKey :: Hs.Text,
        hopTlvPayload :: Hs.Bool,
        hopMppRecord :: Hs.Maybe LndGrpc.MPPRecord,
        hopCustomRecords :: Hs.Map Hs.Word64 Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Hop where
  nameOf _ = (Hs.fromString "Hop")

instance HsProtobuf.HasDefault Hop

instance HsProtobuf.Message Hop where
  encodeMessage
    _
    Hop
      { hopChanId = hopChanId,
        hopChanCapacity = hopChanCapacity,
        hopAmtToForward = hopAmtToForward,
        hopFee = hopFee,
        hopExpiry = hopExpiry,
        hopAmtToForwardMsat = hopAmtToForwardMsat,
        hopFeeMsat = hopFeeMsat,
        hopPubKey = hopPubKey,
        hopTlvPayload = hopTlvPayload,
        hopMppRecord = hopMppRecord,
        hopCustomRecords = hopCustomRecords
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                hopChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                hopChanCapacity
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                hopAmtToForward
            ),
            (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4) hopFee),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                hopExpiry
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                hopAmtToForwardMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                hopFeeMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                hopPubKey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                hopTlvPayload
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                ( Hs.coerce @(Hs.Maybe LndGrpc.MPPRecord)
                    @(HsProtobuf.Nested LndGrpc.MPPRecord)
                    hopMppRecord
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                hopCustomRecords
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure Hop)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.MPPRecord))
              @(_ (Hs.Maybe LndGrpc.MPPRecord))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 10)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 11)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "chan_id")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "chan_capacity")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amt_to_forward")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "fee")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "expiry")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amt_to_forward_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "fee_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "pub_key")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "tlv_payload")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "MPPRecord"))
          )
          (HsProtobuf.Single "mpp_record")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          (HsProtobuf.Map HsProtobuf.UInt64 HsProtobuf.Bytes)
          (HsProtobuf.Single "custom_records")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB Hop where
  toJSONPB (Hop f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11) =
    ( HsJSONPB.object
        [ "chan_id" .= f1,
          "chan_capacity" .= f2,
          "amt_to_forward" .= f3,
          "fee" .= f4,
          "expiry" .= f5,
          "amt_to_forward_msat" .= f6,
          "fee_msat" .= f7,
          "pub_key" .= f8,
          "tlv_payload" .= f9,
          "mpp_record" .= f10,
          "custom_records" .= f11
        ]
    )
  toEncodingPB (Hop f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11) =
    ( HsJSONPB.pairs
        [ "chan_id" .= f1,
          "chan_capacity" .= f2,
          "amt_to_forward" .= f3,
          "fee" .= f4,
          "expiry" .= f5,
          "amt_to_forward_msat" .= f6,
          "fee_msat" .= f7,
          "pub_key" .= f8,
          "tlv_payload" .= f9,
          "mpp_record" .= f10,
          "custom_records" .= f11
        ]
    )

instance HsJSONPB.FromJSONPB Hop where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Hop"
        ( \obj ->
            (Hs.pure Hop) <*> obj .: "chan_id" <*> obj .: "chan_capacity"
              <*> obj .: "amt_to_forward"
              <*> obj .: "fee"
              <*> obj .: "expiry"
              <*> obj .: "amt_to_forward_msat"
              <*> obj .: "fee_msat"
              <*> obj .: "pub_key"
              <*> obj .: "tlv_payload"
              <*> obj .: "mpp_record"
              <*> obj .: "custom_records"
        )
    )

instance HsJSONPB.ToJSON Hop where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Hop where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema Hop where
  declareNamedSchema _ =
    do
      let declare_chan_id = HsJSONPB.declareSchemaRef
      hopChanId <- declare_chan_id Proxy.Proxy
      let declare_chan_capacity = HsJSONPB.declareSchemaRef
      hopChanCapacity <- declare_chan_capacity Proxy.Proxy
      let declare_amt_to_forward = HsJSONPB.declareSchemaRef
      hopAmtToForward <- declare_amt_to_forward Proxy.Proxy
      let declare_fee = HsJSONPB.declareSchemaRef
      hopFee <- declare_fee Proxy.Proxy
      let declare_expiry = HsJSONPB.declareSchemaRef
      hopExpiry <- declare_expiry Proxy.Proxy
      let declare_amt_to_forward_msat = HsJSONPB.declareSchemaRef
      hopAmtToForwardMsat <- declare_amt_to_forward_msat Proxy.Proxy
      let declare_fee_msat = HsJSONPB.declareSchemaRef
      hopFeeMsat <- declare_fee_msat Proxy.Proxy
      let declare_pub_key = HsJSONPB.declareSchemaRef
      hopPubKey <- declare_pub_key Proxy.Proxy
      let declare_tlv_payload = HsJSONPB.declareSchemaRef
      hopTlvPayload <- declare_tlv_payload Proxy.Proxy
      let declare_mpp_record = HsJSONPB.declareSchemaRef
      hopMppRecord <- declare_mpp_record Proxy.Proxy
      let declare_custom_records = HsJSONPB.declareSchemaRef
      hopCustomRecords <- declare_custom_records Proxy.Proxy
      let _ =
            Hs.pure Hop <*> HsJSONPB.asProxy declare_chan_id
              <*> HsJSONPB.asProxy declare_chan_capacity
              <*> HsJSONPB.asProxy declare_amt_to_forward
              <*> HsJSONPB.asProxy declare_fee
              <*> HsJSONPB.asProxy declare_expiry
              <*> HsJSONPB.asProxy declare_amt_to_forward_msat
              <*> HsJSONPB.asProxy declare_fee_msat
              <*> HsJSONPB.asProxy declare_pub_key
              <*> HsJSONPB.asProxy declare_tlv_payload
              <*> HsJSONPB.asProxy declare_mpp_record
              <*> HsJSONPB.asProxy declare_custom_records
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName = Hs.Just "Hop",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("chan_id", hopChanId),
                          ("chan_capacity", hopChanCapacity),
                          ("amt_to_forward", hopAmtToForward),
                          ("fee", hopFee),
                          ("expiry", hopExpiry),
                          ( "amt_to_forward_msat",
                            hopAmtToForwardMsat
                          ),
                          ("fee_msat", hopFeeMsat),
                          ("pub_key", hopPubKey),
                          ("tlv_payload", hopTlvPayload),
                          ("mpp_record", hopMppRecord),
                          ("custom_records", hopCustomRecords)
                        ]
                  }
            }
        )

data MPPRecord
  = MPPRecord
      { mpprecordPaymentAddr :: Hs.ByteString,
        mpprecordTotalAmtMsat :: Hs.Int64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named MPPRecord where
  nameOf _ = (Hs.fromString "MPPRecord")

instance HsProtobuf.HasDefault MPPRecord

instance HsProtobuf.Message MPPRecord where
  encodeMessage
    _
    MPPRecord
      { mpprecordPaymentAddr = mpprecordPaymentAddr,
        mpprecordTotalAmtMsat = mpprecordTotalAmtMsat
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                mpprecordPaymentAddr
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                mpprecordTotalAmtMsat
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure MPPRecord)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 11)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 10)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "payment_addr")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "total_amt_msat")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB MPPRecord where
  toJSONPB (MPPRecord f11 f10) =
    ( HsJSONPB.object
        ["payment_addr" .= f11, "total_amt_msat" .= f10]
    )
  toEncodingPB (MPPRecord f11 f10) =
    (HsJSONPB.pairs ["payment_addr" .= f11, "total_amt_msat" .= f10])

instance HsJSONPB.FromJSONPB MPPRecord where
  parseJSONPB =
    ( HsJSONPB.withObject
        "MPPRecord"
        ( \obj ->
            (Hs.pure MPPRecord) <*> obj .: "payment_addr"
              <*> obj .: "total_amt_msat"
        )
    )

instance HsJSONPB.ToJSON MPPRecord where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON MPPRecord where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema MPPRecord where
  declareNamedSchema _ =
    do
      let declare_payment_addr = HsJSONPB.declareSchemaRef
      mpprecordPaymentAddr <- declare_payment_addr Proxy.Proxy
      let declare_total_amt_msat = HsJSONPB.declareSchemaRef
      mpprecordTotalAmtMsat <- declare_total_amt_msat Proxy.Proxy
      let _ =
            Hs.pure MPPRecord <*> HsJSONPB.asProxy declare_payment_addr
              <*> HsJSONPB.asProxy declare_total_amt_msat
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "MPPRecord",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("payment_addr", mpprecordPaymentAddr),
                          ( "total_amt_msat",
                            mpprecordTotalAmtMsat
                          )
                        ]
                  }
            }
        )

data Route
  = Route
      { routeTotalTimeLock :: Hs.Word32,
        routeTotalFees :: Hs.Int64,
        routeTotalAmt :: Hs.Int64,
        routeHops :: Hs.Vector LndGrpc.Hop,
        routeTotalFeesMsat :: Hs.Int64,
        routeTotalAmtMsat :: Hs.Int64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Route where
  nameOf _ = (Hs.fromString "Route")

instance HsProtobuf.HasDefault Route

instance HsProtobuf.Message Route where
  encodeMessage
    _
    Route
      { routeTotalTimeLock = routeTotalTimeLock,
        routeTotalFees = routeTotalFees,
        routeTotalAmt = routeTotalAmt,
        routeHops = routeHops,
        routeTotalFeesMsat = routeTotalFeesMsat,
        routeTotalAmtMsat = routeTotalAmtMsat
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                routeTotalTimeLock
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                routeTotalFees
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                routeTotalAmt
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                ( Hs.coerce @(Hs.Vector LndGrpc.Hop)
                    @(HsProtobuf.NestedVec LndGrpc.Hop)
                    routeHops
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                routeTotalFeesMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                routeTotalAmtMsat
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure Route)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.Hop))
              @(_ (Hs.Vector LndGrpc.Hop))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "total_time_lock")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "total_fees")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "total_amt")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Repeated (HsProtobuf.Named (HsProtobuf.Single "Hop")))
          (HsProtobuf.Single "hops")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "total_fees_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "total_amt_msat")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB Route where
  toJSONPB (Route f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.object
        [ "total_time_lock" .= f1,
          "total_fees" .= f2,
          "total_amt" .= f3,
          "hops" .= f4,
          "total_fees_msat" .= f5,
          "total_amt_msat" .= f6
        ]
    )
  toEncodingPB (Route f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.pairs
        [ "total_time_lock" .= f1,
          "total_fees" .= f2,
          "total_amt" .= f3,
          "hops" .= f4,
          "total_fees_msat" .= f5,
          "total_amt_msat" .= f6
        ]
    )

instance HsJSONPB.FromJSONPB Route where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Route"
        ( \obj ->
            (Hs.pure Route) <*> obj .: "total_time_lock"
              <*> obj .: "total_fees"
              <*> obj .: "total_amt"
              <*> obj .: "hops"
              <*> obj .: "total_fees_msat"
              <*> obj .: "total_amt_msat"
        )
    )

instance HsJSONPB.ToJSON Route where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Route where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema Route where
  declareNamedSchema _ =
    do
      let declare_total_time_lock = HsJSONPB.declareSchemaRef
      routeTotalTimeLock <- declare_total_time_lock Proxy.Proxy
      let declare_total_fees = HsJSONPB.declareSchemaRef
      routeTotalFees <- declare_total_fees Proxy.Proxy
      let declare_total_amt = HsJSONPB.declareSchemaRef
      routeTotalAmt <- declare_total_amt Proxy.Proxy
      let declare_hops = HsJSONPB.declareSchemaRef
      routeHops <- declare_hops Proxy.Proxy
      let declare_total_fees_msat = HsJSONPB.declareSchemaRef
      routeTotalFeesMsat <- declare_total_fees_msat Proxy.Proxy
      let declare_total_amt_msat = HsJSONPB.declareSchemaRef
      routeTotalAmtMsat <- declare_total_amt_msat Proxy.Proxy
      let _ =
            Hs.pure Route <*> HsJSONPB.asProxy declare_total_time_lock
              <*> HsJSONPB.asProxy declare_total_fees
              <*> HsJSONPB.asProxy declare_total_amt
              <*> HsJSONPB.asProxy declare_hops
              <*> HsJSONPB.asProxy declare_total_fees_msat
              <*> HsJSONPB.asProxy declare_total_amt_msat
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName = Hs.Just "Route",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("total_time_lock", routeTotalTimeLock),
                          ("total_fees", routeTotalFees),
                          ("total_amt", routeTotalAmt),
                          ("hops", routeHops),
                          ("total_fees_msat", routeTotalFeesMsat),
                          ("total_amt_msat", routeTotalAmtMsat)
                        ]
                  }
            }
        )

data NodeInfoRequest
  = NodeInfoRequest
      { nodeInfoRequestPubKey ::
          Hs.Text,
        nodeInfoRequestIncludeChannels :: Hs.Bool
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named NodeInfoRequest where
  nameOf _ = (Hs.fromString "NodeInfoRequest")

instance HsProtobuf.HasDefault NodeInfoRequest

instance HsProtobuf.Message NodeInfoRequest where
  encodeMessage
    _
    NodeInfoRequest
      { nodeInfoRequestPubKey = nodeInfoRequestPubKey,
        nodeInfoRequestIncludeChannels = nodeInfoRequestIncludeChannels
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                nodeInfoRequestPubKey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                nodeInfoRequestIncludeChannels
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure NodeInfoRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "pub_key")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "include_channels")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB NodeInfoRequest where
  toJSONPB (NodeInfoRequest f1 f2) =
    (HsJSONPB.object ["pub_key" .= f1, "include_channels" .= f2])
  toEncodingPB (NodeInfoRequest f1 f2) =
    (HsJSONPB.pairs ["pub_key" .= f1, "include_channels" .= f2])

instance HsJSONPB.FromJSONPB NodeInfoRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "NodeInfoRequest"
        ( \obj ->
            (Hs.pure NodeInfoRequest) <*> obj .: "pub_key"
              <*> obj .: "include_channels"
        )
    )

instance HsJSONPB.ToJSON NodeInfoRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON NodeInfoRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema NodeInfoRequest where
  declareNamedSchema _ =
    do
      let declare_pub_key = HsJSONPB.declareSchemaRef
      nodeInfoRequestPubKey <- declare_pub_key Proxy.Proxy
      let declare_include_channels = HsJSONPB.declareSchemaRef
      nodeInfoRequestIncludeChannels <-
        declare_include_channels
          Proxy.Proxy
      let _ =
            Hs.pure NodeInfoRequest
              <*> HsJSONPB.asProxy declare_pub_key
              <*> HsJSONPB.asProxy declare_include_channels
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "NodeInfoRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("pub_key", nodeInfoRequestPubKey),
                          ( "include_channels",
                            nodeInfoRequestIncludeChannels
                          )
                        ]
                  }
            }
        )

data NodeInfo
  = NodeInfo
      { nodeInfoNode ::
          Hs.Maybe
            LndGrpc.LightningNode,
        nodeInfoNumChannels :: Hs.Word32,
        nodeInfoTotalCapacity :: Hs.Int64,
        nodeInfoChannels :: Hs.Vector LndGrpc.ChannelEdge
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named NodeInfo where
  nameOf _ = (Hs.fromString "NodeInfo")

instance HsProtobuf.HasDefault NodeInfo

instance HsProtobuf.Message NodeInfo where
  encodeMessage
    _
    NodeInfo
      { nodeInfoNode = nodeInfoNode,
        nodeInfoNumChannels = nodeInfoNumChannels,
        nodeInfoTotalCapacity = nodeInfoTotalCapacity,
        nodeInfoChannels = nodeInfoChannels
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Maybe LndGrpc.LightningNode)
                    @(HsProtobuf.Nested LndGrpc.LightningNode)
                    nodeInfoNode
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                nodeInfoNumChannels
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                nodeInfoTotalCapacity
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                ( Hs.coerce @(Hs.Vector LndGrpc.ChannelEdge)
                    @(HsProtobuf.NestedVec LndGrpc.ChannelEdge)
                    nodeInfoChannels
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure NodeInfo)
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.LightningNode))
              @(_ (Hs.Maybe LndGrpc.LightningNode))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.ChannelEdge))
              @(_ (Hs.Vector LndGrpc.ChannelEdge))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "LightningNode"))
          )
          (HsProtobuf.Single "node")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "num_channels")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "total_capacity")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "ChannelEdge"))
          )
          (HsProtobuf.Single "channels")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB NodeInfo where
  toJSONPB (NodeInfo f1 f2 f3 f4) =
    ( HsJSONPB.object
        [ "node" .= f1,
          "num_channels" .= f2,
          "total_capacity" .= f3,
          "channels" .= f4
        ]
    )
  toEncodingPB (NodeInfo f1 f2 f3 f4) =
    ( HsJSONPB.pairs
        [ "node" .= f1,
          "num_channels" .= f2,
          "total_capacity" .= f3,
          "channels" .= f4
        ]
    )

instance HsJSONPB.FromJSONPB NodeInfo where
  parseJSONPB =
    ( HsJSONPB.withObject
        "NodeInfo"
        ( \obj ->
            (Hs.pure NodeInfo) <*> obj .: "node" <*> obj .: "num_channels"
              <*> obj
              .: "total_capacity"
              <*> obj
              .: "channels"
        )
    )

instance HsJSONPB.ToJSON NodeInfo where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON NodeInfo where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema NodeInfo where
  declareNamedSchema _ =
    do
      let declare_node = HsJSONPB.declareSchemaRef
      nodeInfoNode <- declare_node Proxy.Proxy
      let declare_num_channels = HsJSONPB.declareSchemaRef
      nodeInfoNumChannels <- declare_num_channels Proxy.Proxy
      let declare_total_capacity = HsJSONPB.declareSchemaRef
      nodeInfoTotalCapacity <- declare_total_capacity Proxy.Proxy
      let declare_channels = HsJSONPB.declareSchemaRef
      nodeInfoChannels <- declare_channels Proxy.Proxy
      let _ =
            Hs.pure NodeInfo <*> HsJSONPB.asProxy declare_node
              <*> HsJSONPB.asProxy declare_num_channels
              <*> HsJSONPB.asProxy declare_total_capacity
              <*> HsJSONPB.asProxy declare_channels
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "NodeInfo",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("node", nodeInfoNode),
                          ("num_channels", nodeInfoNumChannels),
                          ("total_capacity", nodeInfoTotalCapacity),
                          ("channels", nodeInfoChannels)
                        ]
                  }
            }
        )

data LightningNode
  = LightningNode
      { lightningNodeLastUpdate ::
          Hs.Word32,
        lightningNodePubKey :: Hs.Text,
        lightningNodeAlias :: Hs.Text,
        lightningNodeAddresses :: Hs.Vector LndGrpc.NodeAddress,
        lightningNodeColor :: Hs.Text,
        lightningNodeFeatures ::
          Hs.Map Hs.Word32
            (Hs.Maybe LndGrpc.Feature)
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named LightningNode where
  nameOf _ = (Hs.fromString "LightningNode")

instance HsProtobuf.HasDefault LightningNode

instance HsProtobuf.Message LightningNode where
  encodeMessage
    _
    LightningNode
      { lightningNodeLastUpdate = lightningNodeLastUpdate,
        lightningNodePubKey = lightningNodePubKey,
        lightningNodeAlias = lightningNodeAlias,
        lightningNodeAddresses = lightningNodeAddresses,
        lightningNodeColor = lightningNodeColor,
        lightningNodeFeatures = lightningNodeFeatures
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                lightningNodeLastUpdate
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                lightningNodePubKey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                lightningNodeAlias
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                ( Hs.coerce @(Hs.Vector LndGrpc.NodeAddress)
                    @(HsProtobuf.NestedVec LndGrpc.NodeAddress)
                    lightningNodeAddresses
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                lightningNodeColor
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                ( Hs.unsafeCoerce @(Hs.Map Hs.Word32 (Hs.Maybe LndGrpc.Feature))
                    @(Hs.Map Hs.Word32 (HsProtobuf.Nested LndGrpc.Feature))
                    lightningNodeFeatures
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure LightningNode)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.NodeAddress))
              @(_ (Hs.Vector LndGrpc.NodeAddress))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( Hs.unsafeCoerce
              @(_ (Hs.Map Hs.Word32 (HsProtobuf.Nested LndGrpc.Feature)))
              @(_ (Hs.Map Hs.Word32 (Hs.Maybe LndGrpc.Feature)))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 6)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "last_update")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "pub_key")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "alias")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "NodeAddress"))
          )
          (HsProtobuf.Single "addresses")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "color")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          ( HsProtobuf.Map
              HsProtobuf.UInt32
              (HsProtobuf.Named (HsProtobuf.Single "Feature"))
          )
          (HsProtobuf.Single "features")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB LightningNode where
  toJSONPB (LightningNode f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.object
        [ "last_update" .= f1,
          "pub_key" .= f2,
          "alias" .= f3,
          "addresses" .= f4,
          "color" .= f5,
          "features" .= f6
        ]
    )
  toEncodingPB (LightningNode f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.pairs
        [ "last_update" .= f1,
          "pub_key" .= f2,
          "alias" .= f3,
          "addresses" .= f4,
          "color" .= f5,
          "features" .= f6
        ]
    )

instance HsJSONPB.FromJSONPB LightningNode where
  parseJSONPB =
    ( HsJSONPB.withObject
        "LightningNode"
        ( \obj ->
            (Hs.pure LightningNode) <*> obj .: "last_update"
              <*> obj .: "pub_key"
              <*> obj .: "alias"
              <*> obj .: "addresses"
              <*> obj .: "color"
              <*> obj .: "features"
        )
    )

instance HsJSONPB.ToJSON LightningNode where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON LightningNode where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema LightningNode where
  declareNamedSchema _ =
    do
      let declare_last_update = HsJSONPB.declareSchemaRef
      lightningNodeLastUpdate <- declare_last_update Proxy.Proxy
      let declare_pub_key = HsJSONPB.declareSchemaRef
      lightningNodePubKey <- declare_pub_key Proxy.Proxy
      let declare_alias = HsJSONPB.declareSchemaRef
      lightningNodeAlias <- declare_alias Proxy.Proxy
      let declare_addresses = HsJSONPB.declareSchemaRef
      lightningNodeAddresses <- declare_addresses Proxy.Proxy
      let declare_color = HsJSONPB.declareSchemaRef
      lightningNodeColor <- declare_color Proxy.Proxy
      let declare_features = HsJSONPB.declareSchemaRef
      lightningNodeFeatures <- declare_features Proxy.Proxy
      let _ =
            Hs.pure LightningNode
              <*> HsJSONPB.asProxy declare_last_update
              <*> HsJSONPB.asProxy declare_pub_key
              <*> HsJSONPB.asProxy declare_alias
              <*> HsJSONPB.asProxy declare_addresses
              <*> HsJSONPB.asProxy declare_color
              <*> HsJSONPB.asProxy declare_features
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "LightningNode",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("last_update", lightningNodeLastUpdate),
                          ("pub_key", lightningNodePubKey),
                          ("alias", lightningNodeAlias),
                          ("addresses", lightningNodeAddresses),
                          ("color", lightningNodeColor),
                          ("features", lightningNodeFeatures)
                        ]
                  }
            }
        )

data NodeAddress
  = NodeAddress
      { nodeAddressNetwork :: Hs.Text,
        nodeAddressAddr :: Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named NodeAddress where
  nameOf _ = (Hs.fromString "NodeAddress")

instance HsProtobuf.HasDefault NodeAddress

instance HsProtobuf.Message NodeAddress where
  encodeMessage
    _
    NodeAddress
      { nodeAddressNetwork = nodeAddressNetwork,
        nodeAddressAddr = nodeAddressAddr
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                nodeAddressNetwork
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                nodeAddressAddr
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure NodeAddress)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "network")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "addr")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB NodeAddress where
  toJSONPB (NodeAddress f1 f2) =
    (HsJSONPB.object ["network" .= f1, "addr" .= f2])
  toEncodingPB (NodeAddress f1 f2) =
    (HsJSONPB.pairs ["network" .= f1, "addr" .= f2])

instance HsJSONPB.FromJSONPB NodeAddress where
  parseJSONPB =
    ( HsJSONPB.withObject
        "NodeAddress"
        ( \obj ->
            (Hs.pure NodeAddress) <*> obj .: "network" <*> obj .: "addr"
        )
    )

instance HsJSONPB.ToJSON NodeAddress where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON NodeAddress where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema NodeAddress where
  declareNamedSchema _ =
    do
      let declare_network = HsJSONPB.declareSchemaRef
      nodeAddressNetwork <- declare_network Proxy.Proxy
      let declare_addr = HsJSONPB.declareSchemaRef
      nodeAddressAddr <- declare_addr Proxy.Proxy
      let _ =
            Hs.pure NodeAddress <*> HsJSONPB.asProxy declare_network
              <*> HsJSONPB.asProxy declare_addr
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "NodeAddress",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("network", nodeAddressNetwork),
                          ("addr", nodeAddressAddr)
                        ]
                  }
            }
        )

data RoutingPolicy
  = RoutingPolicy
      { routingPolicyTimeLockDelta ::
          Hs.Word32,
        routingPolicyMinHtlc :: Hs.Int64,
        routingPolicyFeeBaseMsat :: Hs.Int64,
        routingPolicyFeeRateMilliMsat :: Hs.Int64,
        routingPolicyDisabled :: Hs.Bool,
        routingPolicyMaxHtlcMsat :: Hs.Word64,
        routingPolicyLastUpdate :: Hs.Word32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named RoutingPolicy where
  nameOf _ = (Hs.fromString "RoutingPolicy")

instance HsProtobuf.HasDefault RoutingPolicy

instance HsProtobuf.Message RoutingPolicy where
  encodeMessage
    _
    RoutingPolicy
      { routingPolicyTimeLockDelta =
          routingPolicyTimeLockDelta,
        routingPolicyMinHtlc = routingPolicyMinHtlc,
        routingPolicyFeeBaseMsat = routingPolicyFeeBaseMsat,
        routingPolicyFeeRateMilliMsat = routingPolicyFeeRateMilliMsat,
        routingPolicyDisabled = routingPolicyDisabled,
        routingPolicyMaxHtlcMsat = routingPolicyMaxHtlcMsat,
        routingPolicyLastUpdate = routingPolicyLastUpdate
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                routingPolicyTimeLockDelta
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                routingPolicyMinHtlc
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                routingPolicyFeeBaseMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                routingPolicyFeeRateMilliMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                routingPolicyDisabled
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                routingPolicyMaxHtlcMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                routingPolicyLastUpdate
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure RoutingPolicy)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "time_lock_delta")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "min_htlc")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "fee_base_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "fee_rate_milli_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "disabled")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "max_htlc_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "last_update")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB RoutingPolicy where
  toJSONPB (RoutingPolicy f1 f2 f3 f4 f5 f6 f7) =
    ( HsJSONPB.object
        [ "time_lock_delta" .= f1,
          "min_htlc" .= f2,
          "fee_base_msat" .= f3,
          "fee_rate_milli_msat" .= f4,
          "disabled" .= f5,
          "max_htlc_msat" .= f6,
          "last_update" .= f7
        ]
    )
  toEncodingPB (RoutingPolicy f1 f2 f3 f4 f5 f6 f7) =
    ( HsJSONPB.pairs
        [ "time_lock_delta" .= f1,
          "min_htlc" .= f2,
          "fee_base_msat" .= f3,
          "fee_rate_milli_msat" .= f4,
          "disabled" .= f5,
          "max_htlc_msat" .= f6,
          "last_update" .= f7
        ]
    )

instance HsJSONPB.FromJSONPB RoutingPolicy where
  parseJSONPB =
    ( HsJSONPB.withObject
        "RoutingPolicy"
        ( \obj ->
            (Hs.pure RoutingPolicy) <*> obj .: "time_lock_delta"
              <*> obj .: "min_htlc"
              <*> obj .: "fee_base_msat"
              <*> obj .: "fee_rate_milli_msat"
              <*> obj .: "disabled"
              <*> obj .: "max_htlc_msat"
              <*> obj .: "last_update"
        )
    )

instance HsJSONPB.ToJSON RoutingPolicy where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON RoutingPolicy where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema RoutingPolicy where
  declareNamedSchema _ =
    do
      let declare_time_lock_delta = HsJSONPB.declareSchemaRef
      routingPolicyTimeLockDelta <- declare_time_lock_delta Proxy.Proxy
      let declare_min_htlc = HsJSONPB.declareSchemaRef
      routingPolicyMinHtlc <- declare_min_htlc Proxy.Proxy
      let declare_fee_base_msat = HsJSONPB.declareSchemaRef
      routingPolicyFeeBaseMsat <- declare_fee_base_msat Proxy.Proxy
      let declare_fee_rate_milli_msat = HsJSONPB.declareSchemaRef
      routingPolicyFeeRateMilliMsat <-
        declare_fee_rate_milli_msat
          Proxy.Proxy
      let declare_disabled = HsJSONPB.declareSchemaRef
      routingPolicyDisabled <- declare_disabled Proxy.Proxy
      let declare_max_htlc_msat = HsJSONPB.declareSchemaRef
      routingPolicyMaxHtlcMsat <- declare_max_htlc_msat Proxy.Proxy
      let declare_last_update = HsJSONPB.declareSchemaRef
      routingPolicyLastUpdate <- declare_last_update Proxy.Proxy
      let _ =
            Hs.pure RoutingPolicy
              <*> HsJSONPB.asProxy declare_time_lock_delta
              <*> HsJSONPB.asProxy declare_min_htlc
              <*> HsJSONPB.asProxy declare_fee_base_msat
              <*> HsJSONPB.asProxy declare_fee_rate_milli_msat
              <*> HsJSONPB.asProxy declare_disabled
              <*> HsJSONPB.asProxy declare_max_htlc_msat
              <*> HsJSONPB.asProxy declare_last_update
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "RoutingPolicy",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "time_lock_delta",
                            routingPolicyTimeLockDelta
                          ),
                          ("min_htlc", routingPolicyMinHtlc),
                          ("fee_base_msat", routingPolicyFeeBaseMsat),
                          ( "fee_rate_milli_msat",
                            routingPolicyFeeRateMilliMsat
                          ),
                          ("disabled", routingPolicyDisabled),
                          ("max_htlc_msat", routingPolicyMaxHtlcMsat),
                          ("last_update", routingPolicyLastUpdate)
                        ]
                  }
            }
        )

data ChannelEdge
  = ChannelEdge
      { channelEdgeChannelId :: Hs.Word64,
        channelEdgeChanPoint :: Hs.Text,
        channelEdgeLastUpdate :: Hs.Word32,
        channelEdgeNode1Pub :: Hs.Text,
        channelEdgeNode2Pub :: Hs.Text,
        channelEdgeCapacity :: Hs.Int64,
        channelEdgeNode1Policy :: Hs.Maybe LndGrpc.RoutingPolicy,
        channelEdgeNode2Policy :: Hs.Maybe LndGrpc.RoutingPolicy
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelEdge where
  nameOf _ = (Hs.fromString "ChannelEdge")

instance HsProtobuf.HasDefault ChannelEdge

instance HsProtobuf.Message ChannelEdge where
  encodeMessage
    _
    ChannelEdge
      { channelEdgeChannelId = channelEdgeChannelId,
        channelEdgeChanPoint = channelEdgeChanPoint,
        channelEdgeLastUpdate = channelEdgeLastUpdate,
        channelEdgeNode1Pub = channelEdgeNode1Pub,
        channelEdgeNode2Pub = channelEdgeNode2Pub,
        channelEdgeCapacity = channelEdgeCapacity,
        channelEdgeNode1Policy = channelEdgeNode1Policy,
        channelEdgeNode2Policy = channelEdgeNode2Policy
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                channelEdgeChannelId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                channelEdgeChanPoint
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                channelEdgeLastUpdate
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                channelEdgeNode1Pub
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                channelEdgeNode2Pub
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                channelEdgeCapacity
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                ( Hs.coerce @(Hs.Maybe LndGrpc.RoutingPolicy)
                    @(HsProtobuf.Nested LndGrpc.RoutingPolicy)
                    channelEdgeNode1Policy
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                ( Hs.coerce @(Hs.Maybe LndGrpc.RoutingPolicy)
                    @(HsProtobuf.Nested LndGrpc.RoutingPolicy)
                    channelEdgeNode2Policy
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChannelEdge)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.RoutingPolicy))
              @(_ (Hs.Maybe LndGrpc.RoutingPolicy))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 7)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.RoutingPolicy))
              @(_ (Hs.Maybe LndGrpc.RoutingPolicy))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 8)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "channel_id")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "chan_point")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "last_update")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "node1_pub")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "node2_pub")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "capacity")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "RoutingPolicy"))
          )
          (HsProtobuf.Single "node1_policy")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "RoutingPolicy"))
          )
          (HsProtobuf.Single "node2_policy")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChannelEdge where
  toJSONPB (ChannelEdge f1 f2 f3 f4 f5 f6 f7 f8) =
    ( HsJSONPB.object
        [ "channel_id" .= f1,
          "chan_point" .= f2,
          "last_update" .= f3,
          "node1_pub" .= f4,
          "node2_pub" .= f5,
          "capacity" .= f6,
          "node1_policy" .= f7,
          "node2_policy" .= f8
        ]
    )
  toEncodingPB (ChannelEdge f1 f2 f3 f4 f5 f6 f7 f8) =
    ( HsJSONPB.pairs
        [ "channel_id" .= f1,
          "chan_point" .= f2,
          "last_update" .= f3,
          "node1_pub" .= f4,
          "node2_pub" .= f5,
          "capacity" .= f6,
          "node1_policy" .= f7,
          "node2_policy" .= f8
        ]
    )

instance HsJSONPB.FromJSONPB ChannelEdge where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelEdge"
        ( \obj ->
            (Hs.pure ChannelEdge) <*> obj .: "channel_id"
              <*> obj .: "chan_point"
              <*> obj .: "last_update"
              <*> obj .: "node1_pub"
              <*> obj .: "node2_pub"
              <*> obj .: "capacity"
              <*> obj .: "node1_policy"
              <*> obj .: "node2_policy"
        )
    )

instance HsJSONPB.ToJSON ChannelEdge where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelEdge where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelEdge where
  declareNamedSchema _ =
    do
      let declare_channel_id = HsJSONPB.declareSchemaRef
      channelEdgeChannelId <- declare_channel_id Proxy.Proxy
      let declare_chan_point = HsJSONPB.declareSchemaRef
      channelEdgeChanPoint <- declare_chan_point Proxy.Proxy
      let declare_last_update = HsJSONPB.declareSchemaRef
      channelEdgeLastUpdate <- declare_last_update Proxy.Proxy
      let declare_node1_pub = HsJSONPB.declareSchemaRef
      channelEdgeNode1Pub <- declare_node1_pub Proxy.Proxy
      let declare_node2_pub = HsJSONPB.declareSchemaRef
      channelEdgeNode2Pub <- declare_node2_pub Proxy.Proxy
      let declare_capacity = HsJSONPB.declareSchemaRef
      channelEdgeCapacity <- declare_capacity Proxy.Proxy
      let declare_node1_policy = HsJSONPB.declareSchemaRef
      channelEdgeNode1Policy <- declare_node1_policy Proxy.Proxy
      let declare_node2_policy = HsJSONPB.declareSchemaRef
      channelEdgeNode2Policy <- declare_node2_policy Proxy.Proxy
      let _ =
            Hs.pure ChannelEdge <*> HsJSONPB.asProxy declare_channel_id
              <*> HsJSONPB.asProxy declare_chan_point
              <*> HsJSONPB.asProxy declare_last_update
              <*> HsJSONPB.asProxy declare_node1_pub
              <*> HsJSONPB.asProxy declare_node2_pub
              <*> HsJSONPB.asProxy declare_capacity
              <*> HsJSONPB.asProxy declare_node1_policy
              <*> HsJSONPB.asProxy declare_node2_policy
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelEdge",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("channel_id", channelEdgeChannelId),
                          ("chan_point", channelEdgeChanPoint),
                          ("last_update", channelEdgeLastUpdate),
                          ("node1_pub", channelEdgeNode1Pub),
                          ("node2_pub", channelEdgeNode2Pub),
                          ("capacity", channelEdgeCapacity),
                          ("node1_policy", channelEdgeNode1Policy),
                          ("node2_policy", channelEdgeNode2Policy)
                        ]
                  }
            }
        )

data ChannelGraphRequest
  = ChannelGraphRequest
      { channelGraphRequestIncludeUnannounced ::
          Hs.Bool
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelGraphRequest where
  nameOf _ = (Hs.fromString "ChannelGraphRequest")

instance HsProtobuf.HasDefault ChannelGraphRequest

instance HsProtobuf.Message ChannelGraphRequest where
  encodeMessage
    _
    ChannelGraphRequest
      { channelGraphRequestIncludeUnannounced =
          channelGraphRequestIncludeUnannounced
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                channelGraphRequestIncludeUnannounced
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChannelGraphRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "include_unannounced")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChannelGraphRequest where
  toJSONPB (ChannelGraphRequest f1) =
    (HsJSONPB.object ["include_unannounced" .= f1])
  toEncodingPB (ChannelGraphRequest f1) =
    (HsJSONPB.pairs ["include_unannounced" .= f1])

instance HsJSONPB.FromJSONPB ChannelGraphRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelGraphRequest"
        ( \obj ->
            (Hs.pure ChannelGraphRequest) <*> obj .: "include_unannounced"
        )
    )

instance HsJSONPB.ToJSON ChannelGraphRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelGraphRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelGraphRequest where
  declareNamedSchema _ =
    do
      let declare_include_unannounced = HsJSONPB.declareSchemaRef
      channelGraphRequestIncludeUnannounced <-
        declare_include_unannounced
          Proxy.Proxy
      let _ =
            Hs.pure ChannelGraphRequest
              <*> HsJSONPB.asProxy declare_include_unannounced
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelGraphRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "include_unannounced",
                            channelGraphRequestIncludeUnannounced
                          )
                        ]
                  }
            }
        )

data ChannelGraph
  = ChannelGraph
      { channelGraphNodes ::
          Hs.Vector
            LndGrpc.LightningNode,
        channelGraphEdges :: Hs.Vector LndGrpc.ChannelEdge
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelGraph where
  nameOf _ = (Hs.fromString "ChannelGraph")

instance HsProtobuf.HasDefault ChannelGraph

instance HsProtobuf.Message ChannelGraph where
  encodeMessage
    _
    ChannelGraph
      { channelGraphNodes = channelGraphNodes,
        channelGraphEdges = channelGraphEdges
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector LndGrpc.LightningNode)
                    @(HsProtobuf.NestedVec LndGrpc.LightningNode)
                    channelGraphNodes
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce @(Hs.Vector LndGrpc.ChannelEdge)
                    @(HsProtobuf.NestedVec LndGrpc.ChannelEdge)
                    channelGraphEdges
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChannelGraph)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.LightningNode))
              @(_ (Hs.Vector LndGrpc.LightningNode))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.ChannelEdge))
              @(_ (Hs.Vector LndGrpc.ChannelEdge))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "LightningNode"))
          )
          (HsProtobuf.Single "nodes")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "ChannelEdge"))
          )
          (HsProtobuf.Single "edges")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChannelGraph where
  toJSONPB (ChannelGraph f1 f2) =
    (HsJSONPB.object ["nodes" .= f1, "edges" .= f2])
  toEncodingPB (ChannelGraph f1 f2) =
    (HsJSONPB.pairs ["nodes" .= f1, "edges" .= f2])

instance HsJSONPB.FromJSONPB ChannelGraph where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelGraph"
        ( \obj ->
            (Hs.pure ChannelGraph) <*> obj .: "nodes" <*> obj .: "edges"
        )
    )

instance HsJSONPB.ToJSON ChannelGraph where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelGraph where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelGraph where
  declareNamedSchema _ =
    do
      let declare_nodes = HsJSONPB.declareSchemaRef
      channelGraphNodes <- declare_nodes Proxy.Proxy
      let declare_edges = HsJSONPB.declareSchemaRef
      channelGraphEdges <- declare_edges Proxy.Proxy
      let _ =
            Hs.pure ChannelGraph <*> HsJSONPB.asProxy declare_nodes
              <*> HsJSONPB.asProxy declare_edges
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelGraph",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("nodes", channelGraphNodes),
                          ("edges", channelGraphEdges)
                        ]
                  }
            }
        )

data NodeMetricType
  = NodeMetricTypeUNKNOWN
  | NodeMetricTypeBETWEENNESS_CENTRALITY
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named NodeMetricType where
  nameOf _ = (Hs.fromString "NodeMetricType")

instance HsProtobuf.HasDefault NodeMetricType

instance Hs.Bounded NodeMetricType where
  minBound = NodeMetricTypeUNKNOWN
  maxBound = NodeMetricTypeBETWEENNESS_CENTRALITY

instance Hs.Ord NodeMetricType where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum NodeMetricType where
  toProtoEnumMay 0 = Hs.Just NodeMetricTypeUNKNOWN
  toProtoEnumMay 1 = Hs.Just NodeMetricTypeBETWEENNESS_CENTRALITY
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (NodeMetricTypeUNKNOWN) = 0
  fromProtoEnum (NodeMetricTypeBETWEENNESS_CENTRALITY) = 1

instance HsJSONPB.ToJSONPB NodeMetricType where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB NodeMetricType where
  parseJSONPB (HsJSONPB.String "UNKNOWN") =
    Hs.pure NodeMetricTypeUNKNOWN
  parseJSONPB (HsJSONPB.String "BETWEENNESS_CENTRALITY") =
    Hs.pure NodeMetricTypeBETWEENNESS_CENTRALITY
  parseJSONPB v = (HsJSONPB.typeMismatch "NodeMetricType" v)

instance HsJSONPB.ToJSON NodeMetricType where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON NodeMetricType where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite NodeMetricType

data NodeMetricsRequest
  = NodeMetricsRequest
      { nodeMetricsRequestTypes ::
          Hs.Vector
            (HsProtobuf.Enumerated LndGrpc.NodeMetricType)
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named NodeMetricsRequest where
  nameOf _ = (Hs.fromString "NodeMetricsRequest")

instance HsProtobuf.HasDefault NodeMetricsRequest

instance HsProtobuf.Message NodeMetricsRequest where
  encodeMessage
    _
    NodeMetricsRequest
      { nodeMetricsRequestTypes =
          nodeMetricsRequestTypes
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce
                    @(Hs.Vector (HsProtobuf.Enumerated LndGrpc.NodeMetricType))
                    @(HsProtobuf.PackedVec (HsProtobuf.Enumerated LndGrpc.NodeMetricType))
                    nodeMetricsRequestTypes
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure NodeMetricsRequest)
      <*> ( Hs.coerce
              @(_ (HsProtobuf.PackedVec (HsProtobuf.Enumerated LndGrpc.NodeMetricType)))
              @(_ (Hs.Vector (HsProtobuf.Enumerated LndGrpc.NodeMetricType)))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "NodeMetricType"))
          )
          (HsProtobuf.Single "types")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB NodeMetricsRequest where
  toJSONPB (NodeMetricsRequest f1) =
    (HsJSONPB.object ["types" .= f1])
  toEncodingPB (NodeMetricsRequest f1) =
    (HsJSONPB.pairs ["types" .= f1])

instance HsJSONPB.FromJSONPB NodeMetricsRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "NodeMetricsRequest"
        (\obj -> (Hs.pure NodeMetricsRequest) <*> obj .: "types")
    )

instance HsJSONPB.ToJSON NodeMetricsRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON NodeMetricsRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema NodeMetricsRequest where
  declareNamedSchema _ =
    do
      let declare_types = HsJSONPB.declareSchemaRef
      nodeMetricsRequestTypes <- declare_types Proxy.Proxy
      let _ =
            Hs.pure NodeMetricsRequest
              <*> HsJSONPB.asProxy declare_types
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "NodeMetricsRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("types", nodeMetricsRequestTypes)]
                  }
            }
        )

data NodeMetricsResponse
  = NodeMetricsResponse
      { nodeMetricsResponseBetweennessCentrality ::
          Hs.Map Hs.Text
            (Hs.Maybe LndGrpc.FloatMetric)
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named NodeMetricsResponse where
  nameOf _ = (Hs.fromString "NodeMetricsResponse")

instance HsProtobuf.HasDefault NodeMetricsResponse

instance HsProtobuf.Message NodeMetricsResponse where
  encodeMessage
    _
    NodeMetricsResponse
      { nodeMetricsResponseBetweennessCentrality =
          nodeMetricsResponseBetweennessCentrality
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.unsafeCoerce @(Hs.Map Hs.Text (Hs.Maybe LndGrpc.FloatMetric))
                    @(Hs.Map Hs.Text (HsProtobuf.Nested LndGrpc.FloatMetric))
                    nodeMetricsResponseBetweennessCentrality
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure NodeMetricsResponse)
      <*> ( Hs.unsafeCoerce
              @(_ (Hs.Map Hs.Text (HsProtobuf.Nested LndGrpc.FloatMetric)))
              @(_ (Hs.Map Hs.Text (Hs.Maybe LndGrpc.FloatMetric)))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Map
              HsProtobuf.String
              (HsProtobuf.Named (HsProtobuf.Single "FloatMetric"))
          )
          (HsProtobuf.Single "betweenness_centrality")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB NodeMetricsResponse where
  toJSONPB (NodeMetricsResponse f1) =
    (HsJSONPB.object ["betweenness_centrality" .= f1])
  toEncodingPB (NodeMetricsResponse f1) =
    (HsJSONPB.pairs ["betweenness_centrality" .= f1])

instance HsJSONPB.FromJSONPB NodeMetricsResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "NodeMetricsResponse"
        ( \obj ->
            (Hs.pure NodeMetricsResponse) <*> obj .: "betweenness_centrality"
        )
    )

instance HsJSONPB.ToJSON NodeMetricsResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON NodeMetricsResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema NodeMetricsResponse where
  declareNamedSchema _ =
    do
      let declare_betweenness_centrality = HsJSONPB.declareSchemaRef
      nodeMetricsResponseBetweennessCentrality <-
        declare_betweenness_centrality
          Proxy.Proxy
      let _ =
            Hs.pure NodeMetricsResponse
              <*> HsJSONPB.asProxy declare_betweenness_centrality
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "NodeMetricsResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "betweenness_centrality",
                            nodeMetricsResponseBetweennessCentrality
                          )
                        ]
                  }
            }
        )

data FloatMetric
  = FloatMetric
      { floatMetricValue :: Hs.Double,
        floatMetricNormalizedValue :: Hs.Double
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FloatMetric where
  nameOf _ = (Hs.fromString "FloatMetric")

instance HsProtobuf.HasDefault FloatMetric

instance HsProtobuf.Message FloatMetric where
  encodeMessage
    _
    FloatMetric
      { floatMetricValue = floatMetricValue,
        floatMetricNormalizedValue = floatMetricNormalizedValue
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                floatMetricValue
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                floatMetricNormalizedValue
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure FloatMetric)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Double)
          (HsProtobuf.Single "value")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Double)
          (HsProtobuf.Single "normalized_value")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB FloatMetric where
  toJSONPB (FloatMetric f1 f2) =
    (HsJSONPB.object ["value" .= f1, "normalized_value" .= f2])
  toEncodingPB (FloatMetric f1 f2) =
    (HsJSONPB.pairs ["value" .= f1, "normalized_value" .= f2])

instance HsJSONPB.FromJSONPB FloatMetric where
  parseJSONPB =
    ( HsJSONPB.withObject
        "FloatMetric"
        ( \obj ->
            (Hs.pure FloatMetric) <*> obj .: "value"
              <*> obj .: "normalized_value"
        )
    )

instance HsJSONPB.ToJSON FloatMetric where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON FloatMetric where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema FloatMetric where
  declareNamedSchema _ =
    do
      let declare_value = HsJSONPB.declareSchemaRef
      floatMetricValue <- declare_value Proxy.Proxy
      let declare_normalized_value = HsJSONPB.declareSchemaRef
      floatMetricNormalizedValue <- declare_normalized_value Proxy.Proxy
      let _ =
            Hs.pure FloatMetric <*> HsJSONPB.asProxy declare_value
              <*> HsJSONPB.asProxy declare_normalized_value
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "FloatMetric",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("value", floatMetricValue),
                          ( "normalized_value",
                            floatMetricNormalizedValue
                          )
                        ]
                  }
            }
        )

data ChanInfoRequest
  = ChanInfoRequest
      { chanInfoRequestChanId ::
          Hs.Word64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChanInfoRequest where
  nameOf _ = (Hs.fromString "ChanInfoRequest")

instance HsProtobuf.HasDefault ChanInfoRequest

instance HsProtobuf.Message ChanInfoRequest where
  encodeMessage
    _
    ChanInfoRequest {chanInfoRequestChanId = chanInfoRequestChanId} =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                chanInfoRequestChanId
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChanInfoRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "chan_id")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChanInfoRequest where
  toJSONPB (ChanInfoRequest f1) = (HsJSONPB.object ["chan_id" .= f1])
  toEncodingPB (ChanInfoRequest f1) =
    (HsJSONPB.pairs ["chan_id" .= f1])

instance HsJSONPB.FromJSONPB ChanInfoRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChanInfoRequest"
        (\obj -> (Hs.pure ChanInfoRequest) <*> obj .: "chan_id")
    )

instance HsJSONPB.ToJSON ChanInfoRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChanInfoRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChanInfoRequest where
  declareNamedSchema _ =
    do
      let declare_chan_id = HsJSONPB.declareSchemaRef
      chanInfoRequestChanId <- declare_chan_id Proxy.Proxy
      let _ =
            Hs.pure ChanInfoRequest
              <*> HsJSONPB.asProxy declare_chan_id
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChanInfoRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("chan_id", chanInfoRequestChanId)]
                  }
            }
        )

data NetworkInfoRequest = NetworkInfoRequest {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named NetworkInfoRequest where
  nameOf _ = (Hs.fromString "NetworkInfoRequest")

instance HsProtobuf.HasDefault NetworkInfoRequest

instance HsProtobuf.Message NetworkInfoRequest where
  encodeMessage _ NetworkInfoRequest {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure NetworkInfoRequest)
  dotProto _ = []

instance HsJSONPB.ToJSONPB NetworkInfoRequest where
  toJSONPB (NetworkInfoRequest) = (HsJSONPB.object [])
  toEncodingPB (NetworkInfoRequest) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB NetworkInfoRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "NetworkInfoRequest"
        (\obj -> (Hs.pure NetworkInfoRequest))
    )

instance HsJSONPB.ToJSON NetworkInfoRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON NetworkInfoRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema NetworkInfoRequest where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "NetworkInfoRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data NetworkInfo
  = NetworkInfo
      { networkInfoGraphDiameter ::
          Hs.Word32,
        networkInfoAvgOutDegree :: Hs.Double,
        networkInfoMaxOutDegree :: Hs.Word32,
        networkInfoNumNodes :: Hs.Word32,
        networkInfoNumChannels :: Hs.Word32,
        networkInfoTotalNetworkCapacity :: Hs.Int64,
        networkInfoAvgChannelSize :: Hs.Double,
        networkInfoMinChannelSize :: Hs.Int64,
        networkInfoMaxChannelSize :: Hs.Int64,
        networkInfoMedianChannelSizeSat :: Hs.Int64,
        networkInfoNumZombieChans :: Hs.Word64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named NetworkInfo where
  nameOf _ = (Hs.fromString "NetworkInfo")

instance HsProtobuf.HasDefault NetworkInfo

instance HsProtobuf.Message NetworkInfo where
  encodeMessage
    _
    NetworkInfo
      { networkInfoGraphDiameter = networkInfoGraphDiameter,
        networkInfoAvgOutDegree = networkInfoAvgOutDegree,
        networkInfoMaxOutDegree = networkInfoMaxOutDegree,
        networkInfoNumNodes = networkInfoNumNodes,
        networkInfoNumChannels = networkInfoNumChannels,
        networkInfoTotalNetworkCapacity = networkInfoTotalNetworkCapacity,
        networkInfoAvgChannelSize = networkInfoAvgChannelSize,
        networkInfoMinChannelSize = networkInfoMinChannelSize,
        networkInfoMaxChannelSize = networkInfoMaxChannelSize,
        networkInfoMedianChannelSizeSat = networkInfoMedianChannelSizeSat,
        networkInfoNumZombieChans = networkInfoNumZombieChans
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                networkInfoGraphDiameter
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                networkInfoAvgOutDegree
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                networkInfoMaxOutDegree
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                networkInfoNumNodes
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                networkInfoNumChannels
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                networkInfoTotalNetworkCapacity
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                networkInfoAvgChannelSize
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                networkInfoMinChannelSize
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                networkInfoMaxChannelSize
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                networkInfoMedianChannelSizeSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                networkInfoNumZombieChans
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure NetworkInfo)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 10)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 11)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "graph_diameter")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Double)
          (HsProtobuf.Single "avg_out_degree")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "max_out_degree")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "num_nodes")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "num_channels")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "total_network_capacity")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.Double)
          (HsProtobuf.Single "avg_channel_size")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "min_channel_size")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "max_channel_size")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "median_channel_size_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "num_zombie_chans")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB NetworkInfo where
  toJSONPB (NetworkInfo f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11) =
    ( HsJSONPB.object
        [ "graph_diameter" .= f1,
          "avg_out_degree" .= f2,
          "max_out_degree" .= f3,
          "num_nodes" .= f4,
          "num_channels" .= f5,
          "total_network_capacity" .= f6,
          "avg_channel_size" .= f7,
          "min_channel_size" .= f8,
          "max_channel_size" .= f9,
          "median_channel_size_sat" .= f10,
          "num_zombie_chans" .= f11
        ]
    )
  toEncodingPB (NetworkInfo f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11) =
    ( HsJSONPB.pairs
        [ "graph_diameter" .= f1,
          "avg_out_degree" .= f2,
          "max_out_degree" .= f3,
          "num_nodes" .= f4,
          "num_channels" .= f5,
          "total_network_capacity" .= f6,
          "avg_channel_size" .= f7,
          "min_channel_size" .= f8,
          "max_channel_size" .= f9,
          "median_channel_size_sat" .= f10,
          "num_zombie_chans" .= f11
        ]
    )

instance HsJSONPB.FromJSONPB NetworkInfo where
  parseJSONPB =
    ( HsJSONPB.withObject
        "NetworkInfo"
        ( \obj ->
            (Hs.pure NetworkInfo) <*> obj .: "graph_diameter"
              <*> obj .: "avg_out_degree"
              <*> obj .: "max_out_degree"
              <*> obj .: "num_nodes"
              <*> obj .: "num_channels"
              <*> obj .: "total_network_capacity"
              <*> obj .: "avg_channel_size"
              <*> obj .: "min_channel_size"
              <*> obj .: "max_channel_size"
              <*> obj .: "median_channel_size_sat"
              <*> obj .: "num_zombie_chans"
        )
    )

instance HsJSONPB.ToJSON NetworkInfo where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON NetworkInfo where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema NetworkInfo where
  declareNamedSchema _ =
    do
      let declare_graph_diameter = HsJSONPB.declareSchemaRef
      networkInfoGraphDiameter <- declare_graph_diameter Proxy.Proxy
      let declare_avg_out_degree = HsJSONPB.declareSchemaRef
      networkInfoAvgOutDegree <- declare_avg_out_degree Proxy.Proxy
      let declare_max_out_degree = HsJSONPB.declareSchemaRef
      networkInfoMaxOutDegree <- declare_max_out_degree Proxy.Proxy
      let declare_num_nodes = HsJSONPB.declareSchemaRef
      networkInfoNumNodes <- declare_num_nodes Proxy.Proxy
      let declare_num_channels = HsJSONPB.declareSchemaRef
      networkInfoNumChannels <- declare_num_channels Proxy.Proxy
      let declare_total_network_capacity = HsJSONPB.declareSchemaRef
      networkInfoTotalNetworkCapacity <-
        declare_total_network_capacity
          Proxy.Proxy
      let declare_avg_channel_size = HsJSONPB.declareSchemaRef
      networkInfoAvgChannelSize <- declare_avg_channel_size Proxy.Proxy
      let declare_min_channel_size = HsJSONPB.declareSchemaRef
      networkInfoMinChannelSize <- declare_min_channel_size Proxy.Proxy
      let declare_max_channel_size = HsJSONPB.declareSchemaRef
      networkInfoMaxChannelSize <- declare_max_channel_size Proxy.Proxy
      let declare_median_channel_size_sat = HsJSONPB.declareSchemaRef
      networkInfoMedianChannelSizeSat <-
        declare_median_channel_size_sat
          Proxy.Proxy
      let declare_num_zombie_chans = HsJSONPB.declareSchemaRef
      networkInfoNumZombieChans <- declare_num_zombie_chans Proxy.Proxy
      let _ =
            Hs.pure NetworkInfo
              <*> HsJSONPB.asProxy declare_graph_diameter
              <*> HsJSONPB.asProxy declare_avg_out_degree
              <*> HsJSONPB.asProxy declare_max_out_degree
              <*> HsJSONPB.asProxy declare_num_nodes
              <*> HsJSONPB.asProxy declare_num_channels
              <*> HsJSONPB.asProxy declare_total_network_capacity
              <*> HsJSONPB.asProxy declare_avg_channel_size
              <*> HsJSONPB.asProxy declare_min_channel_size
              <*> HsJSONPB.asProxy declare_max_channel_size
              <*> HsJSONPB.asProxy declare_median_channel_size_sat
              <*> HsJSONPB.asProxy declare_num_zombie_chans
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "NetworkInfo",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "graph_diameter",
                            networkInfoGraphDiameter
                          ),
                          ("avg_out_degree", networkInfoAvgOutDegree),
                          ("max_out_degree", networkInfoMaxOutDegree),
                          ("num_nodes", networkInfoNumNodes),
                          ("num_channels", networkInfoNumChannels),
                          ( "total_network_capacity",
                            networkInfoTotalNetworkCapacity
                          ),
                          ( "avg_channel_size",
                            networkInfoAvgChannelSize
                          ),
                          ( "min_channel_size",
                            networkInfoMinChannelSize
                          ),
                          ( "max_channel_size",
                            networkInfoMaxChannelSize
                          ),
                          ( "median_channel_size_sat",
                            networkInfoMedianChannelSizeSat
                          ),
                          ( "num_zombie_chans",
                            networkInfoNumZombieChans
                          )
                        ]
                  }
            }
        )

data StopRequest = StopRequest {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named StopRequest where
  nameOf _ = (Hs.fromString "StopRequest")

instance HsProtobuf.HasDefault StopRequest

instance HsProtobuf.Message StopRequest where
  encodeMessage _ StopRequest {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure StopRequest)
  dotProto _ = []

instance HsJSONPB.ToJSONPB StopRequest where
  toJSONPB (StopRequest) = (HsJSONPB.object [])
  toEncodingPB (StopRequest) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB StopRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "StopRequest"
        (\obj -> (Hs.pure StopRequest))
    )

instance HsJSONPB.ToJSON StopRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON StopRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema StopRequest where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "StopRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data StopResponse = StopResponse {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named StopResponse where
  nameOf _ = (Hs.fromString "StopResponse")

instance HsProtobuf.HasDefault StopResponse

instance HsProtobuf.Message StopResponse where
  encodeMessage _ StopResponse {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure StopResponse)
  dotProto _ = []

instance HsJSONPB.ToJSONPB StopResponse where
  toJSONPB (StopResponse) = (HsJSONPB.object [])
  toEncodingPB (StopResponse) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB StopResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "StopResponse"
        (\obj -> (Hs.pure StopResponse))
    )

instance HsJSONPB.ToJSON StopResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON StopResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema StopResponse where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "StopResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data GraphTopologySubscription = GraphTopologySubscription {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named GraphTopologySubscription where
  nameOf _ = (Hs.fromString "GraphTopologySubscription")

instance HsProtobuf.HasDefault GraphTopologySubscription

instance HsProtobuf.Message GraphTopologySubscription where
  encodeMessage _ GraphTopologySubscription {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure GraphTopologySubscription)
  dotProto _ = []

instance HsJSONPB.ToJSONPB GraphTopologySubscription where
  toJSONPB (GraphTopologySubscription) = (HsJSONPB.object [])
  toEncodingPB (GraphTopologySubscription) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB GraphTopologySubscription where
  parseJSONPB =
    ( HsJSONPB.withObject
        "GraphTopologySubscription"
        (\obj -> (Hs.pure GraphTopologySubscription))
    )

instance HsJSONPB.ToJSON GraphTopologySubscription where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GraphTopologySubscription where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GraphTopologySubscription where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "GraphTopologySubscription",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data GraphTopologyUpdate
  = GraphTopologyUpdate
      { graphTopologyUpdateNodeUpdates ::
          Hs.Vector
            LndGrpc.NodeUpdate,
        graphTopologyUpdateChannelUpdates ::
          Hs.Vector
            LndGrpc.ChannelEdgeUpdate,
        graphTopologyUpdateClosedChans ::
          Hs.Vector
            LndGrpc.ClosedChannelUpdate
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named GraphTopologyUpdate where
  nameOf _ = (Hs.fromString "GraphTopologyUpdate")

instance HsProtobuf.HasDefault GraphTopologyUpdate

instance HsProtobuf.Message GraphTopologyUpdate where
  encodeMessage
    _
    GraphTopologyUpdate
      { graphTopologyUpdateNodeUpdates =
          graphTopologyUpdateNodeUpdates,
        graphTopologyUpdateChannelUpdates =
          graphTopologyUpdateChannelUpdates,
        graphTopologyUpdateClosedChans = graphTopologyUpdateClosedChans
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector LndGrpc.NodeUpdate)
                    @(HsProtobuf.NestedVec LndGrpc.NodeUpdate)
                    graphTopologyUpdateNodeUpdates
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce @(Hs.Vector LndGrpc.ChannelEdgeUpdate)
                    @(HsProtobuf.NestedVec LndGrpc.ChannelEdgeUpdate)
                    graphTopologyUpdateChannelUpdates
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                ( Hs.coerce @(Hs.Vector LndGrpc.ClosedChannelUpdate)
                    @(HsProtobuf.NestedVec LndGrpc.ClosedChannelUpdate)
                    graphTopologyUpdateClosedChans
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure GraphTopologyUpdate)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.NodeUpdate))
              @(_ (Hs.Vector LndGrpc.NodeUpdate))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.ChannelEdgeUpdate))
              @(_ (Hs.Vector LndGrpc.ChannelEdgeUpdate))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.ClosedChannelUpdate))
              @(_ (Hs.Vector LndGrpc.ClosedChannelUpdate))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "NodeUpdate"))
          )
          (HsProtobuf.Single "node_updates")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "ChannelEdgeUpdate"))
          )
          (HsProtobuf.Single "channel_updates")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "ClosedChannelUpdate"))
          )
          (HsProtobuf.Single "closed_chans")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB GraphTopologyUpdate where
  toJSONPB (GraphTopologyUpdate f1 f2 f3) =
    ( HsJSONPB.object
        [ "node_updates" .= f1,
          "channel_updates" .= f2,
          "closed_chans" .= f3
        ]
    )
  toEncodingPB (GraphTopologyUpdate f1 f2 f3) =
    ( HsJSONPB.pairs
        [ "node_updates" .= f1,
          "channel_updates" .= f2,
          "closed_chans" .= f3
        ]
    )

instance HsJSONPB.FromJSONPB GraphTopologyUpdate where
  parseJSONPB =
    ( HsJSONPB.withObject
        "GraphTopologyUpdate"
        ( \obj ->
            (Hs.pure GraphTopologyUpdate) <*> obj .: "node_updates"
              <*> obj .: "channel_updates"
              <*> obj .: "closed_chans"
        )
    )

instance HsJSONPB.ToJSON GraphTopologyUpdate where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GraphTopologyUpdate where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GraphTopologyUpdate where
  declareNamedSchema _ =
    do
      let declare_node_updates = HsJSONPB.declareSchemaRef
      graphTopologyUpdateNodeUpdates <- declare_node_updates Proxy.Proxy
      let declare_channel_updates = HsJSONPB.declareSchemaRef
      graphTopologyUpdateChannelUpdates <-
        declare_channel_updates
          Proxy.Proxy
      let declare_closed_chans = HsJSONPB.declareSchemaRef
      graphTopologyUpdateClosedChans <- declare_closed_chans Proxy.Proxy
      let _ =
            Hs.pure GraphTopologyUpdate
              <*> HsJSONPB.asProxy declare_node_updates
              <*> HsJSONPB.asProxy declare_channel_updates
              <*> HsJSONPB.asProxy declare_closed_chans
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "GraphTopologyUpdate",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "node_updates",
                            graphTopologyUpdateNodeUpdates
                          ),
                          ( "channel_updates",
                            graphTopologyUpdateChannelUpdates
                          ),
                          ( "closed_chans",
                            graphTopologyUpdateClosedChans
                          )
                        ]
                  }
            }
        )

data NodeUpdate
  = NodeUpdate
      { nodeUpdateAddresses ::
          Hs.Vector
            Hs.Text,
        nodeUpdateIdentityKey :: Hs.Text,
        nodeUpdateGlobalFeatures :: Hs.ByteString,
        nodeUpdateAlias :: Hs.Text,
        nodeUpdateColor :: Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named NodeUpdate where
  nameOf _ = (Hs.fromString "NodeUpdate")

instance HsProtobuf.HasDefault NodeUpdate

instance HsProtobuf.Message NodeUpdate where
  encodeMessage
    _
    NodeUpdate
      { nodeUpdateAddresses = nodeUpdateAddresses,
        nodeUpdateIdentityKey = nodeUpdateIdentityKey,
        nodeUpdateGlobalFeatures = nodeUpdateGlobalFeatures,
        nodeUpdateAlias = nodeUpdateAlias,
        nodeUpdateColor = nodeUpdateColor
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                    nodeUpdateAddresses
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                nodeUpdateIdentityKey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                nodeUpdateGlobalFeatures
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                nodeUpdateAlias
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                nodeUpdateColor
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure NodeUpdate)
      <*> ( Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
              @(_ (Hs.Vector Hs.Text))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Repeated HsProtobuf.String)
          (HsProtobuf.Single "addresses")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "identity_key")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "global_features")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "alias")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "color")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB NodeUpdate where
  toJSONPB (NodeUpdate f1 f2 f3 f4 f5) =
    ( HsJSONPB.object
        [ "addresses" .= f1,
          "identity_key" .= f2,
          "global_features" .= f3,
          "alias" .= f4,
          "color" .= f5
        ]
    )
  toEncodingPB (NodeUpdate f1 f2 f3 f4 f5) =
    ( HsJSONPB.pairs
        [ "addresses" .= f1,
          "identity_key" .= f2,
          "global_features" .= f3,
          "alias" .= f4,
          "color" .= f5
        ]
    )

instance HsJSONPB.FromJSONPB NodeUpdate where
  parseJSONPB =
    ( HsJSONPB.withObject
        "NodeUpdate"
        ( \obj ->
            (Hs.pure NodeUpdate) <*> obj .: "addresses"
              <*> obj .: "identity_key"
              <*> obj .: "global_features"
              <*> obj .: "alias"
              <*> obj .: "color"
        )
    )

instance HsJSONPB.ToJSON NodeUpdate where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON NodeUpdate where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema NodeUpdate where
  declareNamedSchema _ =
    do
      let declare_addresses = HsJSONPB.declareSchemaRef
      nodeUpdateAddresses <- declare_addresses Proxy.Proxy
      let declare_identity_key = HsJSONPB.declareSchemaRef
      nodeUpdateIdentityKey <- declare_identity_key Proxy.Proxy
      let declare_global_features = HsJSONPB.declareSchemaRef
      nodeUpdateGlobalFeatures <- declare_global_features Proxy.Proxy
      let declare_alias = HsJSONPB.declareSchemaRef
      nodeUpdateAlias <- declare_alias Proxy.Proxy
      let declare_color = HsJSONPB.declareSchemaRef
      nodeUpdateColor <- declare_color Proxy.Proxy
      let _ =
            Hs.pure NodeUpdate <*> HsJSONPB.asProxy declare_addresses
              <*> HsJSONPB.asProxy declare_identity_key
              <*> HsJSONPB.asProxy declare_global_features
              <*> HsJSONPB.asProxy declare_alias
              <*> HsJSONPB.asProxy declare_color
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "NodeUpdate",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("addresses", nodeUpdateAddresses),
                          ("identity_key", nodeUpdateIdentityKey),
                          ( "global_features",
                            nodeUpdateGlobalFeatures
                          ),
                          ("alias", nodeUpdateAlias),
                          ("color", nodeUpdateColor)
                        ]
                  }
            }
        )

data ChannelEdgeUpdate
  = ChannelEdgeUpdate
      { channelEdgeUpdateChanId ::
          Hs.Word64,
        channelEdgeUpdateChanPoint ::
          Hs.Maybe
            LndGrpc.ChannelPoint,
        channelEdgeUpdateCapacity :: Hs.Int64,
        channelEdgeUpdateRoutingPolicy ::
          Hs.Maybe
            LndGrpc.RoutingPolicy,
        channelEdgeUpdateAdvertisingNode :: Hs.Text,
        channelEdgeUpdateConnectingNode :: Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelEdgeUpdate where
  nameOf _ = (Hs.fromString "ChannelEdgeUpdate")

instance HsProtobuf.HasDefault ChannelEdgeUpdate

instance HsProtobuf.Message ChannelEdgeUpdate where
  encodeMessage
    _
    ChannelEdgeUpdate
      { channelEdgeUpdateChanId =
          channelEdgeUpdateChanId,
        channelEdgeUpdateChanPoint = channelEdgeUpdateChanPoint,
        channelEdgeUpdateCapacity = channelEdgeUpdateCapacity,
        channelEdgeUpdateRoutingPolicy = channelEdgeUpdateRoutingPolicy,
        channelEdgeUpdateAdvertisingNode =
          channelEdgeUpdateAdvertisingNode,
        channelEdgeUpdateConnectingNode = channelEdgeUpdateConnectingNode
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                channelEdgeUpdateChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelPoint)
                    @(HsProtobuf.Nested LndGrpc.ChannelPoint)
                    channelEdgeUpdateChanPoint
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                channelEdgeUpdateCapacity
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                ( Hs.coerce @(Hs.Maybe LndGrpc.RoutingPolicy)
                    @(HsProtobuf.Nested LndGrpc.RoutingPolicy)
                    channelEdgeUpdateRoutingPolicy
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                channelEdgeUpdateAdvertisingNode
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                channelEdgeUpdateConnectingNode
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChannelEdgeUpdate)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelPoint))
              @(_ (Hs.Maybe LndGrpc.ChannelPoint))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.RoutingPolicy))
              @(_ (Hs.Maybe LndGrpc.RoutingPolicy))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "chan_id")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "ChannelPoint"))
          )
          (HsProtobuf.Single "chan_point")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "capacity")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "RoutingPolicy"))
          )
          (HsProtobuf.Single "routing_policy")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "advertising_node")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "connecting_node")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChannelEdgeUpdate where
  toJSONPB (ChannelEdgeUpdate f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.object
        [ "chan_id" .= f1,
          "chan_point" .= f2,
          "capacity" .= f3,
          "routing_policy" .= f4,
          "advertising_node" .= f5,
          "connecting_node" .= f6
        ]
    )
  toEncodingPB (ChannelEdgeUpdate f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.pairs
        [ "chan_id" .= f1,
          "chan_point" .= f2,
          "capacity" .= f3,
          "routing_policy" .= f4,
          "advertising_node" .= f5,
          "connecting_node" .= f6
        ]
    )

instance HsJSONPB.FromJSONPB ChannelEdgeUpdate where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelEdgeUpdate"
        ( \obj ->
            (Hs.pure ChannelEdgeUpdate) <*> obj .: "chan_id"
              <*> obj .: "chan_point"
              <*> obj .: "capacity"
              <*> obj .: "routing_policy"
              <*> obj .: "advertising_node"
              <*> obj .: "connecting_node"
        )
    )

instance HsJSONPB.ToJSON ChannelEdgeUpdate where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelEdgeUpdate where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelEdgeUpdate where
  declareNamedSchema _ =
    do
      let declare_chan_id = HsJSONPB.declareSchemaRef
      channelEdgeUpdateChanId <- declare_chan_id Proxy.Proxy
      let declare_chan_point = HsJSONPB.declareSchemaRef
      channelEdgeUpdateChanPoint <- declare_chan_point Proxy.Proxy
      let declare_capacity = HsJSONPB.declareSchemaRef
      channelEdgeUpdateCapacity <- declare_capacity Proxy.Proxy
      let declare_routing_policy = HsJSONPB.declareSchemaRef
      channelEdgeUpdateRoutingPolicy <-
        declare_routing_policy
          Proxy.Proxy
      let declare_advertising_node = HsJSONPB.declareSchemaRef
      channelEdgeUpdateAdvertisingNode <-
        declare_advertising_node
          Proxy.Proxy
      let declare_connecting_node = HsJSONPB.declareSchemaRef
      channelEdgeUpdateConnectingNode <-
        declare_connecting_node
          Proxy.Proxy
      let _ =
            Hs.pure ChannelEdgeUpdate
              <*> HsJSONPB.asProxy declare_chan_id
              <*> HsJSONPB.asProxy declare_chan_point
              <*> HsJSONPB.asProxy declare_capacity
              <*> HsJSONPB.asProxy declare_routing_policy
              <*> HsJSONPB.asProxy declare_advertising_node
              <*> HsJSONPB.asProxy declare_connecting_node
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelEdgeUpdate",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("chan_id", channelEdgeUpdateChanId),
                          ("chan_point", channelEdgeUpdateChanPoint),
                          ("capacity", channelEdgeUpdateCapacity),
                          ( "routing_policy",
                            channelEdgeUpdateRoutingPolicy
                          ),
                          ( "advertising_node",
                            channelEdgeUpdateAdvertisingNode
                          ),
                          ( "connecting_node",
                            channelEdgeUpdateConnectingNode
                          )
                        ]
                  }
            }
        )

data ClosedChannelUpdate
  = ClosedChannelUpdate
      { closedChannelUpdateChanId ::
          Hs.Word64,
        closedChannelUpdateCapacity :: Hs.Int64,
        closedChannelUpdateClosedHeight :: Hs.Word32,
        closedChannelUpdateChanPoint ::
          Hs.Maybe
            LndGrpc.ChannelPoint
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ClosedChannelUpdate where
  nameOf _ = (Hs.fromString "ClosedChannelUpdate")

instance HsProtobuf.HasDefault ClosedChannelUpdate

instance HsProtobuf.Message ClosedChannelUpdate where
  encodeMessage
    _
    ClosedChannelUpdate
      { closedChannelUpdateChanId =
          closedChannelUpdateChanId,
        closedChannelUpdateCapacity = closedChannelUpdateCapacity,
        closedChannelUpdateClosedHeight = closedChannelUpdateClosedHeight,
        closedChannelUpdateChanPoint = closedChannelUpdateChanPoint
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                closedChannelUpdateChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                closedChannelUpdateCapacity
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                closedChannelUpdateClosedHeight
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelPoint)
                    @(HsProtobuf.Nested LndGrpc.ChannelPoint)
                    closedChannelUpdateChanPoint
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ClosedChannelUpdate)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelPoint))
              @(_ (Hs.Maybe LndGrpc.ChannelPoint))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "chan_id")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "capacity")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "closed_height")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "ChannelPoint"))
          )
          (HsProtobuf.Single "chan_point")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ClosedChannelUpdate where
  toJSONPB (ClosedChannelUpdate f1 f2 f3 f4) =
    ( HsJSONPB.object
        [ "chan_id" .= f1,
          "capacity" .= f2,
          "closed_height" .= f3,
          "chan_point" .= f4
        ]
    )
  toEncodingPB (ClosedChannelUpdate f1 f2 f3 f4) =
    ( HsJSONPB.pairs
        [ "chan_id" .= f1,
          "capacity" .= f2,
          "closed_height" .= f3,
          "chan_point" .= f4
        ]
    )

instance HsJSONPB.FromJSONPB ClosedChannelUpdate where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ClosedChannelUpdate"
        ( \obj ->
            (Hs.pure ClosedChannelUpdate) <*> obj .: "chan_id"
              <*> obj .: "capacity"
              <*> obj .: "closed_height"
              <*> obj .: "chan_point"
        )
    )

instance HsJSONPB.ToJSON ClosedChannelUpdate where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ClosedChannelUpdate where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ClosedChannelUpdate where
  declareNamedSchema _ =
    do
      let declare_chan_id = HsJSONPB.declareSchemaRef
      closedChannelUpdateChanId <- declare_chan_id Proxy.Proxy
      let declare_capacity = HsJSONPB.declareSchemaRef
      closedChannelUpdateCapacity <- declare_capacity Proxy.Proxy
      let declare_closed_height = HsJSONPB.declareSchemaRef
      closedChannelUpdateClosedHeight <-
        declare_closed_height
          Proxy.Proxy
      let declare_chan_point = HsJSONPB.declareSchemaRef
      closedChannelUpdateChanPoint <- declare_chan_point Proxy.Proxy
      let _ =
            Hs.pure ClosedChannelUpdate
              <*> HsJSONPB.asProxy declare_chan_id
              <*> HsJSONPB.asProxy declare_capacity
              <*> HsJSONPB.asProxy declare_closed_height
              <*> HsJSONPB.asProxy declare_chan_point
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ClosedChannelUpdate",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("chan_id", closedChannelUpdateChanId),
                          ("capacity", closedChannelUpdateCapacity),
                          ( "closed_height",
                            closedChannelUpdateClosedHeight
                          ),
                          ( "chan_point",
                            closedChannelUpdateChanPoint
                          )
                        ]
                  }
            }
        )

data HopHint
  = HopHint
      { hopHintNodeId :: Hs.Text,
        hopHintChanId :: Hs.Word64,
        hopHintFeeBaseMsat :: Hs.Word32,
        hopHintFeeProportionalMillionths :: Hs.Word32,
        hopHintCltvExpiryDelta :: Hs.Word32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named HopHint where
  nameOf _ = (Hs.fromString "HopHint")

instance HsProtobuf.HasDefault HopHint

instance HsProtobuf.Message HopHint where
  encodeMessage
    _
    HopHint
      { hopHintNodeId = hopHintNodeId,
        hopHintChanId = hopHintChanId,
        hopHintFeeBaseMsat = hopHintFeeBaseMsat,
        hopHintFeeProportionalMillionths =
          hopHintFeeProportionalMillionths,
        hopHintCltvExpiryDelta = hopHintCltvExpiryDelta
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                hopHintNodeId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                hopHintChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                hopHintFeeBaseMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                hopHintFeeProportionalMillionths
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                hopHintCltvExpiryDelta
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure HopHint)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "node_id")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "chan_id")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "fee_base_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "fee_proportional_millionths")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "cltv_expiry_delta")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB HopHint where
  toJSONPB (HopHint f1 f2 f3 f4 f5) =
    ( HsJSONPB.object
        [ "node_id" .= f1,
          "chan_id" .= f2,
          "fee_base_msat" .= f3,
          "fee_proportional_millionths" .= f4,
          "cltv_expiry_delta" .= f5
        ]
    )
  toEncodingPB (HopHint f1 f2 f3 f4 f5) =
    ( HsJSONPB.pairs
        [ "node_id" .= f1,
          "chan_id" .= f2,
          "fee_base_msat" .= f3,
          "fee_proportional_millionths" .= f4,
          "cltv_expiry_delta" .= f5
        ]
    )

instance HsJSONPB.FromJSONPB HopHint where
  parseJSONPB =
    ( HsJSONPB.withObject
        "HopHint"
        ( \obj ->
            (Hs.pure HopHint) <*> obj .: "node_id" <*> obj .: "chan_id"
              <*> obj .: "fee_base_msat"
              <*> obj .: "fee_proportional_millionths"
              <*> obj .: "cltv_expiry_delta"
        )
    )

instance HsJSONPB.ToJSON HopHint where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON HopHint where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema HopHint where
  declareNamedSchema _ =
    do
      let declare_node_id = HsJSONPB.declareSchemaRef
      hopHintNodeId <- declare_node_id Proxy.Proxy
      let declare_chan_id = HsJSONPB.declareSchemaRef
      hopHintChanId <- declare_chan_id Proxy.Proxy
      let declare_fee_base_msat = HsJSONPB.declareSchemaRef
      hopHintFeeBaseMsat <- declare_fee_base_msat Proxy.Proxy
      let declare_fee_proportional_millionths = HsJSONPB.declareSchemaRef
      hopHintFeeProportionalMillionths <-
        declare_fee_proportional_millionths
          Proxy.Proxy
      let declare_cltv_expiry_delta = HsJSONPB.declareSchemaRef
      hopHintCltvExpiryDelta <- declare_cltv_expiry_delta Proxy.Proxy
      let _ =
            Hs.pure HopHint <*> HsJSONPB.asProxy declare_node_id
              <*> HsJSONPB.asProxy declare_chan_id
              <*> HsJSONPB.asProxy declare_fee_base_msat
              <*> HsJSONPB.asProxy declare_fee_proportional_millionths
              <*> HsJSONPB.asProxy declare_cltv_expiry_delta
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "HopHint",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("node_id", hopHintNodeId),
                          ("chan_id", hopHintChanId),
                          ("fee_base_msat", hopHintFeeBaseMsat),
                          ( "fee_proportional_millionths",
                            hopHintFeeProportionalMillionths
                          ),
                          ( "cltv_expiry_delta",
                            hopHintCltvExpiryDelta
                          )
                        ]
                  }
            }
        )

data RouteHint
  = RouteHint
      { routeHintHopHints ::
          Hs.Vector
            LndGrpc.HopHint
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named RouteHint where
  nameOf _ = (Hs.fromString "RouteHint")

instance HsProtobuf.HasDefault RouteHint

instance HsProtobuf.Message RouteHint where
  encodeMessage _ RouteHint {routeHintHopHints = routeHintHopHints} =
    ( Hs.mconcat
        [ ( HsProtobuf.encodeMessageField
              (HsProtobuf.FieldNumber 1)
              ( Hs.coerce @(Hs.Vector LndGrpc.HopHint)
                  @(HsProtobuf.NestedVec LndGrpc.HopHint)
                  routeHintHopHints
              )
          )
        ]
    )
  decodeMessage _ =
    (Hs.pure RouteHint)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.HopHint))
              @(_ (Hs.Vector LndGrpc.HopHint))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "HopHint"))
          )
          (HsProtobuf.Single "hop_hints")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB RouteHint where
  toJSONPB (RouteHint f1) = (HsJSONPB.object ["hop_hints" .= f1])
  toEncodingPB (RouteHint f1) = (HsJSONPB.pairs ["hop_hints" .= f1])

instance HsJSONPB.FromJSONPB RouteHint where
  parseJSONPB =
    ( HsJSONPB.withObject
        "RouteHint"
        (\obj -> (Hs.pure RouteHint) <*> obj .: "hop_hints")
    )

instance HsJSONPB.ToJSON RouteHint where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON RouteHint where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema RouteHint where
  declareNamedSchema _ =
    do
      let declare_hop_hints = HsJSONPB.declareSchemaRef
      routeHintHopHints <- declare_hop_hints Proxy.Proxy
      let _ = Hs.pure RouteHint <*> HsJSONPB.asProxy declare_hop_hints
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "RouteHint",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("hop_hints", routeHintHopHints)]
                  }
            }
        )

data Invoice
  = Invoice
      { invoiceMemo :: Hs.Text,
        invoiceRPreimage :: Hs.ByteString,
        invoiceRHash :: Hs.ByteString,
        invoiceValue :: Hs.Int64,
        invoiceValueMsat :: Hs.Int64,
        invoiceSettled :: Hs.Bool,
        invoiceCreationDate :: Hs.Int64,
        invoiceSettleDate :: Hs.Int64,
        invoicePaymentRequest :: Hs.Text,
        invoiceDescriptionHash :: Hs.ByteString,
        invoiceExpiry :: Hs.Int64,
        invoiceFallbackAddr :: Hs.Text,
        invoiceCltvExpiry :: Hs.Word64,
        invoiceRouteHints :: Hs.Vector LndGrpc.RouteHint,
        invoicePrivate :: Hs.Bool,
        invoiceAddIndex :: Hs.Word64,
        invoiceSettleIndex :: Hs.Word64,
        invoiceAmtPaid :: Hs.Int64,
        invoiceAmtPaidSat :: Hs.Int64,
        invoiceAmtPaidMsat :: Hs.Int64,
        invoiceState :: HsProtobuf.Enumerated LndGrpc.Invoice_InvoiceState,
        invoiceHtlcs :: Hs.Vector LndGrpc.InvoiceHTLC,
        invoiceFeatures :: Hs.Map Hs.Word32 (Hs.Maybe LndGrpc.Feature),
        invoiceIsKeysend :: Hs.Bool
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Invoice where
  nameOf _ = (Hs.fromString "Invoice")

instance HsProtobuf.HasDefault Invoice

instance HsProtobuf.Message Invoice where
  encodeMessage
    _
    Invoice
      { invoiceMemo = invoiceMemo,
        invoiceRPreimage = invoiceRPreimage,
        invoiceRHash = invoiceRHash,
        invoiceValue = invoiceValue,
        invoiceValueMsat = invoiceValueMsat,
        invoiceSettled = invoiceSettled,
        invoiceCreationDate = invoiceCreationDate,
        invoiceSettleDate = invoiceSettleDate,
        invoicePaymentRequest = invoicePaymentRequest,
        invoiceDescriptionHash = invoiceDescriptionHash,
        invoiceExpiry = invoiceExpiry,
        invoiceFallbackAddr = invoiceFallbackAddr,
        invoiceCltvExpiry = invoiceCltvExpiry,
        invoiceRouteHints = invoiceRouteHints,
        invoicePrivate = invoicePrivate,
        invoiceAddIndex = invoiceAddIndex,
        invoiceSettleIndex = invoiceSettleIndex,
        invoiceAmtPaid = invoiceAmtPaid,
        invoiceAmtPaidSat = invoiceAmtPaidSat,
        invoiceAmtPaidMsat = invoiceAmtPaidMsat,
        invoiceState = invoiceState,
        invoiceHtlcs = invoiceHtlcs,
        invoiceFeatures = invoiceFeatures,
        invoiceIsKeysend = invoiceIsKeysend
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                invoiceMemo
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                invoiceRPreimage
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                invoiceRHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                invoiceValue
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 23)
                invoiceValueMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                invoiceSettled
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                invoiceCreationDate
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                invoiceSettleDate
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                invoicePaymentRequest
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                invoiceDescriptionHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                invoiceExpiry
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 12)
                invoiceFallbackAddr
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 13)
                invoiceCltvExpiry
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 14)
                ( Hs.coerce @(Hs.Vector LndGrpc.RouteHint)
                    @(HsProtobuf.NestedVec LndGrpc.RouteHint)
                    invoiceRouteHints
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 15)
                invoicePrivate
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 16)
                invoiceAddIndex
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 17)
                invoiceSettleIndex
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 18)
                invoiceAmtPaid
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 19)
                invoiceAmtPaidSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 20)
                invoiceAmtPaidMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 21)
                invoiceState
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 22)
                ( Hs.coerce @(Hs.Vector LndGrpc.InvoiceHTLC)
                    @(HsProtobuf.NestedVec LndGrpc.InvoiceHTLC)
                    invoiceHtlcs
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 24)
                ( Hs.unsafeCoerce @(Hs.Map Hs.Word32 (Hs.Maybe LndGrpc.Feature))
                    @(Hs.Map Hs.Word32 (HsProtobuf.Nested LndGrpc.Feature))
                    invoiceFeatures
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 25)
                invoiceIsKeysend
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure Invoice)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 23)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 10)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 11)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 12)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 13)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.RouteHint))
              @(_ (Hs.Vector LndGrpc.RouteHint))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 14)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 15)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 16)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 17)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 18)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 19)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 20)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 21)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.InvoiceHTLC))
              @(_ (Hs.Vector LndGrpc.InvoiceHTLC))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 22)
              )
          )
      <*> ( Hs.unsafeCoerce
              @(_ (Hs.Map Hs.Word32 (HsProtobuf.Nested LndGrpc.Feature)))
              @(_ (Hs.Map Hs.Word32 (Hs.Maybe LndGrpc.Feature)))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 24)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 25)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "memo")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "r_preimage")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "r_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "value")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 23)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "value_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "settled")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "creation_date")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "settle_date")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "payment_request")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "description_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "expiry")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 12)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "fallback_addr")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 13)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "cltv_expiry")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 14)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "RouteHint"))
          )
          (HsProtobuf.Single "route_hints")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 15)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "private")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 16)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "add_index")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 17)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "settle_index")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 18)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amt_paid")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 19)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amt_paid_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 20)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "amt_paid_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 21)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "InvoiceState"))
          )
          (HsProtobuf.Single "state")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 22)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "InvoiceHTLC"))
          )
          (HsProtobuf.Single "htlcs")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 24)
          ( HsProtobuf.Map
              HsProtobuf.UInt32
              (HsProtobuf.Named (HsProtobuf.Single "Feature"))
          )
          (HsProtobuf.Single "features")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 25)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "is_keysend")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB Invoice where
  toJSONPB
    ( Invoice
        f1
        f3
        f4
        f5
        f23
        f6
        f7
        f8
        f9
        f10
        f11
        f12
        f13
        f14
        f15
        f16
        f17
        f18
        f19
        f20
        f21
        f22
        f24
        f25
      ) =
      ( HsJSONPB.object
          [ "memo" .= f1,
            "r_preimage" .= f3,
            "r_hash" .= f4,
            "value" .= f5,
            "value_msat" .= f23,
            "settled" .= f6,
            "creation_date" .= f7,
            "settle_date" .= f8,
            "payment_request" .= f9,
            "description_hash" .= f10,
            "expiry" .= f11,
            "fallback_addr" .= f12,
            "cltv_expiry" .= f13,
            "route_hints" .= f14,
            "private" .= f15,
            "add_index" .= f16,
            "settle_index" .= f17,
            "amt_paid" .= f18,
            "amt_paid_sat" .= f19,
            "amt_paid_msat" .= f20,
            "state" .= f21,
            "htlcs" .= f22,
            "features" .= f24,
            "is_keysend" .= f25
          ]
      )
  toEncodingPB
    ( Invoice
        f1
        f3
        f4
        f5
        f23
        f6
        f7
        f8
        f9
        f10
        f11
        f12
        f13
        f14
        f15
        f16
        f17
        f18
        f19
        f20
        f21
        f22
        f24
        f25
      ) =
      ( HsJSONPB.pairs
          [ "memo" .= f1,
            "r_preimage" .= f3,
            "r_hash" .= f4,
            "value" .= f5,
            "value_msat" .= f23,
            "settled" .= f6,
            "creation_date" .= f7,
            "settle_date" .= f8,
            "payment_request" .= f9,
            "description_hash" .= f10,
            "expiry" .= f11,
            "fallback_addr" .= f12,
            "cltv_expiry" .= f13,
            "route_hints" .= f14,
            "private" .= f15,
            "add_index" .= f16,
            "settle_index" .= f17,
            "amt_paid" .= f18,
            "amt_paid_sat" .= f19,
            "amt_paid_msat" .= f20,
            "state" .= f21,
            "htlcs" .= f22,
            "features" .= f24,
            "is_keysend" .= f25
          ]
      )

instance HsJSONPB.FromJSONPB Invoice where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Invoice"
        ( \obj ->
            (Hs.pure Invoice) <*> obj .: "memo" <*> obj .: "r_preimage"
              <*> obj .: "r_hash"
              <*> obj .: "value"
              <*> obj .: "value_msat"
              <*> obj .: "settled"
              <*> obj .: "creation_date"
              <*> obj .: "settle_date"
              <*> obj .: "payment_request"
              <*> obj .: "description_hash"
              <*> obj .: "expiry"
              <*> obj .: "fallback_addr"
              <*> obj .: "cltv_expiry"
              <*> obj .: "route_hints"
              <*> obj .: "private"
              <*> obj .: "add_index"
              <*> obj .: "settle_index"
              <*> obj .: "amt_paid"
              <*> obj .: "amt_paid_sat"
              <*> obj .: "amt_paid_msat"
              <*> obj .: "state"
              <*> obj .: "htlcs"
              <*> obj .: "features"
              <*> obj .: "is_keysend"
        )
    )

instance HsJSONPB.ToJSON Invoice where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Invoice where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema Invoice where
  declareNamedSchema _ =
    do
      let declare_memo = HsJSONPB.declareSchemaRef
      invoiceMemo <- declare_memo Proxy.Proxy
      let declare_r_preimage = HsJSONPB.declareSchemaRef
      invoiceRPreimage <- declare_r_preimage Proxy.Proxy
      let declare_r_hash = HsJSONPB.declareSchemaRef
      invoiceRHash <- declare_r_hash Proxy.Proxy
      let declare_value = HsJSONPB.declareSchemaRef
      invoiceValue <- declare_value Proxy.Proxy
      let declare_value_msat = HsJSONPB.declareSchemaRef
      invoiceValueMsat <- declare_value_msat Proxy.Proxy
      let declare_settled = HsJSONPB.declareSchemaRef
      invoiceSettled <- declare_settled Proxy.Proxy
      let declare_creation_date = HsJSONPB.declareSchemaRef
      invoiceCreationDate <- declare_creation_date Proxy.Proxy
      let declare_settle_date = HsJSONPB.declareSchemaRef
      invoiceSettleDate <- declare_settle_date Proxy.Proxy
      let declare_payment_request = HsJSONPB.declareSchemaRef
      invoicePaymentRequest <- declare_payment_request Proxy.Proxy
      let declare_description_hash = HsJSONPB.declareSchemaRef
      invoiceDescriptionHash <- declare_description_hash Proxy.Proxy
      let declare_expiry = HsJSONPB.declareSchemaRef
      invoiceExpiry <- declare_expiry Proxy.Proxy
      let declare_fallback_addr = HsJSONPB.declareSchemaRef
      invoiceFallbackAddr <- declare_fallback_addr Proxy.Proxy
      let declare_cltv_expiry = HsJSONPB.declareSchemaRef
      invoiceCltvExpiry <- declare_cltv_expiry Proxy.Proxy
      let declare_route_hints = HsJSONPB.declareSchemaRef
      invoiceRouteHints <- declare_route_hints Proxy.Proxy
      let declare_private = HsJSONPB.declareSchemaRef
      invoicePrivate <- declare_private Proxy.Proxy
      let declare_add_index = HsJSONPB.declareSchemaRef
      invoiceAddIndex <- declare_add_index Proxy.Proxy
      let declare_settle_index = HsJSONPB.declareSchemaRef
      invoiceSettleIndex <- declare_settle_index Proxy.Proxy
      let declare_amt_paid = HsJSONPB.declareSchemaRef
      invoiceAmtPaid <- declare_amt_paid Proxy.Proxy
      let declare_amt_paid_sat = HsJSONPB.declareSchemaRef
      invoiceAmtPaidSat <- declare_amt_paid_sat Proxy.Proxy
      let declare_amt_paid_msat = HsJSONPB.declareSchemaRef
      invoiceAmtPaidMsat <- declare_amt_paid_msat Proxy.Proxy
      let declare_state = HsJSONPB.declareSchemaRef
      invoiceState <- declare_state Proxy.Proxy
      let declare_htlcs = HsJSONPB.declareSchemaRef
      invoiceHtlcs <- declare_htlcs Proxy.Proxy
      let declare_features = HsJSONPB.declareSchemaRef
      invoiceFeatures <- declare_features Proxy.Proxy
      let declare_is_keysend = HsJSONPB.declareSchemaRef
      invoiceIsKeysend <- declare_is_keysend Proxy.Proxy
      let _ =
            Hs.pure Invoice <*> HsJSONPB.asProxy declare_memo
              <*> HsJSONPB.asProxy declare_r_preimage
              <*> HsJSONPB.asProxy declare_r_hash
              <*> HsJSONPB.asProxy declare_value
              <*> HsJSONPB.asProxy declare_value_msat
              <*> HsJSONPB.asProxy declare_settled
              <*> HsJSONPB.asProxy declare_creation_date
              <*> HsJSONPB.asProxy declare_settle_date
              <*> HsJSONPB.asProxy declare_payment_request
              <*> HsJSONPB.asProxy declare_description_hash
              <*> HsJSONPB.asProxy declare_expiry
              <*> HsJSONPB.asProxy declare_fallback_addr
              <*> HsJSONPB.asProxy declare_cltv_expiry
              <*> HsJSONPB.asProxy declare_route_hints
              <*> HsJSONPB.asProxy declare_private
              <*> HsJSONPB.asProxy declare_add_index
              <*> HsJSONPB.asProxy declare_settle_index
              <*> HsJSONPB.asProxy declare_amt_paid
              <*> HsJSONPB.asProxy declare_amt_paid_sat
              <*> HsJSONPB.asProxy declare_amt_paid_msat
              <*> HsJSONPB.asProxy declare_state
              <*> HsJSONPB.asProxy declare_htlcs
              <*> HsJSONPB.asProxy declare_features
              <*> HsJSONPB.asProxy declare_is_keysend
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "Invoice",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("memo", invoiceMemo),
                          ("r_preimage", invoiceRPreimage),
                          ("r_hash", invoiceRHash),
                          ("value", invoiceValue),
                          ("value_msat", invoiceValueMsat),
                          ("settled", invoiceSettled),
                          ("creation_date", invoiceCreationDate),
                          ("settle_date", invoiceSettleDate),
                          ("payment_request", invoicePaymentRequest),
                          ( "description_hash",
                            invoiceDescriptionHash
                          ),
                          ("expiry", invoiceExpiry),
                          ("fallback_addr", invoiceFallbackAddr),
                          ("cltv_expiry", invoiceCltvExpiry),
                          ("route_hints", invoiceRouteHints),
                          ("private", invoicePrivate),
                          ("add_index", invoiceAddIndex),
                          ("settle_index", invoiceSettleIndex),
                          ("amt_paid", invoiceAmtPaid),
                          ("amt_paid_sat", invoiceAmtPaidSat),
                          ("amt_paid_msat", invoiceAmtPaidMsat),
                          ("state", invoiceState),
                          ("htlcs", invoiceHtlcs),
                          ("features", invoiceFeatures),
                          ("is_keysend", invoiceIsKeysend)
                        ]
                  }
            }
        )

data Invoice_InvoiceState
  = Invoice_InvoiceStateOPEN
  | Invoice_InvoiceStateSETTLED
  | Invoice_InvoiceStateCANCELED
  | Invoice_InvoiceStateACCEPTED
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Invoice_InvoiceState where
  nameOf _ = (Hs.fromString "Invoice_InvoiceState")

instance HsProtobuf.HasDefault Invoice_InvoiceState

instance Hs.Bounded Invoice_InvoiceState where
  minBound = Invoice_InvoiceStateOPEN
  maxBound = Invoice_InvoiceStateACCEPTED

instance Hs.Ord Invoice_InvoiceState where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum Invoice_InvoiceState where
  toProtoEnumMay 0 = Hs.Just Invoice_InvoiceStateOPEN
  toProtoEnumMay 1 = Hs.Just Invoice_InvoiceStateSETTLED
  toProtoEnumMay 2 = Hs.Just Invoice_InvoiceStateCANCELED
  toProtoEnumMay 3 = Hs.Just Invoice_InvoiceStateACCEPTED
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (Invoice_InvoiceStateOPEN) = 0
  fromProtoEnum (Invoice_InvoiceStateSETTLED) = 1
  fromProtoEnum (Invoice_InvoiceStateCANCELED) = 2
  fromProtoEnum (Invoice_InvoiceStateACCEPTED) = 3

instance HsJSONPB.ToJSONPB Invoice_InvoiceState where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB Invoice_InvoiceState where
  parseJSONPB (HsJSONPB.String "OPEN") =
    Hs.pure Invoice_InvoiceStateOPEN
  parseJSONPB (HsJSONPB.String "SETTLED") =
    Hs.pure Invoice_InvoiceStateSETTLED
  parseJSONPB (HsJSONPB.String "CANCELED") =
    Hs.pure Invoice_InvoiceStateCANCELED
  parseJSONPB (HsJSONPB.String "ACCEPTED") =
    Hs.pure Invoice_InvoiceStateACCEPTED
  parseJSONPB v = (HsJSONPB.typeMismatch "Invoice_InvoiceState" v)

instance HsJSONPB.ToJSON Invoice_InvoiceState where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Invoice_InvoiceState where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite Invoice_InvoiceState

data InvoiceHTLCState
  = InvoiceHTLCStateACCEPTED
  | InvoiceHTLCStateSETTLED
  | InvoiceHTLCStateCANCELED
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named InvoiceHTLCState where
  nameOf _ = (Hs.fromString "InvoiceHTLCState")

instance HsProtobuf.HasDefault InvoiceHTLCState

instance Hs.Bounded InvoiceHTLCState where
  minBound = InvoiceHTLCStateACCEPTED
  maxBound = InvoiceHTLCStateCANCELED

instance Hs.Ord InvoiceHTLCState where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum InvoiceHTLCState where
  toProtoEnumMay 0 = Hs.Just InvoiceHTLCStateACCEPTED
  toProtoEnumMay 1 = Hs.Just InvoiceHTLCStateSETTLED
  toProtoEnumMay 2 = Hs.Just InvoiceHTLCStateCANCELED
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (InvoiceHTLCStateACCEPTED) = 0
  fromProtoEnum (InvoiceHTLCStateSETTLED) = 1
  fromProtoEnum (InvoiceHTLCStateCANCELED) = 2

instance HsJSONPB.ToJSONPB InvoiceHTLCState where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB InvoiceHTLCState where
  parseJSONPB (HsJSONPB.String "ACCEPTED") =
    Hs.pure InvoiceHTLCStateACCEPTED
  parseJSONPB (HsJSONPB.String "SETTLED") =
    Hs.pure InvoiceHTLCStateSETTLED
  parseJSONPB (HsJSONPB.String "CANCELED") =
    Hs.pure InvoiceHTLCStateCANCELED
  parseJSONPB v = (HsJSONPB.typeMismatch "InvoiceHTLCState" v)

instance HsJSONPB.ToJSON InvoiceHTLCState where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON InvoiceHTLCState where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite InvoiceHTLCState

data InvoiceHTLC
  = InvoiceHTLC
      { invoiceHTLCChanId :: Hs.Word64,
        invoiceHTLCHtlcIndex :: Hs.Word64,
        invoiceHTLCAmtMsat :: Hs.Word64,
        invoiceHTLCAcceptHeight :: Hs.Int32,
        invoiceHTLCAcceptTime :: Hs.Int64,
        invoiceHTLCResolveTime :: Hs.Int64,
        invoiceHTLCExpiryHeight :: Hs.Int32,
        invoiceHTLCState :: HsProtobuf.Enumerated LndGrpc.InvoiceHTLCState,
        invoiceHTLCCustomRecords :: Hs.Map Hs.Word64 Hs.ByteString,
        invoiceHTLCMppTotalAmtMsat :: Hs.Word64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named InvoiceHTLC where
  nameOf _ = (Hs.fromString "InvoiceHTLC")

instance HsProtobuf.HasDefault InvoiceHTLC

instance HsProtobuf.Message InvoiceHTLC where
  encodeMessage
    _
    InvoiceHTLC
      { invoiceHTLCChanId = invoiceHTLCChanId,
        invoiceHTLCHtlcIndex = invoiceHTLCHtlcIndex,
        invoiceHTLCAmtMsat = invoiceHTLCAmtMsat,
        invoiceHTLCAcceptHeight = invoiceHTLCAcceptHeight,
        invoiceHTLCAcceptTime = invoiceHTLCAcceptTime,
        invoiceHTLCResolveTime = invoiceHTLCResolveTime,
        invoiceHTLCExpiryHeight = invoiceHTLCExpiryHeight,
        invoiceHTLCState = invoiceHTLCState,
        invoiceHTLCCustomRecords = invoiceHTLCCustomRecords,
        invoiceHTLCMppTotalAmtMsat = invoiceHTLCMppTotalAmtMsat
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                invoiceHTLCChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                invoiceHTLCHtlcIndex
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                invoiceHTLCAmtMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                invoiceHTLCAcceptHeight
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                invoiceHTLCAcceptTime
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                invoiceHTLCResolveTime
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                invoiceHTLCExpiryHeight
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                invoiceHTLCState
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                invoiceHTLCCustomRecords
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                invoiceHTLCMppTotalAmtMsat
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure InvoiceHTLC)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 10)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "chan_id")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "htlc_index")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "amt_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "accept_height")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "accept_time")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "resolve_time")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.Int32)
          (HsProtobuf.Single "expiry_height")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "InvoiceHTLCState"))
          )
          (HsProtobuf.Single "state")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Map HsProtobuf.UInt64 HsProtobuf.Bytes)
          (HsProtobuf.Single "custom_records")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "mpp_total_amt_msat")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB InvoiceHTLC where
  toJSONPB (InvoiceHTLC f1 f2 f3 f4 f5 f6 f7 f8 f9 f10) =
    ( HsJSONPB.object
        [ "chan_id" .= f1,
          "htlc_index" .= f2,
          "amt_msat" .= f3,
          "accept_height" .= f4,
          "accept_time" .= f5,
          "resolve_time" .= f6,
          "expiry_height" .= f7,
          "state" .= f8,
          "custom_records" .= f9,
          "mpp_total_amt_msat" .= f10
        ]
    )
  toEncodingPB (InvoiceHTLC f1 f2 f3 f4 f5 f6 f7 f8 f9 f10) =
    ( HsJSONPB.pairs
        [ "chan_id" .= f1,
          "htlc_index" .= f2,
          "amt_msat" .= f3,
          "accept_height" .= f4,
          "accept_time" .= f5,
          "resolve_time" .= f6,
          "expiry_height" .= f7,
          "state" .= f8,
          "custom_records" .= f9,
          "mpp_total_amt_msat" .= f10
        ]
    )

instance HsJSONPB.FromJSONPB InvoiceHTLC where
  parseJSONPB =
    ( HsJSONPB.withObject
        "InvoiceHTLC"
        ( \obj ->
            (Hs.pure InvoiceHTLC) <*> obj .: "chan_id" <*> obj .: "htlc_index"
              <*> obj .: "amt_msat"
              <*> obj .: "accept_height"
              <*> obj .: "accept_time"
              <*> obj .: "resolve_time"
              <*> obj .: "expiry_height"
              <*> obj .: "state"
              <*> obj .: "custom_records"
              <*> obj .: "mpp_total_amt_msat"
        )
    )

instance HsJSONPB.ToJSON InvoiceHTLC where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON InvoiceHTLC where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema InvoiceHTLC where
  declareNamedSchema _ =
    do
      let declare_chan_id = HsJSONPB.declareSchemaRef
      invoiceHTLCChanId <- declare_chan_id Proxy.Proxy
      let declare_htlc_index = HsJSONPB.declareSchemaRef
      invoiceHTLCHtlcIndex <- declare_htlc_index Proxy.Proxy
      let declare_amt_msat = HsJSONPB.declareSchemaRef
      invoiceHTLCAmtMsat <- declare_amt_msat Proxy.Proxy
      let declare_accept_height = HsJSONPB.declareSchemaRef
      invoiceHTLCAcceptHeight <- declare_accept_height Proxy.Proxy
      let declare_accept_time = HsJSONPB.declareSchemaRef
      invoiceHTLCAcceptTime <- declare_accept_time Proxy.Proxy
      let declare_resolve_time = HsJSONPB.declareSchemaRef
      invoiceHTLCResolveTime <- declare_resolve_time Proxy.Proxy
      let declare_expiry_height = HsJSONPB.declareSchemaRef
      invoiceHTLCExpiryHeight <- declare_expiry_height Proxy.Proxy
      let declare_state = HsJSONPB.declareSchemaRef
      invoiceHTLCState <- declare_state Proxy.Proxy
      let declare_custom_records = HsJSONPB.declareSchemaRef
      invoiceHTLCCustomRecords <- declare_custom_records Proxy.Proxy
      let declare_mpp_total_amt_msat = HsJSONPB.declareSchemaRef
      invoiceHTLCMppTotalAmtMsat <-
        declare_mpp_total_amt_msat
          Proxy.Proxy
      let _ =
            Hs.pure InvoiceHTLC <*> HsJSONPB.asProxy declare_chan_id
              <*> HsJSONPB.asProxy declare_htlc_index
              <*> HsJSONPB.asProxy declare_amt_msat
              <*> HsJSONPB.asProxy declare_accept_height
              <*> HsJSONPB.asProxy declare_accept_time
              <*> HsJSONPB.asProxy declare_resolve_time
              <*> HsJSONPB.asProxy declare_expiry_height
              <*> HsJSONPB.asProxy declare_state
              <*> HsJSONPB.asProxy declare_custom_records
              <*> HsJSONPB.asProxy declare_mpp_total_amt_msat
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "InvoiceHTLC",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("chan_id", invoiceHTLCChanId),
                          ("htlc_index", invoiceHTLCHtlcIndex),
                          ("amt_msat", invoiceHTLCAmtMsat),
                          ("accept_height", invoiceHTLCAcceptHeight),
                          ("accept_time", invoiceHTLCAcceptTime),
                          ("resolve_time", invoiceHTLCResolveTime),
                          ("expiry_height", invoiceHTLCExpiryHeight),
                          ("state", invoiceHTLCState),
                          ( "custom_records",
                            invoiceHTLCCustomRecords
                          ),
                          ( "mpp_total_amt_msat",
                            invoiceHTLCMppTotalAmtMsat
                          )
                        ]
                  }
            }
        )

data AddInvoiceResponse
  = AddInvoiceResponse
      { addInvoiceResponseRHash ::
          Hs.ByteString,
        addInvoiceResponsePaymentRequest :: Hs.Text,
        addInvoiceResponseAddIndex :: Hs.Word64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named AddInvoiceResponse where
  nameOf _ = (Hs.fromString "AddInvoiceResponse")

instance HsProtobuf.HasDefault AddInvoiceResponse

instance HsProtobuf.Message AddInvoiceResponse where
  encodeMessage
    _
    AddInvoiceResponse
      { addInvoiceResponseRHash =
          addInvoiceResponseRHash,
        addInvoiceResponsePaymentRequest =
          addInvoiceResponsePaymentRequest,
        addInvoiceResponseAddIndex = addInvoiceResponseAddIndex
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                addInvoiceResponseRHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                addInvoiceResponsePaymentRequest
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 16)
                addInvoiceResponseAddIndex
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure AddInvoiceResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 16)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "r_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "payment_request")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 16)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "add_index")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB AddInvoiceResponse where
  toJSONPB (AddInvoiceResponse f1 f2 f16) =
    ( HsJSONPB.object
        ["r_hash" .= f1, "payment_request" .= f2, "add_index" .= f16]
    )
  toEncodingPB (AddInvoiceResponse f1 f2 f16) =
    ( HsJSONPB.pairs
        ["r_hash" .= f1, "payment_request" .= f2, "add_index" .= f16]
    )

instance HsJSONPB.FromJSONPB AddInvoiceResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "AddInvoiceResponse"
        ( \obj ->
            (Hs.pure AddInvoiceResponse) <*> obj .: "r_hash"
              <*> obj .: "payment_request"
              <*> obj .: "add_index"
        )
    )

instance HsJSONPB.ToJSON AddInvoiceResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON AddInvoiceResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema AddInvoiceResponse where
  declareNamedSchema _ =
    do
      let declare_r_hash = HsJSONPB.declareSchemaRef
      addInvoiceResponseRHash <- declare_r_hash Proxy.Proxy
      let declare_payment_request = HsJSONPB.declareSchemaRef
      addInvoiceResponsePaymentRequest <-
        declare_payment_request
          Proxy.Proxy
      let declare_add_index = HsJSONPB.declareSchemaRef
      addInvoiceResponseAddIndex <- declare_add_index Proxy.Proxy
      let _ =
            Hs.pure AddInvoiceResponse
              <*> HsJSONPB.asProxy declare_r_hash
              <*> HsJSONPB.asProxy declare_payment_request
              <*> HsJSONPB.asProxy declare_add_index
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "AddInvoiceResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("r_hash", addInvoiceResponseRHash),
                          ( "payment_request",
                            addInvoiceResponsePaymentRequest
                          ),
                          ( "add_index",
                            addInvoiceResponseAddIndex
                          )
                        ]
                  }
            }
        )

data PaymentHash
  = PaymentHash
      { paymentHashRHashStr :: Hs.Text,
        paymentHashRHash :: Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PaymentHash where
  nameOf _ = (Hs.fromString "PaymentHash")

instance HsProtobuf.HasDefault PaymentHash

instance HsProtobuf.Message PaymentHash where
  encodeMessage
    _
    PaymentHash
      { paymentHashRHashStr = paymentHashRHashStr,
        paymentHashRHash = paymentHashRHash
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                paymentHashRHashStr
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                paymentHashRHash
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PaymentHash)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "r_hash_str")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "r_hash")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB PaymentHash where
  toJSONPB (PaymentHash f1 f2) =
    (HsJSONPB.object ["r_hash_str" .= f1, "r_hash" .= f2])
  toEncodingPB (PaymentHash f1 f2) =
    (HsJSONPB.pairs ["r_hash_str" .= f1, "r_hash" .= f2])

instance HsJSONPB.FromJSONPB PaymentHash where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PaymentHash"
        ( \obj ->
            (Hs.pure PaymentHash) <*> obj .: "r_hash_str" <*> obj .: "r_hash"
        )
    )

instance HsJSONPB.ToJSON PaymentHash where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PaymentHash where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PaymentHash where
  declareNamedSchema _ =
    do
      let declare_r_hash_str = HsJSONPB.declareSchemaRef
      paymentHashRHashStr <- declare_r_hash_str Proxy.Proxy
      let declare_r_hash = HsJSONPB.declareSchemaRef
      paymentHashRHash <- declare_r_hash Proxy.Proxy
      let _ =
            Hs.pure PaymentHash <*> HsJSONPB.asProxy declare_r_hash_str
              <*> HsJSONPB.asProxy declare_r_hash
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PaymentHash",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("r_hash_str", paymentHashRHashStr),
                          ("r_hash", paymentHashRHash)
                        ]
                  }
            }
        )

data ListInvoiceRequest
  = ListInvoiceRequest
      { listInvoiceRequestPendingOnly ::
          Hs.Bool,
        listInvoiceRequestIndexOffset :: Hs.Word64,
        listInvoiceRequestNumMaxInvoices :: Hs.Word64,
        listInvoiceRequestReversed :: Hs.Bool
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ListInvoiceRequest where
  nameOf _ = (Hs.fromString "ListInvoiceRequest")

instance HsProtobuf.HasDefault ListInvoiceRequest

instance HsProtobuf.Message ListInvoiceRequest where
  encodeMessage
    _
    ListInvoiceRequest
      { listInvoiceRequestPendingOnly =
          listInvoiceRequestPendingOnly,
        listInvoiceRequestIndexOffset = listInvoiceRequestIndexOffset,
        listInvoiceRequestNumMaxInvoices =
          listInvoiceRequestNumMaxInvoices,
        listInvoiceRequestReversed = listInvoiceRequestReversed
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                listInvoiceRequestPendingOnly
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                listInvoiceRequestIndexOffset
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                listInvoiceRequestNumMaxInvoices
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                listInvoiceRequestReversed
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ListInvoiceRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "pending_only")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "index_offset")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "num_max_invoices")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "reversed")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ListInvoiceRequest where
  toJSONPB (ListInvoiceRequest f1 f4 f5 f6) =
    ( HsJSONPB.object
        [ "pending_only" .= f1,
          "index_offset" .= f4,
          "num_max_invoices" .= f5,
          "reversed" .= f6
        ]
    )
  toEncodingPB (ListInvoiceRequest f1 f4 f5 f6) =
    ( HsJSONPB.pairs
        [ "pending_only" .= f1,
          "index_offset" .= f4,
          "num_max_invoices" .= f5,
          "reversed" .= f6
        ]
    )

instance HsJSONPB.FromJSONPB ListInvoiceRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ListInvoiceRequest"
        ( \obj ->
            (Hs.pure ListInvoiceRequest) <*> obj .: "pending_only"
              <*> obj .: "index_offset"
              <*> obj .: "num_max_invoices"
              <*> obj .: "reversed"
        )
    )

instance HsJSONPB.ToJSON ListInvoiceRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ListInvoiceRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ListInvoiceRequest where
  declareNamedSchema _ =
    do
      let declare_pending_only = HsJSONPB.declareSchemaRef
      listInvoiceRequestPendingOnly <- declare_pending_only Proxy.Proxy
      let declare_index_offset = HsJSONPB.declareSchemaRef
      listInvoiceRequestIndexOffset <- declare_index_offset Proxy.Proxy
      let declare_num_max_invoices = HsJSONPB.declareSchemaRef
      listInvoiceRequestNumMaxInvoices <-
        declare_num_max_invoices
          Proxy.Proxy
      let declare_reversed = HsJSONPB.declareSchemaRef
      listInvoiceRequestReversed <- declare_reversed Proxy.Proxy
      let _ =
            Hs.pure ListInvoiceRequest
              <*> HsJSONPB.asProxy declare_pending_only
              <*> HsJSONPB.asProxy declare_index_offset
              <*> HsJSONPB.asProxy declare_num_max_invoices
              <*> HsJSONPB.asProxy declare_reversed
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ListInvoiceRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "pending_only",
                            listInvoiceRequestPendingOnly
                          ),
                          ( "index_offset",
                            listInvoiceRequestIndexOffset
                          ),
                          ( "num_max_invoices",
                            listInvoiceRequestNumMaxInvoices
                          ),
                          ("reversed", listInvoiceRequestReversed)
                        ]
                  }
            }
        )

data ListInvoiceResponse
  = ListInvoiceResponse
      { listInvoiceResponseInvoices ::
          Hs.Vector
            LndGrpc.Invoice,
        listInvoiceResponseLastIndexOffset :: Hs.Word64,
        listInvoiceResponseFirstIndexOffset :: Hs.Word64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ListInvoiceResponse where
  nameOf _ = (Hs.fromString "ListInvoiceResponse")

instance HsProtobuf.HasDefault ListInvoiceResponse

instance HsProtobuf.Message ListInvoiceResponse where
  encodeMessage
    _
    ListInvoiceResponse
      { listInvoiceResponseInvoices =
          listInvoiceResponseInvoices,
        listInvoiceResponseLastIndexOffset =
          listInvoiceResponseLastIndexOffset,
        listInvoiceResponseFirstIndexOffset =
          listInvoiceResponseFirstIndexOffset
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector LndGrpc.Invoice)
                    @(HsProtobuf.NestedVec LndGrpc.Invoice)
                    listInvoiceResponseInvoices
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                listInvoiceResponseLastIndexOffset
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                listInvoiceResponseFirstIndexOffset
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ListInvoiceResponse)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.Invoice))
              @(_ (Hs.Vector LndGrpc.Invoice))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "Invoice"))
          )
          (HsProtobuf.Single "invoices")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "last_index_offset")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "first_index_offset")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ListInvoiceResponse where
  toJSONPB (ListInvoiceResponse f1 f2 f3) =
    ( HsJSONPB.object
        [ "invoices" .= f1,
          "last_index_offset" .= f2,
          "first_index_offset" .= f3
        ]
    )
  toEncodingPB (ListInvoiceResponse f1 f2 f3) =
    ( HsJSONPB.pairs
        [ "invoices" .= f1,
          "last_index_offset" .= f2,
          "first_index_offset" .= f3
        ]
    )

instance HsJSONPB.FromJSONPB ListInvoiceResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ListInvoiceResponse"
        ( \obj ->
            (Hs.pure ListInvoiceResponse) <*> obj .: "invoices"
              <*> obj .: "last_index_offset"
              <*> obj .: "first_index_offset"
        )
    )

instance HsJSONPB.ToJSON ListInvoiceResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ListInvoiceResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ListInvoiceResponse where
  declareNamedSchema _ =
    do
      let declare_invoices = HsJSONPB.declareSchemaRef
      listInvoiceResponseInvoices <- declare_invoices Proxy.Proxy
      let declare_last_index_offset = HsJSONPB.declareSchemaRef
      listInvoiceResponseLastIndexOffset <-
        declare_last_index_offset
          Proxy.Proxy
      let declare_first_index_offset = HsJSONPB.declareSchemaRef
      listInvoiceResponseFirstIndexOffset <-
        declare_first_index_offset
          Proxy.Proxy
      let _ =
            Hs.pure ListInvoiceResponse
              <*> HsJSONPB.asProxy declare_invoices
              <*> HsJSONPB.asProxy declare_last_index_offset
              <*> HsJSONPB.asProxy declare_first_index_offset
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ListInvoiceResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("invoices", listInvoiceResponseInvoices),
                          ( "last_index_offset",
                            listInvoiceResponseLastIndexOffset
                          ),
                          ( "first_index_offset",
                            listInvoiceResponseFirstIndexOffset
                          )
                        ]
                  }
            }
        )

data InvoiceSubscription
  = InvoiceSubscription
      { invoiceSubscriptionAddIndex ::
          Hs.Word64,
        invoiceSubscriptionSettleIndex :: Hs.Word64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named InvoiceSubscription where
  nameOf _ = (Hs.fromString "InvoiceSubscription")

instance HsProtobuf.HasDefault InvoiceSubscription

instance HsProtobuf.Message InvoiceSubscription where
  encodeMessage
    _
    InvoiceSubscription
      { invoiceSubscriptionAddIndex =
          invoiceSubscriptionAddIndex,
        invoiceSubscriptionSettleIndex = invoiceSubscriptionSettleIndex
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                invoiceSubscriptionAddIndex
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                invoiceSubscriptionSettleIndex
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure InvoiceSubscription)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "add_index")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "settle_index")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB InvoiceSubscription where
  toJSONPB (InvoiceSubscription f1 f2) =
    (HsJSONPB.object ["add_index" .= f1, "settle_index" .= f2])
  toEncodingPB (InvoiceSubscription f1 f2) =
    (HsJSONPB.pairs ["add_index" .= f1, "settle_index" .= f2])

instance HsJSONPB.FromJSONPB InvoiceSubscription where
  parseJSONPB =
    ( HsJSONPB.withObject
        "InvoiceSubscription"
        ( \obj ->
            (Hs.pure InvoiceSubscription) <*> obj .: "add_index"
              <*> obj .: "settle_index"
        )
    )

instance HsJSONPB.ToJSON InvoiceSubscription where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON InvoiceSubscription where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema InvoiceSubscription where
  declareNamedSchema _ =
    do
      let declare_add_index = HsJSONPB.declareSchemaRef
      invoiceSubscriptionAddIndex <- declare_add_index Proxy.Proxy
      let declare_settle_index = HsJSONPB.declareSchemaRef
      invoiceSubscriptionSettleIndex <- declare_settle_index Proxy.Proxy
      let _ =
            Hs.pure InvoiceSubscription
              <*> HsJSONPB.asProxy declare_add_index
              <*> HsJSONPB.asProxy declare_settle_index
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "InvoiceSubscription",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("add_index", invoiceSubscriptionAddIndex),
                          ( "settle_index",
                            invoiceSubscriptionSettleIndex
                          )
                        ]
                  }
            }
        )

data PaymentFailureReason
  = PaymentFailureReasonFAILURE_REASON_NONE
  | PaymentFailureReasonFAILURE_REASON_TIMEOUT
  | PaymentFailureReasonFAILURE_REASON_NO_ROUTE
  | PaymentFailureReasonFAILURE_REASON_ERROR
  | PaymentFailureReasonFAILURE_REASON_INCORRECT_PAYMENT_DETAILS
  | PaymentFailureReasonFAILURE_REASON_INSUFFICIENT_BALANCE
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PaymentFailureReason where
  nameOf _ = (Hs.fromString "PaymentFailureReason")

instance HsProtobuf.HasDefault PaymentFailureReason

instance Hs.Bounded PaymentFailureReason where
  minBound = PaymentFailureReasonFAILURE_REASON_NONE
  maxBound = PaymentFailureReasonFAILURE_REASON_INSUFFICIENT_BALANCE

instance Hs.Ord PaymentFailureReason where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum PaymentFailureReason where
  toProtoEnumMay 0 = Hs.Just PaymentFailureReasonFAILURE_REASON_NONE
  toProtoEnumMay 1 =
    Hs.Just PaymentFailureReasonFAILURE_REASON_TIMEOUT
  toProtoEnumMay 2 =
    Hs.Just PaymentFailureReasonFAILURE_REASON_NO_ROUTE
  toProtoEnumMay 3 = Hs.Just PaymentFailureReasonFAILURE_REASON_ERROR
  toProtoEnumMay 4 =
    Hs.Just
      PaymentFailureReasonFAILURE_REASON_INCORRECT_PAYMENT_DETAILS
  toProtoEnumMay 5 =
    Hs.Just PaymentFailureReasonFAILURE_REASON_INSUFFICIENT_BALANCE
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (PaymentFailureReasonFAILURE_REASON_NONE) = 0
  fromProtoEnum (PaymentFailureReasonFAILURE_REASON_TIMEOUT) = 1
  fromProtoEnum (PaymentFailureReasonFAILURE_REASON_NO_ROUTE) = 2
  fromProtoEnum (PaymentFailureReasonFAILURE_REASON_ERROR) = 3
  fromProtoEnum (PaymentFailureReasonFAILURE_REASON_INCORRECT_PAYMENT_DETAILS) = 4
  fromProtoEnum (PaymentFailureReasonFAILURE_REASON_INSUFFICIENT_BALANCE) = 5

instance HsJSONPB.ToJSONPB PaymentFailureReason where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB PaymentFailureReason where
  parseJSONPB (HsJSONPB.String "FAILURE_REASON_NONE") =
    Hs.pure PaymentFailureReasonFAILURE_REASON_NONE
  parseJSONPB (HsJSONPB.String "FAILURE_REASON_TIMEOUT") =
    Hs.pure PaymentFailureReasonFAILURE_REASON_TIMEOUT
  parseJSONPB (HsJSONPB.String "FAILURE_REASON_NO_ROUTE") =
    Hs.pure PaymentFailureReasonFAILURE_REASON_NO_ROUTE
  parseJSONPB (HsJSONPB.String "FAILURE_REASON_ERROR") =
    Hs.pure PaymentFailureReasonFAILURE_REASON_ERROR
  parseJSONPB (HsJSONPB.String "FAILURE_REASON_INCORRECT_PAYMENT_DETAILS") =
    Hs.pure
      PaymentFailureReasonFAILURE_REASON_INCORRECT_PAYMENT_DETAILS
  parseJSONPB (HsJSONPB.String "FAILURE_REASON_INSUFFICIENT_BALANCE") =
    Hs.pure PaymentFailureReasonFAILURE_REASON_INSUFFICIENT_BALANCE
  parseJSONPB v = (HsJSONPB.typeMismatch "PaymentFailureReason" v)

instance HsJSONPB.ToJSON PaymentFailureReason where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PaymentFailureReason where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite PaymentFailureReason

data Payment
  = Payment
      { paymentPaymentHash :: Hs.Text,
        paymentValue :: Hs.Int64,
        paymentCreationDate :: Hs.Int64,
        paymentFee :: Hs.Int64,
        paymentPaymentPreimage :: Hs.Text,
        paymentValueSat :: Hs.Int64,
        paymentValueMsat :: Hs.Int64,
        paymentPaymentRequest :: Hs.Text,
        paymentStatus ::
          HsProtobuf.Enumerated
            LndGrpc.Payment_PaymentStatus,
        paymentFeeSat :: Hs.Int64,
        paymentFeeMsat :: Hs.Int64,
        paymentCreationTimeNs :: Hs.Int64,
        paymentHtlcs :: Hs.Vector LndGrpc.HTLCAttempt,
        paymentPaymentIndex :: Hs.Word64,
        paymentFailureReason ::
          HsProtobuf.Enumerated
            LndGrpc.PaymentFailureReason
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Payment where
  nameOf _ = (Hs.fromString "Payment")

instance HsProtobuf.HasDefault Payment

instance HsProtobuf.Message Payment where
  encodeMessage
    _
    Payment
      { paymentPaymentHash = paymentPaymentHash,
        paymentValue = paymentValue,
        paymentCreationDate = paymentCreationDate,
        paymentFee = paymentFee,
        paymentPaymentPreimage = paymentPaymentPreimage,
        paymentValueSat = paymentValueSat,
        paymentValueMsat = paymentValueMsat,
        paymentPaymentRequest = paymentPaymentRequest,
        paymentStatus = paymentStatus,
        paymentFeeSat = paymentFeeSat,
        paymentFeeMsat = paymentFeeMsat,
        paymentCreationTimeNs = paymentCreationTimeNs,
        paymentHtlcs = paymentHtlcs,
        paymentPaymentIndex = paymentPaymentIndex,
        paymentFailureReason = paymentFailureReason
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                paymentPaymentHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                paymentValue
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                paymentCreationDate
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                paymentFee
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                paymentPaymentPreimage
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                paymentValueSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                paymentValueMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                paymentPaymentRequest
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                paymentStatus
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                paymentFeeSat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 12)
                paymentFeeMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 13)
                paymentCreationTimeNs
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 14)
                ( Hs.coerce @(Hs.Vector LndGrpc.HTLCAttempt)
                    @(HsProtobuf.NestedVec LndGrpc.HTLCAttempt)
                    paymentHtlcs
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 15)
                paymentPaymentIndex
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 16)
                paymentFailureReason
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure Payment)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 10)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 11)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 12)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 13)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.HTLCAttempt))
              @(_ (Hs.Vector LndGrpc.HTLCAttempt))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 14)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 15)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 16)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "payment_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "value")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "creation_date")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "fee")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "deprecated")
                (HsProtobuf.BoolLit Hs.True)
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "payment_preimage")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "value_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "value_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "payment_request")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "PaymentStatus"))
          )
          (HsProtobuf.Single "status")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "fee_sat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 12)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "fee_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 13)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "creation_time_ns")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 14)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "HTLCAttempt"))
          )
          (HsProtobuf.Single "htlcs")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 15)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "payment_index")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 16)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "PaymentFailureReason"))
          )
          (HsProtobuf.Single "failure_reason")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB Payment where
  toJSONPB (Payment f1 f2 f3 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15 f16) =
    ( HsJSONPB.object
        [ "payment_hash" .= f1,
          "value" .= f2,
          "creation_date" .= f3,
          "fee" .= f5,
          "payment_preimage" .= f6,
          "value_sat" .= f7,
          "value_msat" .= f8,
          "payment_request" .= f9,
          "status" .= f10,
          "fee_sat" .= f11,
          "fee_msat" .= f12,
          "creation_time_ns" .= f13,
          "htlcs" .= f14,
          "payment_index" .= f15,
          "failure_reason" .= f16
        ]
    )
  toEncodingPB (Payment f1 f2 f3 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15 f16) =
    ( HsJSONPB.pairs
        [ "payment_hash" .= f1,
          "value" .= f2,
          "creation_date" .= f3,
          "fee" .= f5,
          "payment_preimage" .= f6,
          "value_sat" .= f7,
          "value_msat" .= f8,
          "payment_request" .= f9,
          "status" .= f10,
          "fee_sat" .= f11,
          "fee_msat" .= f12,
          "creation_time_ns" .= f13,
          "htlcs" .= f14,
          "payment_index" .= f15,
          "failure_reason" .= f16
        ]
    )

instance HsJSONPB.FromJSONPB Payment where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Payment"
        ( \obj ->
            (Hs.pure Payment) <*> obj .: "payment_hash" <*> obj .: "value"
              <*> obj .: "creation_date"
              <*> obj .: "fee"
              <*> obj .: "payment_preimage"
              <*> obj .: "value_sat"
              <*> obj .: "value_msat"
              <*> obj .: "payment_request"
              <*> obj .: "status"
              <*> obj .: "fee_sat"
              <*> obj .: "fee_msat"
              <*> obj .: "creation_time_ns"
              <*> obj .: "htlcs"
              <*> obj .: "payment_index"
              <*> obj .: "failure_reason"
        )
    )

instance HsJSONPB.ToJSON Payment where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Payment where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema Payment where
  declareNamedSchema _ =
    do
      let declare_payment_hash = HsJSONPB.declareSchemaRef
      paymentPaymentHash <- declare_payment_hash Proxy.Proxy
      let declare_value = HsJSONPB.declareSchemaRef
      paymentValue <- declare_value Proxy.Proxy
      let declare_creation_date = HsJSONPB.declareSchemaRef
      paymentCreationDate <- declare_creation_date Proxy.Proxy
      let declare_fee = HsJSONPB.declareSchemaRef
      paymentFee <- declare_fee Proxy.Proxy
      let declare_payment_preimage = HsJSONPB.declareSchemaRef
      paymentPaymentPreimage <- declare_payment_preimage Proxy.Proxy
      let declare_value_sat = HsJSONPB.declareSchemaRef
      paymentValueSat <- declare_value_sat Proxy.Proxy
      let declare_value_msat = HsJSONPB.declareSchemaRef
      paymentValueMsat <- declare_value_msat Proxy.Proxy
      let declare_payment_request = HsJSONPB.declareSchemaRef
      paymentPaymentRequest <- declare_payment_request Proxy.Proxy
      let declare_status = HsJSONPB.declareSchemaRef
      paymentStatus <- declare_status Proxy.Proxy
      let declare_fee_sat = HsJSONPB.declareSchemaRef
      paymentFeeSat <- declare_fee_sat Proxy.Proxy
      let declare_fee_msat = HsJSONPB.declareSchemaRef
      paymentFeeMsat <- declare_fee_msat Proxy.Proxy
      let declare_creation_time_ns = HsJSONPB.declareSchemaRef
      paymentCreationTimeNs <- declare_creation_time_ns Proxy.Proxy
      let declare_htlcs = HsJSONPB.declareSchemaRef
      paymentHtlcs <- declare_htlcs Proxy.Proxy
      let declare_payment_index = HsJSONPB.declareSchemaRef
      paymentPaymentIndex <- declare_payment_index Proxy.Proxy
      let declare_failure_reason = HsJSONPB.declareSchemaRef
      paymentFailureReason <- declare_failure_reason Proxy.Proxy
      let _ =
            Hs.pure Payment <*> HsJSONPB.asProxy declare_payment_hash
              <*> HsJSONPB.asProxy declare_value
              <*> HsJSONPB.asProxy declare_creation_date
              <*> HsJSONPB.asProxy declare_fee
              <*> HsJSONPB.asProxy declare_payment_preimage
              <*> HsJSONPB.asProxy declare_value_sat
              <*> HsJSONPB.asProxy declare_value_msat
              <*> HsJSONPB.asProxy declare_payment_request
              <*> HsJSONPB.asProxy declare_status
              <*> HsJSONPB.asProxy declare_fee_sat
              <*> HsJSONPB.asProxy declare_fee_msat
              <*> HsJSONPB.asProxy declare_creation_time_ns
              <*> HsJSONPB.asProxy declare_htlcs
              <*> HsJSONPB.asProxy declare_payment_index
              <*> HsJSONPB.asProxy declare_failure_reason
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "Payment",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("payment_hash", paymentPaymentHash),
                          ("value", paymentValue),
                          ("creation_date", paymentCreationDate),
                          ("fee", paymentFee),
                          ( "payment_preimage",
                            paymentPaymentPreimage
                          ),
                          ("value_sat", paymentValueSat),
                          ("value_msat", paymentValueMsat),
                          ("payment_request", paymentPaymentRequest),
                          ("status", paymentStatus),
                          ("fee_sat", paymentFeeSat),
                          ("fee_msat", paymentFeeMsat),
                          ("creation_time_ns", paymentCreationTimeNs),
                          ("htlcs", paymentHtlcs),
                          ("payment_index", paymentPaymentIndex),
                          ("failure_reason", paymentFailureReason)
                        ]
                  }
            }
        )

data Payment_PaymentStatus
  = Payment_PaymentStatusUNKNOWN
  | Payment_PaymentStatusIN_FLIGHT
  | Payment_PaymentStatusSUCCEEDED
  | Payment_PaymentStatusFAILED
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Payment_PaymentStatus where
  nameOf _ = (Hs.fromString "Payment_PaymentStatus")

instance HsProtobuf.HasDefault Payment_PaymentStatus

instance Hs.Bounded Payment_PaymentStatus where
  minBound = Payment_PaymentStatusUNKNOWN
  maxBound = Payment_PaymentStatusFAILED

instance Hs.Ord Payment_PaymentStatus where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum Payment_PaymentStatus where
  toProtoEnumMay 0 = Hs.Just Payment_PaymentStatusUNKNOWN
  toProtoEnumMay 1 = Hs.Just Payment_PaymentStatusIN_FLIGHT
  toProtoEnumMay 2 = Hs.Just Payment_PaymentStatusSUCCEEDED
  toProtoEnumMay 3 = Hs.Just Payment_PaymentStatusFAILED
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (Payment_PaymentStatusUNKNOWN) = 0
  fromProtoEnum (Payment_PaymentStatusIN_FLIGHT) = 1
  fromProtoEnum (Payment_PaymentStatusSUCCEEDED) = 2
  fromProtoEnum (Payment_PaymentStatusFAILED) = 3

instance HsJSONPB.ToJSONPB Payment_PaymentStatus where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB Payment_PaymentStatus where
  parseJSONPB (HsJSONPB.String "UNKNOWN") =
    Hs.pure Payment_PaymentStatusUNKNOWN
  parseJSONPB (HsJSONPB.String "IN_FLIGHT") =
    Hs.pure Payment_PaymentStatusIN_FLIGHT
  parseJSONPB (HsJSONPB.String "SUCCEEDED") =
    Hs.pure Payment_PaymentStatusSUCCEEDED
  parseJSONPB (HsJSONPB.String "FAILED") =
    Hs.pure Payment_PaymentStatusFAILED
  parseJSONPB v = (HsJSONPB.typeMismatch "Payment_PaymentStatus" v)

instance HsJSONPB.ToJSON Payment_PaymentStatus where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Payment_PaymentStatus where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite Payment_PaymentStatus

data HTLCAttempt
  = HTLCAttempt
      { htlcattemptStatus ::
          HsProtobuf.Enumerated
            LndGrpc.HTLCAttempt_HTLCStatus,
        htlcattemptRoute :: Hs.Maybe LndGrpc.Route,
        htlcattemptAttemptTimeNs :: Hs.Int64,
        htlcattemptResolveTimeNs :: Hs.Int64,
        htlcattemptFailure :: Hs.Maybe LndGrpc.Failure,
        htlcattemptPreimage :: Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named HTLCAttempt where
  nameOf _ = (Hs.fromString "HTLCAttempt")

instance HsProtobuf.HasDefault HTLCAttempt

instance HsProtobuf.Message HTLCAttempt where
  encodeMessage
    _
    HTLCAttempt
      { htlcattemptStatus = htlcattemptStatus,
        htlcattemptRoute = htlcattemptRoute,
        htlcattemptAttemptTimeNs = htlcattemptAttemptTimeNs,
        htlcattemptResolveTimeNs = htlcattemptResolveTimeNs,
        htlcattemptFailure = htlcattemptFailure,
        htlcattemptPreimage = htlcattemptPreimage
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                htlcattemptStatus
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce @(Hs.Maybe LndGrpc.Route)
                    @(HsProtobuf.Nested LndGrpc.Route)
                    htlcattemptRoute
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                htlcattemptAttemptTimeNs
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                htlcattemptResolveTimeNs
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                ( Hs.coerce @(Hs.Maybe LndGrpc.Failure)
                    @(HsProtobuf.Nested LndGrpc.Failure)
                    htlcattemptFailure
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                htlcattemptPreimage
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure HTLCAttempt)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.Route))
              @(_ (Hs.Maybe LndGrpc.Route))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.Failure))
              @(_ (Hs.Maybe LndGrpc.Failure))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 5)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "HTLCStatus"))
          )
          (HsProtobuf.Single "status")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Route")))
          (HsProtobuf.Single "route")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "attempt_time_ns")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "resolve_time_ns")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Failure")))
          (HsProtobuf.Single "failure")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "preimage")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB HTLCAttempt where
  toJSONPB (HTLCAttempt f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.object
        [ "status" .= f1,
          "route" .= f2,
          "attempt_time_ns" .= f3,
          "resolve_time_ns" .= f4,
          "failure" .= f5,
          "preimage" .= f6
        ]
    )
  toEncodingPB (HTLCAttempt f1 f2 f3 f4 f5 f6) =
    ( HsJSONPB.pairs
        [ "status" .= f1,
          "route" .= f2,
          "attempt_time_ns" .= f3,
          "resolve_time_ns" .= f4,
          "failure" .= f5,
          "preimage" .= f6
        ]
    )

instance HsJSONPB.FromJSONPB HTLCAttempt where
  parseJSONPB =
    ( HsJSONPB.withObject
        "HTLCAttempt"
        ( \obj ->
            (Hs.pure HTLCAttempt) <*> obj .: "status" <*> obj .: "route"
              <*> obj .: "attempt_time_ns"
              <*> obj .: "resolve_time_ns"
              <*> obj .: "failure"
              <*> obj .: "preimage"
        )
    )

instance HsJSONPB.ToJSON HTLCAttempt where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON HTLCAttempt where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema HTLCAttempt where
  declareNamedSchema _ =
    do
      let declare_status = HsJSONPB.declareSchemaRef
      htlcattemptStatus <- declare_status Proxy.Proxy
      let declare_route = HsJSONPB.declareSchemaRef
      htlcattemptRoute <- declare_route Proxy.Proxy
      let declare_attempt_time_ns = HsJSONPB.declareSchemaRef
      htlcattemptAttemptTimeNs <- declare_attempt_time_ns Proxy.Proxy
      let declare_resolve_time_ns = HsJSONPB.declareSchemaRef
      htlcattemptResolveTimeNs <- declare_resolve_time_ns Proxy.Proxy
      let declare_failure = HsJSONPB.declareSchemaRef
      htlcattemptFailure <- declare_failure Proxy.Proxy
      let declare_preimage = HsJSONPB.declareSchemaRef
      htlcattemptPreimage <- declare_preimage Proxy.Proxy
      let _ =
            Hs.pure HTLCAttempt <*> HsJSONPB.asProxy declare_status
              <*> HsJSONPB.asProxy declare_route
              <*> HsJSONPB.asProxy declare_attempt_time_ns
              <*> HsJSONPB.asProxy declare_resolve_time_ns
              <*> HsJSONPB.asProxy declare_failure
              <*> HsJSONPB.asProxy declare_preimage
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "HTLCAttempt",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("status", htlcattemptStatus),
                          ("route", htlcattemptRoute),
                          ( "attempt_time_ns",
                            htlcattemptAttemptTimeNs
                          ),
                          ( "resolve_time_ns",
                            htlcattemptResolveTimeNs
                          ),
                          ("failure", htlcattemptFailure),
                          ("preimage", htlcattemptPreimage)
                        ]
                  }
            }
        )

data HTLCAttempt_HTLCStatus
  = HTLCAttempt_HTLCStatusIN_FLIGHT
  | HTLCAttempt_HTLCStatusSUCCEEDED
  | HTLCAttempt_HTLCStatusFAILED
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named HTLCAttempt_HTLCStatus where
  nameOf _ = (Hs.fromString "HTLCAttempt_HTLCStatus")

instance HsProtobuf.HasDefault HTLCAttempt_HTLCStatus

instance Hs.Bounded HTLCAttempt_HTLCStatus where
  minBound = HTLCAttempt_HTLCStatusIN_FLIGHT
  maxBound = HTLCAttempt_HTLCStatusFAILED

instance Hs.Ord HTLCAttempt_HTLCStatus where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum HTLCAttempt_HTLCStatus where
  toProtoEnumMay 0 = Hs.Just HTLCAttempt_HTLCStatusIN_FLIGHT
  toProtoEnumMay 1 = Hs.Just HTLCAttempt_HTLCStatusSUCCEEDED
  toProtoEnumMay 2 = Hs.Just HTLCAttempt_HTLCStatusFAILED
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (HTLCAttempt_HTLCStatusIN_FLIGHT) = 0
  fromProtoEnum (HTLCAttempt_HTLCStatusSUCCEEDED) = 1
  fromProtoEnum (HTLCAttempt_HTLCStatusFAILED) = 2

instance HsJSONPB.ToJSONPB HTLCAttempt_HTLCStatus where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB HTLCAttempt_HTLCStatus where
  parseJSONPB (HsJSONPB.String "IN_FLIGHT") =
    Hs.pure HTLCAttempt_HTLCStatusIN_FLIGHT
  parseJSONPB (HsJSONPB.String "SUCCEEDED") =
    Hs.pure HTLCAttempt_HTLCStatusSUCCEEDED
  parseJSONPB (HsJSONPB.String "FAILED") =
    Hs.pure HTLCAttempt_HTLCStatusFAILED
  parseJSONPB v = (HsJSONPB.typeMismatch "HTLCAttempt_HTLCStatus" v)

instance HsJSONPB.ToJSON HTLCAttempt_HTLCStatus where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON HTLCAttempt_HTLCStatus where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite HTLCAttempt_HTLCStatus

data ListPaymentsRequest
  = ListPaymentsRequest
      { listPaymentsRequestIncludeIncomplete ::
          Hs.Bool,
        listPaymentsRequestIndexOffset :: Hs.Word64,
        listPaymentsRequestMaxPayments :: Hs.Word64,
        listPaymentsRequestReversed :: Hs.Bool
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ListPaymentsRequest where
  nameOf _ = (Hs.fromString "ListPaymentsRequest")

instance HsProtobuf.HasDefault ListPaymentsRequest

instance HsProtobuf.Message ListPaymentsRequest where
  encodeMessage
    _
    ListPaymentsRequest
      { listPaymentsRequestIncludeIncomplete =
          listPaymentsRequestIncludeIncomplete,
        listPaymentsRequestIndexOffset = listPaymentsRequestIndexOffset,
        listPaymentsRequestMaxPayments = listPaymentsRequestMaxPayments,
        listPaymentsRequestReversed = listPaymentsRequestReversed
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                listPaymentsRequestIncludeIncomplete
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                listPaymentsRequestIndexOffset
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                listPaymentsRequestMaxPayments
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                listPaymentsRequestReversed
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ListPaymentsRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "include_incomplete")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "index_offset")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "max_payments")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "reversed")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ListPaymentsRequest where
  toJSONPB (ListPaymentsRequest f1 f2 f3 f4) =
    ( HsJSONPB.object
        [ "include_incomplete" .= f1,
          "index_offset" .= f2,
          "max_payments" .= f3,
          "reversed" .= f4
        ]
    )
  toEncodingPB (ListPaymentsRequest f1 f2 f3 f4) =
    ( HsJSONPB.pairs
        [ "include_incomplete" .= f1,
          "index_offset" .= f2,
          "max_payments" .= f3,
          "reversed" .= f4
        ]
    )

instance HsJSONPB.FromJSONPB ListPaymentsRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ListPaymentsRequest"
        ( \obj ->
            (Hs.pure ListPaymentsRequest) <*> obj .: "include_incomplete"
              <*> obj .: "index_offset"
              <*> obj .: "max_payments"
              <*> obj .: "reversed"
        )
    )

instance HsJSONPB.ToJSON ListPaymentsRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ListPaymentsRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ListPaymentsRequest where
  declareNamedSchema _ =
    do
      let declare_include_incomplete = HsJSONPB.declareSchemaRef
      listPaymentsRequestIncludeIncomplete <-
        declare_include_incomplete
          Proxy.Proxy
      let declare_index_offset = HsJSONPB.declareSchemaRef
      listPaymentsRequestIndexOffset <- declare_index_offset Proxy.Proxy
      let declare_max_payments = HsJSONPB.declareSchemaRef
      listPaymentsRequestMaxPayments <- declare_max_payments Proxy.Proxy
      let declare_reversed = HsJSONPB.declareSchemaRef
      listPaymentsRequestReversed <- declare_reversed Proxy.Proxy
      let _ =
            Hs.pure ListPaymentsRequest
              <*> HsJSONPB.asProxy declare_include_incomplete
              <*> HsJSONPB.asProxy declare_index_offset
              <*> HsJSONPB.asProxy declare_max_payments
              <*> HsJSONPB.asProxy declare_reversed
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ListPaymentsRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "include_incomplete",
                            listPaymentsRequestIncludeIncomplete
                          ),
                          ( "index_offset",
                            listPaymentsRequestIndexOffset
                          ),
                          ( "max_payments",
                            listPaymentsRequestMaxPayments
                          ),
                          ( "reversed",
                            listPaymentsRequestReversed
                          )
                        ]
                  }
            }
        )

data ListPaymentsResponse
  = ListPaymentsResponse
      { listPaymentsResponsePayments ::
          Hs.Vector
            LndGrpc.Payment,
        listPaymentsResponseFirstIndexOffset :: Hs.Word64,
        listPaymentsResponseLastIndexOffset :: Hs.Word64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ListPaymentsResponse where
  nameOf _ = (Hs.fromString "ListPaymentsResponse")

instance HsProtobuf.HasDefault ListPaymentsResponse

instance HsProtobuf.Message ListPaymentsResponse where
  encodeMessage
    _
    ListPaymentsResponse
      { listPaymentsResponsePayments =
          listPaymentsResponsePayments,
        listPaymentsResponseFirstIndexOffset =
          listPaymentsResponseFirstIndexOffset,
        listPaymentsResponseLastIndexOffset =
          listPaymentsResponseLastIndexOffset
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector LndGrpc.Payment)
                    @(HsProtobuf.NestedVec LndGrpc.Payment)
                    listPaymentsResponsePayments
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                listPaymentsResponseFirstIndexOffset
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                listPaymentsResponseLastIndexOffset
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ListPaymentsResponse)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.Payment))
              @(_ (Hs.Vector LndGrpc.Payment))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "Payment"))
          )
          (HsProtobuf.Single "payments")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "first_index_offset")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "last_index_offset")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ListPaymentsResponse where
  toJSONPB (ListPaymentsResponse f1 f2 f3) =
    ( HsJSONPB.object
        [ "payments" .= f1,
          "first_index_offset" .= f2,
          "last_index_offset" .= f3
        ]
    )
  toEncodingPB (ListPaymentsResponse f1 f2 f3) =
    ( HsJSONPB.pairs
        [ "payments" .= f1,
          "first_index_offset" .= f2,
          "last_index_offset" .= f3
        ]
    )

instance HsJSONPB.FromJSONPB ListPaymentsResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ListPaymentsResponse"
        ( \obj ->
            (Hs.pure ListPaymentsResponse) <*> obj .: "payments"
              <*> obj .: "first_index_offset"
              <*> obj .: "last_index_offset"
        )
    )

instance HsJSONPB.ToJSON ListPaymentsResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ListPaymentsResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ListPaymentsResponse where
  declareNamedSchema _ =
    do
      let declare_payments = HsJSONPB.declareSchemaRef
      listPaymentsResponsePayments <- declare_payments Proxy.Proxy
      let declare_first_index_offset = HsJSONPB.declareSchemaRef
      listPaymentsResponseFirstIndexOffset <-
        declare_first_index_offset
          Proxy.Proxy
      let declare_last_index_offset = HsJSONPB.declareSchemaRef
      listPaymentsResponseLastIndexOffset <-
        declare_last_index_offset
          Proxy.Proxy
      let _ =
            Hs.pure ListPaymentsResponse
              <*> HsJSONPB.asProxy declare_payments
              <*> HsJSONPB.asProxy declare_first_index_offset
              <*> HsJSONPB.asProxy declare_last_index_offset
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ListPaymentsResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("payments", listPaymentsResponsePayments),
                          ( "first_index_offset",
                            listPaymentsResponseFirstIndexOffset
                          ),
                          ( "last_index_offset",
                            listPaymentsResponseLastIndexOffset
                          )
                        ]
                  }
            }
        )

data DeleteAllPaymentsRequest = DeleteAllPaymentsRequest {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named DeleteAllPaymentsRequest where
  nameOf _ = (Hs.fromString "DeleteAllPaymentsRequest")

instance HsProtobuf.HasDefault DeleteAllPaymentsRequest

instance HsProtobuf.Message DeleteAllPaymentsRequest where
  encodeMessage _ DeleteAllPaymentsRequest {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure DeleteAllPaymentsRequest)
  dotProto _ = []

instance HsJSONPB.ToJSONPB DeleteAllPaymentsRequest where
  toJSONPB (DeleteAllPaymentsRequest) = (HsJSONPB.object [])
  toEncodingPB (DeleteAllPaymentsRequest) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB DeleteAllPaymentsRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "DeleteAllPaymentsRequest"
        (\obj -> (Hs.pure DeleteAllPaymentsRequest))
    )

instance HsJSONPB.ToJSON DeleteAllPaymentsRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON DeleteAllPaymentsRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema DeleteAllPaymentsRequest where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "DeleteAllPaymentsRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data DeleteAllPaymentsResponse = DeleteAllPaymentsResponse {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named DeleteAllPaymentsResponse where
  nameOf _ = (Hs.fromString "DeleteAllPaymentsResponse")

instance HsProtobuf.HasDefault DeleteAllPaymentsResponse

instance HsProtobuf.Message DeleteAllPaymentsResponse where
  encodeMessage _ DeleteAllPaymentsResponse {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure DeleteAllPaymentsResponse)
  dotProto _ = []

instance HsJSONPB.ToJSONPB DeleteAllPaymentsResponse where
  toJSONPB (DeleteAllPaymentsResponse) = (HsJSONPB.object [])
  toEncodingPB (DeleteAllPaymentsResponse) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB DeleteAllPaymentsResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "DeleteAllPaymentsResponse"
        (\obj -> (Hs.pure DeleteAllPaymentsResponse))
    )

instance HsJSONPB.ToJSON DeleteAllPaymentsResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON DeleteAllPaymentsResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema DeleteAllPaymentsResponse where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "DeleteAllPaymentsResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data AbandonChannelRequest
  = AbandonChannelRequest
      { abandonChannelRequestChannelPoint ::
          Hs.Maybe
            LndGrpc.ChannelPoint
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named AbandonChannelRequest where
  nameOf _ = (Hs.fromString "AbandonChannelRequest")

instance HsProtobuf.HasDefault AbandonChannelRequest

instance HsProtobuf.Message AbandonChannelRequest where
  encodeMessage
    _
    AbandonChannelRequest
      { abandonChannelRequestChannelPoint =
          abandonChannelRequestChannelPoint
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelPoint)
                    @(HsProtobuf.Nested LndGrpc.ChannelPoint)
                    abandonChannelRequestChannelPoint
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure AbandonChannelRequest)
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelPoint))
              @(_ (Hs.Maybe LndGrpc.ChannelPoint))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "ChannelPoint"))
          )
          (HsProtobuf.Single "channel_point")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB AbandonChannelRequest where
  toJSONPB (AbandonChannelRequest f1) =
    (HsJSONPB.object ["channel_point" .= f1])
  toEncodingPB (AbandonChannelRequest f1) =
    (HsJSONPB.pairs ["channel_point" .= f1])

instance HsJSONPB.FromJSONPB AbandonChannelRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "AbandonChannelRequest"
        ( \obj ->
            (Hs.pure AbandonChannelRequest) <*> obj .: "channel_point"
        )
    )

instance HsJSONPB.ToJSON AbandonChannelRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON AbandonChannelRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema AbandonChannelRequest where
  declareNamedSchema _ =
    do
      let declare_channel_point = HsJSONPB.declareSchemaRef
      abandonChannelRequestChannelPoint <-
        declare_channel_point
          Proxy.Proxy
      let _ =
            Hs.pure AbandonChannelRequest
              <*> HsJSONPB.asProxy declare_channel_point
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "AbandonChannelRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "channel_point",
                            abandonChannelRequestChannelPoint
                          )
                        ]
                  }
            }
        )

data AbandonChannelResponse = AbandonChannelResponse {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named AbandonChannelResponse where
  nameOf _ = (Hs.fromString "AbandonChannelResponse")

instance HsProtobuf.HasDefault AbandonChannelResponse

instance HsProtobuf.Message AbandonChannelResponse where
  encodeMessage _ AbandonChannelResponse {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure AbandonChannelResponse)
  dotProto _ = []

instance HsJSONPB.ToJSONPB AbandonChannelResponse where
  toJSONPB (AbandonChannelResponse) = (HsJSONPB.object [])
  toEncodingPB (AbandonChannelResponse) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB AbandonChannelResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "AbandonChannelResponse"
        (\obj -> (Hs.pure AbandonChannelResponse))
    )

instance HsJSONPB.ToJSON AbandonChannelResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON AbandonChannelResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema AbandonChannelResponse where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "AbandonChannelResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data DebugLevelRequest
  = DebugLevelRequest
      { debugLevelRequestShow ::
          Hs.Bool,
        debugLevelRequestLevelSpec :: Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named DebugLevelRequest where
  nameOf _ = (Hs.fromString "DebugLevelRequest")

instance HsProtobuf.HasDefault DebugLevelRequest

instance HsProtobuf.Message DebugLevelRequest where
  encodeMessage
    _
    DebugLevelRequest
      { debugLevelRequestShow = debugLevelRequestShow,
        debugLevelRequestLevelSpec = debugLevelRequestLevelSpec
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                debugLevelRequestShow
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                debugLevelRequestLevelSpec
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure DebugLevelRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "show")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "level_spec")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB DebugLevelRequest where
  toJSONPB (DebugLevelRequest f1 f2) =
    (HsJSONPB.object ["show" .= f1, "level_spec" .= f2])
  toEncodingPB (DebugLevelRequest f1 f2) =
    (HsJSONPB.pairs ["show" .= f1, "level_spec" .= f2])

instance HsJSONPB.FromJSONPB DebugLevelRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "DebugLevelRequest"
        ( \obj ->
            (Hs.pure DebugLevelRequest) <*> obj .: "show"
              <*> obj .: "level_spec"
        )
    )

instance HsJSONPB.ToJSON DebugLevelRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON DebugLevelRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema DebugLevelRequest where
  declareNamedSchema _ =
    do
      let declare_show = HsJSONPB.declareSchemaRef
      debugLevelRequestShow <- declare_show Proxy.Proxy
      let declare_level_spec = HsJSONPB.declareSchemaRef
      debugLevelRequestLevelSpec <- declare_level_spec Proxy.Proxy
      let _ =
            Hs.pure DebugLevelRequest <*> HsJSONPB.asProxy declare_show
              <*> HsJSONPB.asProxy declare_level_spec
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "DebugLevelRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("show", debugLevelRequestShow),
                          ( "level_spec",
                            debugLevelRequestLevelSpec
                          )
                        ]
                  }
            }
        )

data DebugLevelResponse
  = DebugLevelResponse
      { debugLevelResponseSubSystems ::
          Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named DebugLevelResponse where
  nameOf _ = (Hs.fromString "DebugLevelResponse")

instance HsProtobuf.HasDefault DebugLevelResponse

instance HsProtobuf.Message DebugLevelResponse where
  encodeMessage
    _
    DebugLevelResponse
      { debugLevelResponseSubSystems =
          debugLevelResponseSubSystems
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                debugLevelResponseSubSystems
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure DebugLevelResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "sub_systems")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB DebugLevelResponse where
  toJSONPB (DebugLevelResponse f1) =
    (HsJSONPB.object ["sub_systems" .= f1])
  toEncodingPB (DebugLevelResponse f1) =
    (HsJSONPB.pairs ["sub_systems" .= f1])

instance HsJSONPB.FromJSONPB DebugLevelResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "DebugLevelResponse"
        (\obj -> (Hs.pure DebugLevelResponse) <*> obj .: "sub_systems")
    )

instance HsJSONPB.ToJSON DebugLevelResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON DebugLevelResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema DebugLevelResponse where
  declareNamedSchema _ =
    do
      let declare_sub_systems = HsJSONPB.declareSchemaRef
      debugLevelResponseSubSystems <- declare_sub_systems Proxy.Proxy
      let _ =
            Hs.pure DebugLevelResponse
              <*> HsJSONPB.asProxy declare_sub_systems
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "DebugLevelResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "sub_systems",
                            debugLevelResponseSubSystems
                          )
                        ]
                  }
            }
        )

data PayReqString = PayReqString {payReqStringPayReq :: Hs.Text}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PayReqString where
  nameOf _ = (Hs.fromString "PayReqString")

instance HsProtobuf.HasDefault PayReqString

instance HsProtobuf.Message PayReqString where
  encodeMessage
    _
    PayReqString {payReqStringPayReq = payReqStringPayReq} =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                payReqStringPayReq
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PayReqString)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "pay_req")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB PayReqString where
  toJSONPB (PayReqString f1) = (HsJSONPB.object ["pay_req" .= f1])
  toEncodingPB (PayReqString f1) = (HsJSONPB.pairs ["pay_req" .= f1])

instance HsJSONPB.FromJSONPB PayReqString where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PayReqString"
        (\obj -> (Hs.pure PayReqString) <*> obj .: "pay_req")
    )

instance HsJSONPB.ToJSON PayReqString where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PayReqString where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PayReqString where
  declareNamedSchema _ =
    do
      let declare_pay_req = HsJSONPB.declareSchemaRef
      payReqStringPayReq <- declare_pay_req Proxy.Proxy
      let _ = Hs.pure PayReqString <*> HsJSONPB.asProxy declare_pay_req
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PayReqString",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("pay_req", payReqStringPayReq)]
                  }
            }
        )

data PayReq
  = PayReq
      { payReqDestination :: Hs.Text,
        payReqPaymentHash :: Hs.Text,
        payReqNumSatoshis :: Hs.Int64,
        payReqTimestamp :: Hs.Int64,
        payReqExpiry :: Hs.Int64,
        payReqDescription :: Hs.Text,
        payReqDescriptionHash :: Hs.Text,
        payReqFallbackAddr :: Hs.Text,
        payReqCltvExpiry :: Hs.Int64,
        payReqRouteHints :: Hs.Vector LndGrpc.RouteHint,
        payReqPaymentAddr :: Hs.ByteString,
        payReqNumMsat :: Hs.Int64,
        payReqFeatures :: Hs.Map Hs.Word32 (Hs.Maybe LndGrpc.Feature)
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PayReq where
  nameOf _ = (Hs.fromString "PayReq")

instance HsProtobuf.HasDefault PayReq

instance HsProtobuf.Message PayReq where
  encodeMessage
    _
    PayReq
      { payReqDestination = payReqDestination,
        payReqPaymentHash = payReqPaymentHash,
        payReqNumSatoshis = payReqNumSatoshis,
        payReqTimestamp = payReqTimestamp,
        payReqExpiry = payReqExpiry,
        payReqDescription = payReqDescription,
        payReqDescriptionHash = payReqDescriptionHash,
        payReqFallbackAddr = payReqFallbackAddr,
        payReqCltvExpiry = payReqCltvExpiry,
        payReqRouteHints = payReqRouteHints,
        payReqPaymentAddr = payReqPaymentAddr,
        payReqNumMsat = payReqNumMsat,
        payReqFeatures = payReqFeatures
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                payReqDestination
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                payReqPaymentHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                payReqNumSatoshis
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                payReqTimestamp
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                payReqExpiry
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                payReqDescription
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                payReqDescriptionHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                payReqFallbackAddr
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                payReqCltvExpiry
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                ( Hs.coerce @(Hs.Vector LndGrpc.RouteHint)
                    @(HsProtobuf.NestedVec LndGrpc.RouteHint)
                    payReqRouteHints
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                payReqPaymentAddr
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 12)
                payReqNumMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 13)
                ( Hs.unsafeCoerce @(Hs.Map Hs.Word32 (Hs.Maybe LndGrpc.Feature))
                    @(Hs.Map Hs.Word32 (HsProtobuf.Nested LndGrpc.Feature))
                    payReqFeatures
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PayReq)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.RouteHint))
              @(_ (Hs.Vector LndGrpc.RouteHint))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 10)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 11)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 12)
          )
      <*> ( Hs.unsafeCoerce
              @(_ (Hs.Map Hs.Word32 (HsProtobuf.Nested LndGrpc.Feature)))
              @(_ (Hs.Map Hs.Word32 (Hs.Maybe LndGrpc.Feature)))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 13)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "destination")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "payment_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "num_satoshis")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "timestamp")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "expiry")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "description")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "description_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "fallback_addr")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "cltv_expiry")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "RouteHint"))
          )
          (HsProtobuf.Single "route_hints")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "payment_addr")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 12)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "num_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 13)
          ( HsProtobuf.Map
              HsProtobuf.UInt32
              (HsProtobuf.Named (HsProtobuf.Single "Feature"))
          )
          (HsProtobuf.Single "features")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB PayReq where
  toJSONPB (PayReq f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13) =
    ( HsJSONPB.object
        [ "destination" .= f1,
          "payment_hash" .= f2,
          "num_satoshis" .= f3,
          "timestamp" .= f4,
          "expiry" .= f5,
          "description" .= f6,
          "description_hash" .= f7,
          "fallback_addr" .= f8,
          "cltv_expiry" .= f9,
          "route_hints" .= f10,
          "payment_addr" .= f11,
          "num_msat" .= f12,
          "features" .= f13
        ]
    )
  toEncodingPB (PayReq f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13) =
    ( HsJSONPB.pairs
        [ "destination" .= f1,
          "payment_hash" .= f2,
          "num_satoshis" .= f3,
          "timestamp" .= f4,
          "expiry" .= f5,
          "description" .= f6,
          "description_hash" .= f7,
          "fallback_addr" .= f8,
          "cltv_expiry" .= f9,
          "route_hints" .= f10,
          "payment_addr" .= f11,
          "num_msat" .= f12,
          "features" .= f13
        ]
    )

instance HsJSONPB.FromJSONPB PayReq where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PayReq"
        ( \obj ->
            (Hs.pure PayReq) <*> obj .: "destination" <*> obj .: "payment_hash"
              <*> obj .: "num_satoshis"
              <*> obj .: "timestamp"
              <*> obj .: "expiry"
              <*> obj .: "description"
              <*> obj .: "description_hash"
              <*> obj .: "fallback_addr"
              <*> obj .: "cltv_expiry"
              <*> obj .: "route_hints"
              <*> obj .: "payment_addr"
              <*> obj .: "num_msat"
              <*> obj .: "features"
        )
    )

instance HsJSONPB.ToJSON PayReq where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PayReq where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PayReq where
  declareNamedSchema _ =
    do
      let declare_destination = HsJSONPB.declareSchemaRef
      payReqDestination <- declare_destination Proxy.Proxy
      let declare_payment_hash = HsJSONPB.declareSchemaRef
      payReqPaymentHash <- declare_payment_hash Proxy.Proxy
      let declare_num_satoshis = HsJSONPB.declareSchemaRef
      payReqNumSatoshis <- declare_num_satoshis Proxy.Proxy
      let declare_timestamp = HsJSONPB.declareSchemaRef
      payReqTimestamp <- declare_timestamp Proxy.Proxy
      let declare_expiry = HsJSONPB.declareSchemaRef
      payReqExpiry <- declare_expiry Proxy.Proxy
      let declare_description = HsJSONPB.declareSchemaRef
      payReqDescription <- declare_description Proxy.Proxy
      let declare_description_hash = HsJSONPB.declareSchemaRef
      payReqDescriptionHash <- declare_description_hash Proxy.Proxy
      let declare_fallback_addr = HsJSONPB.declareSchemaRef
      payReqFallbackAddr <- declare_fallback_addr Proxy.Proxy
      let declare_cltv_expiry = HsJSONPB.declareSchemaRef
      payReqCltvExpiry <- declare_cltv_expiry Proxy.Proxy
      let declare_route_hints = HsJSONPB.declareSchemaRef
      payReqRouteHints <- declare_route_hints Proxy.Proxy
      let declare_payment_addr = HsJSONPB.declareSchemaRef
      payReqPaymentAddr <- declare_payment_addr Proxy.Proxy
      let declare_num_msat = HsJSONPB.declareSchemaRef
      payReqNumMsat <- declare_num_msat Proxy.Proxy
      let declare_features = HsJSONPB.declareSchemaRef
      payReqFeatures <- declare_features Proxy.Proxy
      let _ =
            Hs.pure PayReq <*> HsJSONPB.asProxy declare_destination
              <*> HsJSONPB.asProxy declare_payment_hash
              <*> HsJSONPB.asProxy declare_num_satoshis
              <*> HsJSONPB.asProxy declare_timestamp
              <*> HsJSONPB.asProxy declare_expiry
              <*> HsJSONPB.asProxy declare_description
              <*> HsJSONPB.asProxy declare_description_hash
              <*> HsJSONPB.asProxy declare_fallback_addr
              <*> HsJSONPB.asProxy declare_cltv_expiry
              <*> HsJSONPB.asProxy declare_route_hints
              <*> HsJSONPB.asProxy declare_payment_addr
              <*> HsJSONPB.asProxy declare_num_msat
              <*> HsJSONPB.asProxy declare_features
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName = Hs.Just "PayReq",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("destination", payReqDestination),
                          ("payment_hash", payReqPaymentHash),
                          ("num_satoshis", payReqNumSatoshis),
                          ("timestamp", payReqTimestamp),
                          ("expiry", payReqExpiry),
                          ("description", payReqDescription),
                          ("description_hash", payReqDescriptionHash),
                          ("fallback_addr", payReqFallbackAddr),
                          ("cltv_expiry", payReqCltvExpiry),
                          ("route_hints", payReqRouteHints),
                          ("payment_addr", payReqPaymentAddr),
                          ("num_msat", payReqNumMsat),
                          ("features", payReqFeatures)
                        ]
                  }
            }
        )

data FeatureBit
  = FeatureBitDATALOSS_PROTECT_REQ
  | FeatureBitDATALOSS_PROTECT_OPT
  | FeatureBitINITIAL_ROUING_SYNC
  | FeatureBitUPFRONT_SHUTDOWN_SCRIPT_REQ
  | FeatureBitUPFRONT_SHUTDOWN_SCRIPT_OPT
  | FeatureBitGOSSIP_QUERIES_REQ
  | FeatureBitGOSSIP_QUERIES_OPT
  | FeatureBitTLV_ONION_REQ
  | FeatureBitTLV_ONION_OPT
  | FeatureBitEXT_GOSSIP_QUERIES_REQ
  | FeatureBitEXT_GOSSIP_QUERIES_OPT
  | FeatureBitSTATIC_REMOTE_KEY_REQ
  | FeatureBitSTATIC_REMOTE_KEY_OPT
  | FeatureBitPAYMENT_ADDR_REQ
  | FeatureBitPAYMENT_ADDR_OPT
  | FeatureBitMPP_REQ
  | FeatureBitMPP_OPT
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FeatureBit where
  nameOf _ = (Hs.fromString "FeatureBit")

instance HsProtobuf.HasDefault FeatureBit

instance Hs.Bounded FeatureBit where
  minBound = FeatureBitDATALOSS_PROTECT_REQ
  maxBound = FeatureBitMPP_OPT

instance Hs.Ord FeatureBit where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum FeatureBit where
  toProtoEnumMay 0 = Hs.Just FeatureBitDATALOSS_PROTECT_REQ
  toProtoEnumMay 1 = Hs.Just FeatureBitDATALOSS_PROTECT_OPT
  toProtoEnumMay 3 = Hs.Just FeatureBitINITIAL_ROUING_SYNC
  toProtoEnumMay 4 = Hs.Just FeatureBitUPFRONT_SHUTDOWN_SCRIPT_REQ
  toProtoEnumMay 5 = Hs.Just FeatureBitUPFRONT_SHUTDOWN_SCRIPT_OPT
  toProtoEnumMay 6 = Hs.Just FeatureBitGOSSIP_QUERIES_REQ
  toProtoEnumMay 7 = Hs.Just FeatureBitGOSSIP_QUERIES_OPT
  toProtoEnumMay 8 = Hs.Just FeatureBitTLV_ONION_REQ
  toProtoEnumMay 9 = Hs.Just FeatureBitTLV_ONION_OPT
  toProtoEnumMay 10 = Hs.Just FeatureBitEXT_GOSSIP_QUERIES_REQ
  toProtoEnumMay 11 = Hs.Just FeatureBitEXT_GOSSIP_QUERIES_OPT
  toProtoEnumMay 12 = Hs.Just FeatureBitSTATIC_REMOTE_KEY_REQ
  toProtoEnumMay 13 = Hs.Just FeatureBitSTATIC_REMOTE_KEY_OPT
  toProtoEnumMay 14 = Hs.Just FeatureBitPAYMENT_ADDR_REQ
  toProtoEnumMay 15 = Hs.Just FeatureBitPAYMENT_ADDR_OPT
  toProtoEnumMay 16 = Hs.Just FeatureBitMPP_REQ
  toProtoEnumMay 17 = Hs.Just FeatureBitMPP_OPT
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (FeatureBitDATALOSS_PROTECT_REQ) = 0
  fromProtoEnum (FeatureBitDATALOSS_PROTECT_OPT) = 1
  fromProtoEnum (FeatureBitINITIAL_ROUING_SYNC) = 3
  fromProtoEnum (FeatureBitUPFRONT_SHUTDOWN_SCRIPT_REQ) = 4
  fromProtoEnum (FeatureBitUPFRONT_SHUTDOWN_SCRIPT_OPT) = 5
  fromProtoEnum (FeatureBitGOSSIP_QUERIES_REQ) = 6
  fromProtoEnum (FeatureBitGOSSIP_QUERIES_OPT) = 7
  fromProtoEnum (FeatureBitTLV_ONION_REQ) = 8
  fromProtoEnum (FeatureBitTLV_ONION_OPT) = 9
  fromProtoEnum (FeatureBitEXT_GOSSIP_QUERIES_REQ) = 10
  fromProtoEnum (FeatureBitEXT_GOSSIP_QUERIES_OPT) = 11
  fromProtoEnum (FeatureBitSTATIC_REMOTE_KEY_REQ) = 12
  fromProtoEnum (FeatureBitSTATIC_REMOTE_KEY_OPT) = 13
  fromProtoEnum (FeatureBitPAYMENT_ADDR_REQ) = 14
  fromProtoEnum (FeatureBitPAYMENT_ADDR_OPT) = 15
  fromProtoEnum (FeatureBitMPP_REQ) = 16
  fromProtoEnum (FeatureBitMPP_OPT) = 17

instance HsJSONPB.ToJSONPB FeatureBit where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB FeatureBit where
  parseJSONPB (HsJSONPB.String "DATALOSS_PROTECT_REQ") =
    Hs.pure FeatureBitDATALOSS_PROTECT_REQ
  parseJSONPB (HsJSONPB.String "DATALOSS_PROTECT_OPT") =
    Hs.pure FeatureBitDATALOSS_PROTECT_OPT
  parseJSONPB (HsJSONPB.String "INITIAL_ROUING_SYNC") =
    Hs.pure FeatureBitINITIAL_ROUING_SYNC
  parseJSONPB (HsJSONPB.String "UPFRONT_SHUTDOWN_SCRIPT_REQ") =
    Hs.pure FeatureBitUPFRONT_SHUTDOWN_SCRIPT_REQ
  parseJSONPB (HsJSONPB.String "UPFRONT_SHUTDOWN_SCRIPT_OPT") =
    Hs.pure FeatureBitUPFRONT_SHUTDOWN_SCRIPT_OPT
  parseJSONPB (HsJSONPB.String "GOSSIP_QUERIES_REQ") =
    Hs.pure FeatureBitGOSSIP_QUERIES_REQ
  parseJSONPB (HsJSONPB.String "GOSSIP_QUERIES_OPT") =
    Hs.pure FeatureBitGOSSIP_QUERIES_OPT
  parseJSONPB (HsJSONPB.String "TLV_ONION_REQ") =
    Hs.pure FeatureBitTLV_ONION_REQ
  parseJSONPB (HsJSONPB.String "TLV_ONION_OPT") =
    Hs.pure FeatureBitTLV_ONION_OPT
  parseJSONPB (HsJSONPB.String "EXT_GOSSIP_QUERIES_REQ") =
    Hs.pure FeatureBitEXT_GOSSIP_QUERIES_REQ
  parseJSONPB (HsJSONPB.String "EXT_GOSSIP_QUERIES_OPT") =
    Hs.pure FeatureBitEXT_GOSSIP_QUERIES_OPT
  parseJSONPB (HsJSONPB.String "STATIC_REMOTE_KEY_REQ") =
    Hs.pure FeatureBitSTATIC_REMOTE_KEY_REQ
  parseJSONPB (HsJSONPB.String "STATIC_REMOTE_KEY_OPT") =
    Hs.pure FeatureBitSTATIC_REMOTE_KEY_OPT
  parseJSONPB (HsJSONPB.String "PAYMENT_ADDR_REQ") =
    Hs.pure FeatureBitPAYMENT_ADDR_REQ
  parseJSONPB (HsJSONPB.String "PAYMENT_ADDR_OPT") =
    Hs.pure FeatureBitPAYMENT_ADDR_OPT
  parseJSONPB (HsJSONPB.String "MPP_REQ") = Hs.pure FeatureBitMPP_REQ
  parseJSONPB (HsJSONPB.String "MPP_OPT") = Hs.pure FeatureBitMPP_OPT
  parseJSONPB v = (HsJSONPB.typeMismatch "FeatureBit" v)

instance HsJSONPB.ToJSON FeatureBit where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON FeatureBit where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite FeatureBit

data Feature
  = Feature
      { featureName :: Hs.Text,
        featureIsRequired :: Hs.Bool,
        featureIsKnown :: Hs.Bool
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Feature where
  nameOf _ = (Hs.fromString "Feature")

instance HsProtobuf.HasDefault Feature

instance HsProtobuf.Message Feature where
  encodeMessage
    _
    Feature
      { featureName = featureName,
        featureIsRequired = featureIsRequired,
        featureIsKnown = featureIsKnown
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                featureName
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                featureIsRequired
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                featureIsKnown
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure Feature)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "name")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "is_required")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "is_known")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB Feature where
  toJSONPB (Feature f2 f3 f4) =
    ( HsJSONPB.object
        ["name" .= f2, "is_required" .= f3, "is_known" .= f4]
    )
  toEncodingPB (Feature f2 f3 f4) =
    ( HsJSONPB.pairs
        ["name" .= f2, "is_required" .= f3, "is_known" .= f4]
    )

instance HsJSONPB.FromJSONPB Feature where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Feature"
        ( \obj ->
            (Hs.pure Feature) <*> obj .: "name" <*> obj .: "is_required"
              <*> obj
              .: "is_known"
        )
    )

instance HsJSONPB.ToJSON Feature where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Feature where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema Feature where
  declareNamedSchema _ =
    do
      let declare_name = HsJSONPB.declareSchemaRef
      featureName <- declare_name Proxy.Proxy
      let declare_is_required = HsJSONPB.declareSchemaRef
      featureIsRequired <- declare_is_required Proxy.Proxy
      let declare_is_known = HsJSONPB.declareSchemaRef
      featureIsKnown <- declare_is_known Proxy.Proxy
      let _ =
            Hs.pure Feature <*> HsJSONPB.asProxy declare_name
              <*> HsJSONPB.asProxy declare_is_required
              <*> HsJSONPB.asProxy declare_is_known
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "Feature",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("name", featureName),
                          ("is_required", featureIsRequired),
                          ("is_known", featureIsKnown)
                        ]
                  }
            }
        )

data FeeReportRequest = FeeReportRequest {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FeeReportRequest where
  nameOf _ = (Hs.fromString "FeeReportRequest")

instance HsProtobuf.HasDefault FeeReportRequest

instance HsProtobuf.Message FeeReportRequest where
  encodeMessage _ FeeReportRequest {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure FeeReportRequest)
  dotProto _ = []

instance HsJSONPB.ToJSONPB FeeReportRequest where
  toJSONPB (FeeReportRequest) = (HsJSONPB.object [])
  toEncodingPB (FeeReportRequest) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB FeeReportRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "FeeReportRequest"
        (\obj -> (Hs.pure FeeReportRequest))
    )

instance HsJSONPB.ToJSON FeeReportRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON FeeReportRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema FeeReportRequest where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "FeeReportRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data ChannelFeeReport
  = ChannelFeeReport
      { channelFeeReportChanId ::
          Hs.Word64,
        channelFeeReportChannelPoint :: Hs.Text,
        channelFeeReportBaseFeeMsat :: Hs.Int64,
        channelFeeReportFeePerMil :: Hs.Int64,
        channelFeeReportFeeRate :: Hs.Double
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelFeeReport where
  nameOf _ = (Hs.fromString "ChannelFeeReport")

instance HsProtobuf.HasDefault ChannelFeeReport

instance HsProtobuf.Message ChannelFeeReport where
  encodeMessage
    _
    ChannelFeeReport
      { channelFeeReportChanId = channelFeeReportChanId,
        channelFeeReportChannelPoint = channelFeeReportChannelPoint,
        channelFeeReportBaseFeeMsat = channelFeeReportBaseFeeMsat,
        channelFeeReportFeePerMil = channelFeeReportFeePerMil,
        channelFeeReportFeeRate = channelFeeReportFeeRate
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                channelFeeReportChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                channelFeeReportChannelPoint
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                channelFeeReportBaseFeeMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                channelFeeReportFeePerMil
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                channelFeeReportFeeRate
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChannelFeeReport)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "chan_id")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "channel_point")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "base_fee_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "fee_per_mil")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Double)
          (HsProtobuf.Single "fee_rate")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChannelFeeReport where
  toJSONPB (ChannelFeeReport f5 f1 f2 f3 f4) =
    ( HsJSONPB.object
        [ "chan_id" .= f5,
          "channel_point" .= f1,
          "base_fee_msat" .= f2,
          "fee_per_mil" .= f3,
          "fee_rate" .= f4
        ]
    )
  toEncodingPB (ChannelFeeReport f5 f1 f2 f3 f4) =
    ( HsJSONPB.pairs
        [ "chan_id" .= f5,
          "channel_point" .= f1,
          "base_fee_msat" .= f2,
          "fee_per_mil" .= f3,
          "fee_rate" .= f4
        ]
    )

instance HsJSONPB.FromJSONPB ChannelFeeReport where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelFeeReport"
        ( \obj ->
            (Hs.pure ChannelFeeReport) <*> obj .: "chan_id"
              <*> obj .: "channel_point"
              <*> obj .: "base_fee_msat"
              <*> obj .: "fee_per_mil"
              <*> obj .: "fee_rate"
        )
    )

instance HsJSONPB.ToJSON ChannelFeeReport where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelFeeReport where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelFeeReport where
  declareNamedSchema _ =
    do
      let declare_chan_id = HsJSONPB.declareSchemaRef
      channelFeeReportChanId <- declare_chan_id Proxy.Proxy
      let declare_channel_point = HsJSONPB.declareSchemaRef
      channelFeeReportChannelPoint <- declare_channel_point Proxy.Proxy
      let declare_base_fee_msat = HsJSONPB.declareSchemaRef
      channelFeeReportBaseFeeMsat <- declare_base_fee_msat Proxy.Proxy
      let declare_fee_per_mil = HsJSONPB.declareSchemaRef
      channelFeeReportFeePerMil <- declare_fee_per_mil Proxy.Proxy
      let declare_fee_rate = HsJSONPB.declareSchemaRef
      channelFeeReportFeeRate <- declare_fee_rate Proxy.Proxy
      let _ =
            Hs.pure ChannelFeeReport
              <*> HsJSONPB.asProxy declare_chan_id
              <*> HsJSONPB.asProxy declare_channel_point
              <*> HsJSONPB.asProxy declare_base_fee_msat
              <*> HsJSONPB.asProxy declare_fee_per_mil
              <*> HsJSONPB.asProxy declare_fee_rate
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelFeeReport",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("chan_id", channelFeeReportChanId),
                          ( "channel_point",
                            channelFeeReportChannelPoint
                          ),
                          ( "base_fee_msat",
                            channelFeeReportBaseFeeMsat
                          ),
                          ("fee_per_mil", channelFeeReportFeePerMil),
                          ("fee_rate", channelFeeReportFeeRate)
                        ]
                  }
            }
        )

data FeeReportResponse
  = FeeReportResponse
      { feeReportResponseChannelFees ::
          Hs.Vector
            LndGrpc.ChannelFeeReport,
        feeReportResponseDayFeeSum :: Hs.Word64,
        feeReportResponseWeekFeeSum :: Hs.Word64,
        feeReportResponseMonthFeeSum :: Hs.Word64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FeeReportResponse where
  nameOf _ = (Hs.fromString "FeeReportResponse")

instance HsProtobuf.HasDefault FeeReportResponse

instance HsProtobuf.Message FeeReportResponse where
  encodeMessage
    _
    FeeReportResponse
      { feeReportResponseChannelFees =
          feeReportResponseChannelFees,
        feeReportResponseDayFeeSum = feeReportResponseDayFeeSum,
        feeReportResponseWeekFeeSum = feeReportResponseWeekFeeSum,
        feeReportResponseMonthFeeSum = feeReportResponseMonthFeeSum
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector LndGrpc.ChannelFeeReport)
                    @(HsProtobuf.NestedVec LndGrpc.ChannelFeeReport)
                    feeReportResponseChannelFees
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                feeReportResponseDayFeeSum
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                feeReportResponseWeekFeeSum
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                feeReportResponseMonthFeeSum
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure FeeReportResponse)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.ChannelFeeReport))
              @(_ (Hs.Vector LndGrpc.ChannelFeeReport))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "ChannelFeeReport"))
          )
          (HsProtobuf.Single "channel_fees")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "day_fee_sum")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "week_fee_sum")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "month_fee_sum")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB FeeReportResponse where
  toJSONPB (FeeReportResponse f1 f2 f3 f4) =
    ( HsJSONPB.object
        [ "channel_fees" .= f1,
          "day_fee_sum" .= f2,
          "week_fee_sum" .= f3,
          "month_fee_sum" .= f4
        ]
    )
  toEncodingPB (FeeReportResponse f1 f2 f3 f4) =
    ( HsJSONPB.pairs
        [ "channel_fees" .= f1,
          "day_fee_sum" .= f2,
          "week_fee_sum" .= f3,
          "month_fee_sum" .= f4
        ]
    )

instance HsJSONPB.FromJSONPB FeeReportResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "FeeReportResponse"
        ( \obj ->
            (Hs.pure FeeReportResponse) <*> obj .: "channel_fees"
              <*> obj .: "day_fee_sum"
              <*> obj .: "week_fee_sum"
              <*> obj .: "month_fee_sum"
        )
    )

instance HsJSONPB.ToJSON FeeReportResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON FeeReportResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema FeeReportResponse where
  declareNamedSchema _ =
    do
      let declare_channel_fees = HsJSONPB.declareSchemaRef
      feeReportResponseChannelFees <- declare_channel_fees Proxy.Proxy
      let declare_day_fee_sum = HsJSONPB.declareSchemaRef
      feeReportResponseDayFeeSum <- declare_day_fee_sum Proxy.Proxy
      let declare_week_fee_sum = HsJSONPB.declareSchemaRef
      feeReportResponseWeekFeeSum <- declare_week_fee_sum Proxy.Proxy
      let declare_month_fee_sum = HsJSONPB.declareSchemaRef
      feeReportResponseMonthFeeSum <- declare_month_fee_sum Proxy.Proxy
      let _ =
            Hs.pure FeeReportResponse
              <*> HsJSONPB.asProxy declare_channel_fees
              <*> HsJSONPB.asProxy declare_day_fee_sum
              <*> HsJSONPB.asProxy declare_week_fee_sum
              <*> HsJSONPB.asProxy declare_month_fee_sum
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "FeeReportResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "channel_fees",
                            feeReportResponseChannelFees
                          ),
                          ("day_fee_sum", feeReportResponseDayFeeSum),
                          ( "week_fee_sum",
                            feeReportResponseWeekFeeSum
                          ),
                          ( "month_fee_sum",
                            feeReportResponseMonthFeeSum
                          )
                        ]
                  }
            }
        )

data PolicyUpdateRequest
  = PolicyUpdateRequest
      { policyUpdateRequestScope ::
          Hs.Maybe
            PolicyUpdateRequestScope,
        policyUpdateRequestBaseFeeMsat :: Hs.Int64,
        policyUpdateRequestFeeRate :: Hs.Double,
        policyUpdateRequestTimeLockDelta :: Hs.Word32,
        policyUpdateRequestMaxHtlcMsat :: Hs.Word64,
        policyUpdateRequestMinHtlcMsat :: Hs.Word64,
        policyUpdateRequestMinHtlcMsatSpecified :: Hs.Bool
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PolicyUpdateRequest where
  nameOf _ = (Hs.fromString "PolicyUpdateRequest")

instance HsProtobuf.HasDefault PolicyUpdateRequest

instance HsProtobuf.Message PolicyUpdateRequest where
  encodeMessage
    _
    PolicyUpdateRequest
      { policyUpdateRequestScope =
          policyUpdateRequestScope,
        policyUpdateRequestBaseFeeMsat = policyUpdateRequestBaseFeeMsat,
        policyUpdateRequestFeeRate = policyUpdateRequestFeeRate,
        policyUpdateRequestTimeLockDelta =
          policyUpdateRequestTimeLockDelta,
        policyUpdateRequestMaxHtlcMsat = policyUpdateRequestMaxHtlcMsat,
        policyUpdateRequestMinHtlcMsat = policyUpdateRequestMinHtlcMsat,
        policyUpdateRequestMinHtlcMsatSpecified =
          policyUpdateRequestMinHtlcMsatSpecified
      } =
      ( Hs.mconcat
          [ case policyUpdateRequestScope of
              Hs.Nothing -> Hs.mempty
              Hs.Just x ->
                case x of
                  PolicyUpdateRequestScopeGlobal y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 1)
                        (HsProtobuf.ForceEmit y)
                    )
                  PolicyUpdateRequestScopeChanPoint y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 2)
                        ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelPoint)
                            @(HsProtobuf.Nested LndGrpc.ChannelPoint)
                            (Hs.Just y)
                        )
                    ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                policyUpdateRequestBaseFeeMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                policyUpdateRequestFeeRate
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                policyUpdateRequestTimeLockDelta
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                policyUpdateRequestMaxHtlcMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                policyUpdateRequestMinHtlcMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                policyUpdateRequestMinHtlcMsatSpecified
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure PolicyUpdateRequest)
      <*> ( HsProtobuf.oneof
              Hs.Nothing
              [ ( (HsProtobuf.FieldNumber 1),
                  (Hs.pure (Hs.Just Hs.. PolicyUpdateRequestScopeGlobal))
                    <*> HsProtobuf.decodeMessageField
                ),
                ( (HsProtobuf.FieldNumber 2),
                  (Hs.pure (Hs.fmap PolicyUpdateRequestScopeChanPoint))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelPoint))
                            @(_ (Hs.Maybe LndGrpc.ChannelPoint))
                            HsProtobuf.decodeMessageField
                        )
                )
              ]
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Int64)
          (HsProtobuf.Single "base_fee_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Double)
          (HsProtobuf.Single "fee_rate")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "time_lock_delta")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "max_htlc_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "min_htlc_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "min_htlc_msat_specified")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB PolicyUpdateRequest where
  toJSONPB (PolicyUpdateRequest f1_or_f2 f3 f4 f5 f6 f7 f8) =
    ( HsJSONPB.object
        [ ( let encodeScope =
                  ( case f1_or_f2 of
                      Hs.Just (PolicyUpdateRequestScopeGlobal f1) ->
                        (HsJSONPB.pair "global" f1)
                      Hs.Just (PolicyUpdateRequestScopeChanPoint f2) ->
                        (HsJSONPB.pair "chan_point" f2)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then ("scope" .= (HsJSONPB.objectOrNull [encodeScope] options)) options
                    else encodeScope options
          ),
          "base_fee_msat" .= f3,
          "fee_rate" .= f4,
          "time_lock_delta" .= f5,
          "max_htlc_msat" .= f6,
          "min_htlc_msat" .= f7,
          "min_htlc_msat_specified" .= f8
        ]
    )
  toEncodingPB (PolicyUpdateRequest f1_or_f2 f3 f4 f5 f6 f7 f8) =
    ( HsJSONPB.pairs
        [ ( let encodeScope =
                  ( case f1_or_f2 of
                      Hs.Just (PolicyUpdateRequestScopeGlobal f1) ->
                        (HsJSONPB.pair "global" f1)
                      Hs.Just (PolicyUpdateRequestScopeChanPoint f2) ->
                        (HsJSONPB.pair "chan_point" f2)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then ("scope" .= (HsJSONPB.pairsOrNull [encodeScope] options)) options
                    else encodeScope options
          ),
          "base_fee_msat" .= f3,
          "fee_rate" .= f4,
          "time_lock_delta" .= f5,
          "max_htlc_msat" .= f6,
          "min_htlc_msat" .= f7,
          "min_htlc_msat_specified" .= f8
        ]
    )

instance HsJSONPB.FromJSONPB PolicyUpdateRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PolicyUpdateRequest"
        ( \obj ->
            (Hs.pure PolicyUpdateRequest)
              <*> ( let parseScope parseObj =
                          Hs.msum
                            [ Hs.Just Hs.. PolicyUpdateRequestScopeGlobal
                                <$> (HsJSONPB.parseField parseObj "global"),
                              Hs.Just Hs.. PolicyUpdateRequestScopeChanPoint
                                <$> (HsJSONPB.parseField parseObj "chan_point"),
                              Hs.pure Hs.Nothing
                            ]
                     in ((obj .: "scope") Hs.>>= (HsJSONPB.withObject "scope" parseScope))
                          <|> (parseScope obj)
                  )
              <*> obj .: "base_fee_msat"
              <*> obj .: "fee_rate"
              <*> obj .: "time_lock_delta"
              <*> obj .: "max_htlc_msat"
              <*> obj .: "min_htlc_msat"
              <*> obj .: "min_htlc_msat_specified"
        )
    )

instance HsJSONPB.ToJSON PolicyUpdateRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PolicyUpdateRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PolicyUpdateRequest where
  declareNamedSchema _ =
    do
      let declare_scope = HsJSONPB.declareSchemaRef
      policyUpdateRequestScope <- declare_scope Proxy.Proxy
      let declare_base_fee_msat = HsJSONPB.declareSchemaRef
      policyUpdateRequestBaseFeeMsat <- declare_base_fee_msat Proxy.Proxy
      let declare_fee_rate = HsJSONPB.declareSchemaRef
      policyUpdateRequestFeeRate <- declare_fee_rate Proxy.Proxy
      let declare_time_lock_delta = HsJSONPB.declareSchemaRef
      policyUpdateRequestTimeLockDelta <-
        declare_time_lock_delta
          Proxy.Proxy
      let declare_max_htlc_msat = HsJSONPB.declareSchemaRef
      policyUpdateRequestMaxHtlcMsat <- declare_max_htlc_msat Proxy.Proxy
      let declare_min_htlc_msat = HsJSONPB.declareSchemaRef
      policyUpdateRequestMinHtlcMsat <- declare_min_htlc_msat Proxy.Proxy
      let declare_min_htlc_msat_specified = HsJSONPB.declareSchemaRef
      policyUpdateRequestMinHtlcMsatSpecified <-
        declare_min_htlc_msat_specified
          Proxy.Proxy
      let _ =
            Hs.pure PolicyUpdateRequest
              <*> HsJSONPB.asProxy declare_scope
              <*> HsJSONPB.asProxy declare_base_fee_msat
              <*> HsJSONPB.asProxy declare_fee_rate
              <*> HsJSONPB.asProxy declare_time_lock_delta
              <*> HsJSONPB.asProxy declare_max_htlc_msat
              <*> HsJSONPB.asProxy declare_min_htlc_msat
              <*> HsJSONPB.asProxy declare_min_htlc_msat_specified
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PolicyUpdateRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("scope", policyUpdateRequestScope),
                          ( "base_fee_msat",
                            policyUpdateRequestBaseFeeMsat
                          ),
                          ("fee_rate", policyUpdateRequestFeeRate),
                          ( "time_lock_delta",
                            policyUpdateRequestTimeLockDelta
                          ),
                          ( "max_htlc_msat",
                            policyUpdateRequestMaxHtlcMsat
                          ),
                          ( "min_htlc_msat",
                            policyUpdateRequestMinHtlcMsat
                          ),
                          ( "min_htlc_msat_specified",
                            policyUpdateRequestMinHtlcMsatSpecified
                          )
                        ]
                  }
            }
        )

data PolicyUpdateRequestScope
  = PolicyUpdateRequestScopeGlobal Hs.Bool
  | PolicyUpdateRequestScopeChanPoint LndGrpc.ChannelPoint
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PolicyUpdateRequestScope where
  nameOf _ = (Hs.fromString "PolicyUpdateRequestScope")

instance HsJSONPB.ToSchema PolicyUpdateRequestScope where
  declareNamedSchema _ =
    do
      let declare_global = HsJSONPB.declareSchemaRef
      policyUpdateRequestScopeGlobal <- declare_global Proxy.Proxy
      let _ =
            Hs.pure PolicyUpdateRequestScopeGlobal
              <*> HsJSONPB.asProxy declare_global
      let declare_chan_point = HsJSONPB.declareSchemaRef
      policyUpdateRequestScopeChanPoint <- declare_chan_point Proxy.Proxy
      let _ =
            Hs.pure PolicyUpdateRequestScopeChanPoint
              <*> HsJSONPB.asProxy declare_chan_point
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PolicyUpdateRequestScope",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("global", policyUpdateRequestScopeGlobal),
                          ( "chan_point",
                            policyUpdateRequestScopeChanPoint
                          )
                        ],
                    HsJSONPB._schemaMinProperties = Hs.Just 1,
                    HsJSONPB._schemaMaxProperties = Hs.Just 1
                  }
            }
        )

data PolicyUpdateResponse = PolicyUpdateResponse {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named PolicyUpdateResponse where
  nameOf _ = (Hs.fromString "PolicyUpdateResponse")

instance HsProtobuf.HasDefault PolicyUpdateResponse

instance HsProtobuf.Message PolicyUpdateResponse where
  encodeMessage _ PolicyUpdateResponse {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure PolicyUpdateResponse)
  dotProto _ = []

instance HsJSONPB.ToJSONPB PolicyUpdateResponse where
  toJSONPB (PolicyUpdateResponse) = (HsJSONPB.object [])
  toEncodingPB (PolicyUpdateResponse) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB PolicyUpdateResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "PolicyUpdateResponse"
        (\obj -> (Hs.pure PolicyUpdateResponse))
    )

instance HsJSONPB.ToJSON PolicyUpdateResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PolicyUpdateResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PolicyUpdateResponse where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "PolicyUpdateResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data ForwardingHistoryRequest
  = ForwardingHistoryRequest
      { forwardingHistoryRequestStartTime ::
          Hs.Word64,
        forwardingHistoryRequestEndTime ::
          Hs.Word64,
        forwardingHistoryRequestIndexOffset ::
          Hs.Word32,
        forwardingHistoryRequestNumMaxEvents ::
          Hs.Word32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ForwardingHistoryRequest where
  nameOf _ = (Hs.fromString "ForwardingHistoryRequest")

instance HsProtobuf.HasDefault ForwardingHistoryRequest

instance HsProtobuf.Message ForwardingHistoryRequest where
  encodeMessage
    _
    ForwardingHistoryRequest
      { forwardingHistoryRequestStartTime =
          forwardingHistoryRequestStartTime,
        forwardingHistoryRequestEndTime =
          forwardingHistoryRequestEndTime,
        forwardingHistoryRequestIndexOffset =
          forwardingHistoryRequestIndexOffset,
        forwardingHistoryRequestNumMaxEvents =
          forwardingHistoryRequestNumMaxEvents
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                forwardingHistoryRequestStartTime
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                forwardingHistoryRequestEndTime
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                forwardingHistoryRequestIndexOffset
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                forwardingHistoryRequestNumMaxEvents
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ForwardingHistoryRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "start_time")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "end_time")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "index_offset")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "num_max_events")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ForwardingHistoryRequest where
  toJSONPB (ForwardingHistoryRequest f1 f2 f3 f4) =
    ( HsJSONPB.object
        [ "start_time" .= f1,
          "end_time" .= f2,
          "index_offset" .= f3,
          "num_max_events" .= f4
        ]
    )
  toEncodingPB (ForwardingHistoryRequest f1 f2 f3 f4) =
    ( HsJSONPB.pairs
        [ "start_time" .= f1,
          "end_time" .= f2,
          "index_offset" .= f3,
          "num_max_events" .= f4
        ]
    )

instance HsJSONPB.FromJSONPB ForwardingHistoryRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ForwardingHistoryRequest"
        ( \obj ->
            (Hs.pure ForwardingHistoryRequest) <*> obj .: "start_time"
              <*> obj .: "end_time"
              <*> obj .: "index_offset"
              <*> obj .: "num_max_events"
        )
    )

instance HsJSONPB.ToJSON ForwardingHistoryRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ForwardingHistoryRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ForwardingHistoryRequest where
  declareNamedSchema _ =
    do
      let declare_start_time = HsJSONPB.declareSchemaRef
      forwardingHistoryRequestStartTime <- declare_start_time Proxy.Proxy
      let declare_end_time = HsJSONPB.declareSchemaRef
      forwardingHistoryRequestEndTime <- declare_end_time Proxy.Proxy
      let declare_index_offset = HsJSONPB.declareSchemaRef
      forwardingHistoryRequestIndexOffset <-
        declare_index_offset
          Proxy.Proxy
      let declare_num_max_events = HsJSONPB.declareSchemaRef
      forwardingHistoryRequestNumMaxEvents <-
        declare_num_max_events
          Proxy.Proxy
      let _ =
            Hs.pure ForwardingHistoryRequest
              <*> HsJSONPB.asProxy declare_start_time
              <*> HsJSONPB.asProxy declare_end_time
              <*> HsJSONPB.asProxy declare_index_offset
              <*> HsJSONPB.asProxy declare_num_max_events
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ForwardingHistoryRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "start_time",
                            forwardingHistoryRequestStartTime
                          ),
                          ( "end_time",
                            forwardingHistoryRequestEndTime
                          ),
                          ( "index_offset",
                            forwardingHistoryRequestIndexOffset
                          ),
                          ( "num_max_events",
                            forwardingHistoryRequestNumMaxEvents
                          )
                        ]
                  }
            }
        )

data ForwardingEvent
  = ForwardingEvent
      { forwardingEventTimestamp ::
          Hs.Word64,
        forwardingEventChanIdIn :: Hs.Word64,
        forwardingEventChanIdOut :: Hs.Word64,
        forwardingEventAmtIn :: Hs.Word64,
        forwardingEventAmtOut :: Hs.Word64,
        forwardingEventFee :: Hs.Word64,
        forwardingEventFeeMsat :: Hs.Word64,
        forwardingEventAmtInMsat :: Hs.Word64,
        forwardingEventAmtOutMsat :: Hs.Word64
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ForwardingEvent where
  nameOf _ = (Hs.fromString "ForwardingEvent")

instance HsProtobuf.HasDefault ForwardingEvent

instance HsProtobuf.Message ForwardingEvent where
  encodeMessage
    _
    ForwardingEvent
      { forwardingEventTimestamp =
          forwardingEventTimestamp,
        forwardingEventChanIdIn = forwardingEventChanIdIn,
        forwardingEventChanIdOut = forwardingEventChanIdOut,
        forwardingEventAmtIn = forwardingEventAmtIn,
        forwardingEventAmtOut = forwardingEventAmtOut,
        forwardingEventFee = forwardingEventFee,
        forwardingEventFeeMsat = forwardingEventFeeMsat,
        forwardingEventAmtInMsat = forwardingEventAmtInMsat,
        forwardingEventAmtOutMsat = forwardingEventAmtOutMsat
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                forwardingEventTimestamp
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                forwardingEventChanIdIn
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                forwardingEventChanIdOut
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                forwardingEventAmtIn
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                forwardingEventAmtOut
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                forwardingEventFee
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                forwardingEventFeeMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                forwardingEventAmtInMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                forwardingEventAmtOutMsat
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ForwardingEvent)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 10)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "timestamp")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "chan_id_in")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "chan_id_out")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "amt_in")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "amt_out")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "fee")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "fee_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "amt_in_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "amt_out_msat")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ForwardingEvent where
  toJSONPB (ForwardingEvent f1 f2 f4 f5 f6 f7 f8 f9 f10) =
    ( HsJSONPB.object
        [ "timestamp" .= f1,
          "chan_id_in" .= f2,
          "chan_id_out" .= f4,
          "amt_in" .= f5,
          "amt_out" .= f6,
          "fee" .= f7,
          "fee_msat" .= f8,
          "amt_in_msat" .= f9,
          "amt_out_msat" .= f10
        ]
    )
  toEncodingPB (ForwardingEvent f1 f2 f4 f5 f6 f7 f8 f9 f10) =
    ( HsJSONPB.pairs
        [ "timestamp" .= f1,
          "chan_id_in" .= f2,
          "chan_id_out" .= f4,
          "amt_in" .= f5,
          "amt_out" .= f6,
          "fee" .= f7,
          "fee_msat" .= f8,
          "amt_in_msat" .= f9,
          "amt_out_msat" .= f10
        ]
    )

instance HsJSONPB.FromJSONPB ForwardingEvent where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ForwardingEvent"
        ( \obj ->
            (Hs.pure ForwardingEvent) <*> obj .: "timestamp"
              <*> obj .: "chan_id_in"
              <*> obj .: "chan_id_out"
              <*> obj .: "amt_in"
              <*> obj .: "amt_out"
              <*> obj .: "fee"
              <*> obj .: "fee_msat"
              <*> obj .: "amt_in_msat"
              <*> obj .: "amt_out_msat"
        )
    )

instance HsJSONPB.ToJSON ForwardingEvent where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ForwardingEvent where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ForwardingEvent where
  declareNamedSchema _ =
    do
      let declare_timestamp = HsJSONPB.declareSchemaRef
      forwardingEventTimestamp <- declare_timestamp Proxy.Proxy
      let declare_chan_id_in = HsJSONPB.declareSchemaRef
      forwardingEventChanIdIn <- declare_chan_id_in Proxy.Proxy
      let declare_chan_id_out = HsJSONPB.declareSchemaRef
      forwardingEventChanIdOut <- declare_chan_id_out Proxy.Proxy
      let declare_amt_in = HsJSONPB.declareSchemaRef
      forwardingEventAmtIn <- declare_amt_in Proxy.Proxy
      let declare_amt_out = HsJSONPB.declareSchemaRef
      forwardingEventAmtOut <- declare_amt_out Proxy.Proxy
      let declare_fee = HsJSONPB.declareSchemaRef
      forwardingEventFee <- declare_fee Proxy.Proxy
      let declare_fee_msat = HsJSONPB.declareSchemaRef
      forwardingEventFeeMsat <- declare_fee_msat Proxy.Proxy
      let declare_amt_in_msat = HsJSONPB.declareSchemaRef
      forwardingEventAmtInMsat <- declare_amt_in_msat Proxy.Proxy
      let declare_amt_out_msat = HsJSONPB.declareSchemaRef
      forwardingEventAmtOutMsat <- declare_amt_out_msat Proxy.Proxy
      let _ =
            Hs.pure ForwardingEvent
              <*> HsJSONPB.asProxy declare_timestamp
              <*> HsJSONPB.asProxy declare_chan_id_in
              <*> HsJSONPB.asProxy declare_chan_id_out
              <*> HsJSONPB.asProxy declare_amt_in
              <*> HsJSONPB.asProxy declare_amt_out
              <*> HsJSONPB.asProxy declare_fee
              <*> HsJSONPB.asProxy declare_fee_msat
              <*> HsJSONPB.asProxy declare_amt_in_msat
              <*> HsJSONPB.asProxy declare_amt_out_msat
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ForwardingEvent",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("timestamp", forwardingEventTimestamp),
                          ("chan_id_in", forwardingEventChanIdIn),
                          ("chan_id_out", forwardingEventChanIdOut),
                          ("amt_in", forwardingEventAmtIn),
                          ("amt_out", forwardingEventAmtOut),
                          ("fee", forwardingEventFee),
                          ("fee_msat", forwardingEventFeeMsat),
                          ("amt_in_msat", forwardingEventAmtInMsat),
                          ( "amt_out_msat",
                            forwardingEventAmtOutMsat
                          )
                        ]
                  }
            }
        )

data ForwardingHistoryResponse
  = ForwardingHistoryResponse
      { forwardingHistoryResponseForwardingEvents ::
          Hs.Vector
            LndGrpc.ForwardingEvent,
        forwardingHistoryResponseLastOffsetIndex ::
          Hs.Word32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ForwardingHistoryResponse where
  nameOf _ = (Hs.fromString "ForwardingHistoryResponse")

instance HsProtobuf.HasDefault ForwardingHistoryResponse

instance HsProtobuf.Message ForwardingHistoryResponse where
  encodeMessage
    _
    ForwardingHistoryResponse
      { forwardingHistoryResponseForwardingEvents =
          forwardingHistoryResponseForwardingEvents,
        forwardingHistoryResponseLastOffsetIndex =
          forwardingHistoryResponseLastOffsetIndex
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector LndGrpc.ForwardingEvent)
                    @(HsProtobuf.NestedVec LndGrpc.ForwardingEvent)
                    forwardingHistoryResponseForwardingEvents
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                forwardingHistoryResponseLastOffsetIndex
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ForwardingHistoryResponse)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.ForwardingEvent))
              @(_ (Hs.Vector LndGrpc.ForwardingEvent))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "ForwardingEvent"))
          )
          (HsProtobuf.Single "forwarding_events")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "last_offset_index")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ForwardingHistoryResponse where
  toJSONPB (ForwardingHistoryResponse f1 f2) =
    ( HsJSONPB.object
        ["forwarding_events" .= f1, "last_offset_index" .= f2]
    )
  toEncodingPB (ForwardingHistoryResponse f1 f2) =
    ( HsJSONPB.pairs
        ["forwarding_events" .= f1, "last_offset_index" .= f2]
    )

instance HsJSONPB.FromJSONPB ForwardingHistoryResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ForwardingHistoryResponse"
        ( \obj ->
            (Hs.pure ForwardingHistoryResponse) <*> obj .: "forwarding_events"
              <*> obj .: "last_offset_index"
        )
    )

instance HsJSONPB.ToJSON ForwardingHistoryResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ForwardingHistoryResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ForwardingHistoryResponse where
  declareNamedSchema _ =
    do
      let declare_forwarding_events = HsJSONPB.declareSchemaRef
      forwardingHistoryResponseForwardingEvents <-
        declare_forwarding_events
          Proxy.Proxy
      let declare_last_offset_index = HsJSONPB.declareSchemaRef
      forwardingHistoryResponseLastOffsetIndex <-
        declare_last_offset_index
          Proxy.Proxy
      let _ =
            Hs.pure ForwardingHistoryResponse
              <*> HsJSONPB.asProxy declare_forwarding_events
              <*> HsJSONPB.asProxy declare_last_offset_index
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ForwardingHistoryResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "forwarding_events",
                            forwardingHistoryResponseForwardingEvents
                          ),
                          ( "last_offset_index",
                            forwardingHistoryResponseLastOffsetIndex
                          )
                        ]
                  }
            }
        )

data ExportChannelBackupRequest
  = ExportChannelBackupRequest
      { exportChannelBackupRequestChanPoint ::
          Hs.Maybe
            LndGrpc.ChannelPoint
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ExportChannelBackupRequest where
  nameOf _ = (Hs.fromString "ExportChannelBackupRequest")

instance HsProtobuf.HasDefault ExportChannelBackupRequest

instance HsProtobuf.Message ExportChannelBackupRequest where
  encodeMessage
    _
    ExportChannelBackupRequest
      { exportChannelBackupRequestChanPoint =
          exportChannelBackupRequestChanPoint
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelPoint)
                    @(HsProtobuf.Nested LndGrpc.ChannelPoint)
                    exportChannelBackupRequestChanPoint
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ExportChannelBackupRequest)
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelPoint))
              @(_ (Hs.Maybe LndGrpc.ChannelPoint))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "ChannelPoint"))
          )
          (HsProtobuf.Single "chan_point")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ExportChannelBackupRequest where
  toJSONPB (ExportChannelBackupRequest f1) =
    (HsJSONPB.object ["chan_point" .= f1])
  toEncodingPB (ExportChannelBackupRequest f1) =
    (HsJSONPB.pairs ["chan_point" .= f1])

instance HsJSONPB.FromJSONPB ExportChannelBackupRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ExportChannelBackupRequest"
        ( \obj ->
            (Hs.pure ExportChannelBackupRequest) <*> obj .: "chan_point"
        )
    )

instance HsJSONPB.ToJSON ExportChannelBackupRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ExportChannelBackupRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ExportChannelBackupRequest where
  declareNamedSchema _ =
    do
      let declare_chan_point = HsJSONPB.declareSchemaRef
      exportChannelBackupRequestChanPoint <-
        declare_chan_point
          Proxy.Proxy
      let _ =
            Hs.pure ExportChannelBackupRequest
              <*> HsJSONPB.asProxy declare_chan_point
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ExportChannelBackupRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "chan_point",
                            exportChannelBackupRequestChanPoint
                          )
                        ]
                  }
            }
        )

data ChannelBackup
  = ChannelBackup
      { channelBackupChanPoint ::
          Hs.Maybe
            LndGrpc.ChannelPoint,
        channelBackupChanBackup :: Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelBackup where
  nameOf _ = (Hs.fromString "ChannelBackup")

instance HsProtobuf.HasDefault ChannelBackup

instance HsProtobuf.Message ChannelBackup where
  encodeMessage
    _
    ChannelBackup
      { channelBackupChanPoint = channelBackupChanPoint,
        channelBackupChanBackup = channelBackupChanBackup
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelPoint)
                    @(HsProtobuf.Nested LndGrpc.ChannelPoint)
                    channelBackupChanPoint
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                channelBackupChanBackup
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChannelBackup)
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelPoint))
              @(_ (Hs.Maybe LndGrpc.ChannelPoint))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "ChannelPoint"))
          )
          (HsProtobuf.Single "chan_point")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "chan_backup")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChannelBackup where
  toJSONPB (ChannelBackup f1 f2) =
    (HsJSONPB.object ["chan_point" .= f1, "chan_backup" .= f2])
  toEncodingPB (ChannelBackup f1 f2) =
    (HsJSONPB.pairs ["chan_point" .= f1, "chan_backup" .= f2])

instance HsJSONPB.FromJSONPB ChannelBackup where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelBackup"
        ( \obj ->
            (Hs.pure ChannelBackup) <*> obj .: "chan_point"
              <*> obj .: "chan_backup"
        )
    )

instance HsJSONPB.ToJSON ChannelBackup where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelBackup where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelBackup where
  declareNamedSchema _ =
    do
      let declare_chan_point = HsJSONPB.declareSchemaRef
      channelBackupChanPoint <- declare_chan_point Proxy.Proxy
      let declare_chan_backup = HsJSONPB.declareSchemaRef
      channelBackupChanBackup <- declare_chan_backup Proxy.Proxy
      let _ =
            Hs.pure ChannelBackup
              <*> HsJSONPB.asProxy declare_chan_point
              <*> HsJSONPB.asProxy declare_chan_backup
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelBackup",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("chan_point", channelBackupChanPoint),
                          ("chan_backup", channelBackupChanBackup)
                        ]
                  }
            }
        )

data MultiChanBackup
  = MultiChanBackup
      { multiChanBackupChanPoints ::
          Hs.Vector
            LndGrpc.ChannelPoint,
        multiChanBackupMultiChanBackup :: Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named MultiChanBackup where
  nameOf _ = (Hs.fromString "MultiChanBackup")

instance HsProtobuf.HasDefault MultiChanBackup

instance HsProtobuf.Message MultiChanBackup where
  encodeMessage
    _
    MultiChanBackup
      { multiChanBackupChanPoints =
          multiChanBackupChanPoints,
        multiChanBackupMultiChanBackup = multiChanBackupMultiChanBackup
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector LndGrpc.ChannelPoint)
                    @(HsProtobuf.NestedVec LndGrpc.ChannelPoint)
                    multiChanBackupChanPoints
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                multiChanBackupMultiChanBackup
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure MultiChanBackup)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.ChannelPoint))
              @(_ (Hs.Vector LndGrpc.ChannelPoint))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "ChannelPoint"))
          )
          (HsProtobuf.Single "chan_points")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "multi_chan_backup")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB MultiChanBackup where
  toJSONPB (MultiChanBackup f1 f2) =
    ( HsJSONPB.object
        ["chan_points" .= f1, "multi_chan_backup" .= f2]
    )
  toEncodingPB (MultiChanBackup f1 f2) =
    (HsJSONPB.pairs ["chan_points" .= f1, "multi_chan_backup" .= f2])

instance HsJSONPB.FromJSONPB MultiChanBackup where
  parseJSONPB =
    ( HsJSONPB.withObject
        "MultiChanBackup"
        ( \obj ->
            (Hs.pure MultiChanBackup) <*> obj .: "chan_points"
              <*> obj .: "multi_chan_backup"
        )
    )

instance HsJSONPB.ToJSON MultiChanBackup where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON MultiChanBackup where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema MultiChanBackup where
  declareNamedSchema _ =
    do
      let declare_chan_points = HsJSONPB.declareSchemaRef
      multiChanBackupChanPoints <- declare_chan_points Proxy.Proxy
      let declare_multi_chan_backup = HsJSONPB.declareSchemaRef
      multiChanBackupMultiChanBackup <-
        declare_multi_chan_backup
          Proxy.Proxy
      let _ =
            Hs.pure MultiChanBackup
              <*> HsJSONPB.asProxy declare_chan_points
              <*> HsJSONPB.asProxy declare_multi_chan_backup
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "MultiChanBackup",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("chan_points", multiChanBackupChanPoints),
                          ( "multi_chan_backup",
                            multiChanBackupMultiChanBackup
                          )
                        ]
                  }
            }
        )

data ChanBackupExportRequest = ChanBackupExportRequest {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChanBackupExportRequest where
  nameOf _ = (Hs.fromString "ChanBackupExportRequest")

instance HsProtobuf.HasDefault ChanBackupExportRequest

instance HsProtobuf.Message ChanBackupExportRequest where
  encodeMessage _ ChanBackupExportRequest {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure ChanBackupExportRequest)
  dotProto _ = []

instance HsJSONPB.ToJSONPB ChanBackupExportRequest where
  toJSONPB (ChanBackupExportRequest) = (HsJSONPB.object [])
  toEncodingPB (ChanBackupExportRequest) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB ChanBackupExportRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChanBackupExportRequest"
        (\obj -> (Hs.pure ChanBackupExportRequest))
    )

instance HsJSONPB.ToJSON ChanBackupExportRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChanBackupExportRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChanBackupExportRequest where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChanBackupExportRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data ChanBackupSnapshot
  = ChanBackupSnapshot
      { chanBackupSnapshotSingleChanBackups ::
          Hs.Maybe
            LndGrpc.ChannelBackups,
        chanBackupSnapshotMultiChanBackup ::
          Hs.Maybe
            LndGrpc.MultiChanBackup
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChanBackupSnapshot where
  nameOf _ = (Hs.fromString "ChanBackupSnapshot")

instance HsProtobuf.HasDefault ChanBackupSnapshot

instance HsProtobuf.Message ChanBackupSnapshot where
  encodeMessage
    _
    ChanBackupSnapshot
      { chanBackupSnapshotSingleChanBackups =
          chanBackupSnapshotSingleChanBackups,
        chanBackupSnapshotMultiChanBackup =
          chanBackupSnapshotMultiChanBackup
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelBackups)
                    @(HsProtobuf.Nested LndGrpc.ChannelBackups)
                    chanBackupSnapshotSingleChanBackups
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce @(Hs.Maybe LndGrpc.MultiChanBackup)
                    @(HsProtobuf.Nested LndGrpc.MultiChanBackup)
                    chanBackupSnapshotMultiChanBackup
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChanBackupSnapshot)
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelBackups))
              @(_ (Hs.Maybe LndGrpc.ChannelBackups))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.MultiChanBackup))
              @(_ (Hs.Maybe LndGrpc.MultiChanBackup))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "ChannelBackups"))
          )
          (HsProtobuf.Single "single_chan_backups")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "MultiChanBackup"))
          )
          (HsProtobuf.Single "multi_chan_backup")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChanBackupSnapshot where
  toJSONPB (ChanBackupSnapshot f1 f2) =
    ( HsJSONPB.object
        ["single_chan_backups" .= f1, "multi_chan_backup" .= f2]
    )
  toEncodingPB (ChanBackupSnapshot f1 f2) =
    ( HsJSONPB.pairs
        ["single_chan_backups" .= f1, "multi_chan_backup" .= f2]
    )

instance HsJSONPB.FromJSONPB ChanBackupSnapshot where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChanBackupSnapshot"
        ( \obj ->
            (Hs.pure ChanBackupSnapshot) <*> obj .: "single_chan_backups"
              <*> obj .: "multi_chan_backup"
        )
    )

instance HsJSONPB.ToJSON ChanBackupSnapshot where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChanBackupSnapshot where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChanBackupSnapshot where
  declareNamedSchema _ =
    do
      let declare_single_chan_backups = HsJSONPB.declareSchemaRef
      chanBackupSnapshotSingleChanBackups <-
        declare_single_chan_backups
          Proxy.Proxy
      let declare_multi_chan_backup = HsJSONPB.declareSchemaRef
      chanBackupSnapshotMultiChanBackup <-
        declare_multi_chan_backup
          Proxy.Proxy
      let _ =
            Hs.pure ChanBackupSnapshot
              <*> HsJSONPB.asProxy declare_single_chan_backups
              <*> HsJSONPB.asProxy declare_multi_chan_backup
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChanBackupSnapshot",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "single_chan_backups",
                            chanBackupSnapshotSingleChanBackups
                          ),
                          ( "multi_chan_backup",
                            chanBackupSnapshotMultiChanBackup
                          )
                        ]
                  }
            }
        )

data ChannelBackups
  = ChannelBackups
      { channelBackupsChanBackups ::
          Hs.Vector
            LndGrpc.ChannelBackup
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelBackups where
  nameOf _ = (Hs.fromString "ChannelBackups")

instance HsProtobuf.HasDefault ChannelBackups

instance HsProtobuf.Message ChannelBackups where
  encodeMessage
    _
    ChannelBackups
      { channelBackupsChanBackups =
          channelBackupsChanBackups
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector LndGrpc.ChannelBackup)
                    @(HsProtobuf.NestedVec LndGrpc.ChannelBackup)
                    channelBackupsChanBackups
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChannelBackups)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.ChannelBackup))
              @(_ (Hs.Vector LndGrpc.ChannelBackup))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "ChannelBackup"))
          )
          (HsProtobuf.Single "chan_backups")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChannelBackups where
  toJSONPB (ChannelBackups f1) =
    (HsJSONPB.object ["chan_backups" .= f1])
  toEncodingPB (ChannelBackups f1) =
    (HsJSONPB.pairs ["chan_backups" .= f1])

instance HsJSONPB.FromJSONPB ChannelBackups where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelBackups"
        (\obj -> (Hs.pure ChannelBackups) <*> obj .: "chan_backups")
    )

instance HsJSONPB.ToJSON ChannelBackups where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelBackups where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelBackups where
  declareNamedSchema _ =
    do
      let declare_chan_backups = HsJSONPB.declareSchemaRef
      channelBackupsChanBackups <- declare_chan_backups Proxy.Proxy
      let _ =
            Hs.pure ChannelBackups
              <*> HsJSONPB.asProxy declare_chan_backups
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelBackups",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "chan_backups",
                            channelBackupsChanBackups
                          )
                        ]
                  }
            }
        )

data RestoreChanBackupRequest
  = RestoreChanBackupRequest
      { restoreChanBackupRequestBackup ::
          Hs.Maybe
            RestoreChanBackupRequestBackup
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named RestoreChanBackupRequest where
  nameOf _ = (Hs.fromString "RestoreChanBackupRequest")

instance HsProtobuf.HasDefault RestoreChanBackupRequest

instance HsProtobuf.Message RestoreChanBackupRequest where
  encodeMessage
    _
    RestoreChanBackupRequest
      { restoreChanBackupRequestBackup =
          restoreChanBackupRequestBackup
      } =
      ( Hs.mconcat
          [ case restoreChanBackupRequestBackup of
              Hs.Nothing -> Hs.mempty
              Hs.Just x ->
                case x of
                  RestoreChanBackupRequestBackupChanBackups y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 1)
                        ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelBackups)
                            @(HsProtobuf.Nested LndGrpc.ChannelBackups)
                            (Hs.Just y)
                        )
                    )
                  RestoreChanBackupRequestBackupMultiChanBackup y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 2)
                        (HsProtobuf.ForceEmit y)
                    )
          ]
      )
  decodeMessage _ =
    (Hs.pure RestoreChanBackupRequest)
      <*> ( HsProtobuf.oneof
              Hs.Nothing
              [ ( (HsProtobuf.FieldNumber 1),
                  (Hs.pure (Hs.fmap RestoreChanBackupRequestBackupChanBackups))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelBackups))
                            @(_ (Hs.Maybe LndGrpc.ChannelBackups))
                            HsProtobuf.decodeMessageField
                        )
                ),
                ( (HsProtobuf.FieldNumber 2),
                  ( Hs.pure
                      (Hs.Just Hs.. RestoreChanBackupRequestBackupMultiChanBackup)
                  )
                    <*> HsProtobuf.decodeMessageField
                )
              ]
          )
  dotProto _ = []

instance HsJSONPB.ToJSONPB RestoreChanBackupRequest where
  toJSONPB (RestoreChanBackupRequest f1_or_f2) =
    ( HsJSONPB.object
        [ ( let encodeBackup =
                  ( case f1_or_f2 of
                      Hs.Just (RestoreChanBackupRequestBackupChanBackups f1) ->
                        (HsJSONPB.pair "chan_backups" f1)
                      Hs.Just (RestoreChanBackupRequestBackupMultiChanBackup f2) ->
                        (HsJSONPB.pair "multi_chan_backup" f2)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then
                      ("backup" .= (HsJSONPB.objectOrNull [encodeBackup] options))
                        options
                    else encodeBackup options
          )
        ]
    )
  toEncodingPB (RestoreChanBackupRequest f1_or_f2) =
    ( HsJSONPB.pairs
        [ ( let encodeBackup =
                  ( case f1_or_f2 of
                      Hs.Just (RestoreChanBackupRequestBackupChanBackups f1) ->
                        (HsJSONPB.pair "chan_backups" f1)
                      Hs.Just (RestoreChanBackupRequestBackupMultiChanBackup f2) ->
                        (HsJSONPB.pair "multi_chan_backup" f2)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then ("backup" .= (HsJSONPB.pairsOrNull [encodeBackup] options)) options
                    else encodeBackup options
          )
        ]
    )

instance HsJSONPB.FromJSONPB RestoreChanBackupRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "RestoreChanBackupRequest"
        ( \obj ->
            (Hs.pure RestoreChanBackupRequest)
              <*> ( let parseBackup parseObj =
                          Hs.msum
                            [ Hs.Just Hs.. RestoreChanBackupRequestBackupChanBackups
                                <$> (HsJSONPB.parseField parseObj "chan_backups"),
                              Hs.Just Hs.. RestoreChanBackupRequestBackupMultiChanBackup
                                <$> (HsJSONPB.parseField parseObj "multi_chan_backup"),
                              Hs.pure Hs.Nothing
                            ]
                     in ( (obj .: "backup")
                            Hs.>>= (HsJSONPB.withObject "backup" parseBackup)
                        )
                          <|> (parseBackup obj)
                  )
        )
    )

instance HsJSONPB.ToJSON RestoreChanBackupRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON RestoreChanBackupRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema RestoreChanBackupRequest where
  declareNamedSchema _ =
    do
      let declare_backup = HsJSONPB.declareSchemaRef
      restoreChanBackupRequestBackup <- declare_backup Proxy.Proxy
      let _ =
            Hs.pure RestoreChanBackupRequest
              <*> HsJSONPB.asProxy declare_backup
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "RestoreChanBackupRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "backup",
                            restoreChanBackupRequestBackup
                          )
                        ]
                  }
            }
        )

data RestoreChanBackupRequestBackup
  = RestoreChanBackupRequestBackupChanBackups LndGrpc.ChannelBackups
  | RestoreChanBackupRequestBackupMultiChanBackup Hs.ByteString
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named RestoreChanBackupRequestBackup where
  nameOf _ = (Hs.fromString "RestoreChanBackupRequestBackup")

instance HsJSONPB.ToSchema RestoreChanBackupRequestBackup where
  declareNamedSchema _ =
    do
      let declare_chan_backups = HsJSONPB.declareSchemaRef
      restoreChanBackupRequestBackupChanBackups <-
        declare_chan_backups
          Proxy.Proxy
      let _ =
            Hs.pure RestoreChanBackupRequestBackupChanBackups
              <*> HsJSONPB.asProxy declare_chan_backups
      let declare_multi_chan_backup = HsJSONPB.declareSchemaRef
      restoreChanBackupRequestBackupMultiChanBackup <-
        declare_multi_chan_backup
          Proxy.Proxy
      let _ =
            Hs.pure RestoreChanBackupRequestBackupMultiChanBackup
              <*> HsJSONPB.asProxy declare_multi_chan_backup
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "RestoreChanBackupRequestBackup",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "chan_backups",
                            restoreChanBackupRequestBackupChanBackups
                          ),
                          ( "multi_chan_backup",
                            restoreChanBackupRequestBackupMultiChanBackup
                          )
                        ],
                    HsJSONPB._schemaMinProperties = Hs.Just 1,
                    HsJSONPB._schemaMaxProperties = Hs.Just 1
                  }
            }
        )

data RestoreBackupResponse = RestoreBackupResponse {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named RestoreBackupResponse where
  nameOf _ = (Hs.fromString "RestoreBackupResponse")

instance HsProtobuf.HasDefault RestoreBackupResponse

instance HsProtobuf.Message RestoreBackupResponse where
  encodeMessage _ RestoreBackupResponse {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure RestoreBackupResponse)
  dotProto _ = []

instance HsJSONPB.ToJSONPB RestoreBackupResponse where
  toJSONPB (RestoreBackupResponse) = (HsJSONPB.object [])
  toEncodingPB (RestoreBackupResponse) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB RestoreBackupResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "RestoreBackupResponse"
        (\obj -> (Hs.pure RestoreBackupResponse))
    )

instance HsJSONPB.ToJSON RestoreBackupResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON RestoreBackupResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema RestoreBackupResponse where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "RestoreBackupResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data ChannelBackupSubscription = ChannelBackupSubscription {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelBackupSubscription where
  nameOf _ = (Hs.fromString "ChannelBackupSubscription")

instance HsProtobuf.HasDefault ChannelBackupSubscription

instance HsProtobuf.Message ChannelBackupSubscription where
  encodeMessage _ ChannelBackupSubscription {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure ChannelBackupSubscription)
  dotProto _ = []

instance HsJSONPB.ToJSONPB ChannelBackupSubscription where
  toJSONPB (ChannelBackupSubscription) = (HsJSONPB.object [])
  toEncodingPB (ChannelBackupSubscription) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB ChannelBackupSubscription where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelBackupSubscription"
        (\obj -> (Hs.pure ChannelBackupSubscription))
    )

instance HsJSONPB.ToJSON ChannelBackupSubscription where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelBackupSubscription where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelBackupSubscription where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelBackupSubscription",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data VerifyChanBackupResponse = VerifyChanBackupResponse {}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named VerifyChanBackupResponse where
  nameOf _ = (Hs.fromString "VerifyChanBackupResponse")

instance HsProtobuf.HasDefault VerifyChanBackupResponse

instance HsProtobuf.Message VerifyChanBackupResponse where
  encodeMessage _ VerifyChanBackupResponse {} = (Hs.mconcat [])
  decodeMessage _ = (Hs.pure VerifyChanBackupResponse)
  dotProto _ = []

instance HsJSONPB.ToJSONPB VerifyChanBackupResponse where
  toJSONPB (VerifyChanBackupResponse) = (HsJSONPB.object [])
  toEncodingPB (VerifyChanBackupResponse) = (HsJSONPB.pairs [])

instance HsJSONPB.FromJSONPB VerifyChanBackupResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "VerifyChanBackupResponse"
        (\obj -> (Hs.pure VerifyChanBackupResponse))
    )

instance HsJSONPB.ToJSON VerifyChanBackupResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON VerifyChanBackupResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema VerifyChanBackupResponse where
  declareNamedSchema _ =
    do
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "VerifyChanBackupResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList []
                  }
            }
        )

data MacaroonPermission
  = MacaroonPermission
      { macaroonPermissionEntity ::
          Hs.Text,
        macaroonPermissionAction :: Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named MacaroonPermission where
  nameOf _ = (Hs.fromString "MacaroonPermission")

instance HsProtobuf.HasDefault MacaroonPermission

instance HsProtobuf.Message MacaroonPermission where
  encodeMessage
    _
    MacaroonPermission
      { macaroonPermissionEntity =
          macaroonPermissionEntity,
        macaroonPermissionAction = macaroonPermissionAction
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                macaroonPermissionEntity
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                macaroonPermissionAction
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure MacaroonPermission)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "entity")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "action")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB MacaroonPermission where
  toJSONPB (MacaroonPermission f1 f2) =
    (HsJSONPB.object ["entity" .= f1, "action" .= f2])
  toEncodingPB (MacaroonPermission f1 f2) =
    (HsJSONPB.pairs ["entity" .= f1, "action" .= f2])

instance HsJSONPB.FromJSONPB MacaroonPermission where
  parseJSONPB =
    ( HsJSONPB.withObject
        "MacaroonPermission"
        ( \obj ->
            (Hs.pure MacaroonPermission) <*> obj .: "entity"
              <*> obj .: "action"
        )
    )

instance HsJSONPB.ToJSON MacaroonPermission where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON MacaroonPermission where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema MacaroonPermission where
  declareNamedSchema _ =
    do
      let declare_entity = HsJSONPB.declareSchemaRef
      macaroonPermissionEntity <- declare_entity Proxy.Proxy
      let declare_action = HsJSONPB.declareSchemaRef
      macaroonPermissionAction <- declare_action Proxy.Proxy
      let _ =
            Hs.pure MacaroonPermission
              <*> HsJSONPB.asProxy declare_entity
              <*> HsJSONPB.asProxy declare_action
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "MacaroonPermission",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("entity", macaroonPermissionEntity),
                          ("action", macaroonPermissionAction)
                        ]
                  }
            }
        )

data BakeMacaroonRequest
  = BakeMacaroonRequest
      { bakeMacaroonRequestPermissions ::
          Hs.Vector
            LndGrpc.MacaroonPermission
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named BakeMacaroonRequest where
  nameOf _ = (Hs.fromString "BakeMacaroonRequest")

instance HsProtobuf.HasDefault BakeMacaroonRequest

instance HsProtobuf.Message BakeMacaroonRequest where
  encodeMessage
    _
    BakeMacaroonRequest
      { bakeMacaroonRequestPermissions =
          bakeMacaroonRequestPermissions
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector LndGrpc.MacaroonPermission)
                    @(HsProtobuf.NestedVec LndGrpc.MacaroonPermission)
                    bakeMacaroonRequestPermissions
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure BakeMacaroonRequest)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec LndGrpc.MacaroonPermission))
              @(_ (Hs.Vector LndGrpc.MacaroonPermission))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "MacaroonPermission"))
          )
          (HsProtobuf.Single "permissions")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB BakeMacaroonRequest where
  toJSONPB (BakeMacaroonRequest f1) =
    (HsJSONPB.object ["permissions" .= f1])
  toEncodingPB (BakeMacaroonRequest f1) =
    (HsJSONPB.pairs ["permissions" .= f1])

instance HsJSONPB.FromJSONPB BakeMacaroonRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "BakeMacaroonRequest"
        (\obj -> (Hs.pure BakeMacaroonRequest) <*> obj .: "permissions")
    )

instance HsJSONPB.ToJSON BakeMacaroonRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON BakeMacaroonRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema BakeMacaroonRequest where
  declareNamedSchema _ =
    do
      let declare_permissions = HsJSONPB.declareSchemaRef
      bakeMacaroonRequestPermissions <- declare_permissions Proxy.Proxy
      let _ =
            Hs.pure BakeMacaroonRequest
              <*> HsJSONPB.asProxy declare_permissions
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "BakeMacaroonRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "permissions",
                            bakeMacaroonRequestPermissions
                          )
                        ]
                  }
            }
        )

data BakeMacaroonResponse
  = BakeMacaroonResponse
      { bakeMacaroonResponseMacaroon ::
          Hs.Text
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named BakeMacaroonResponse where
  nameOf _ = (Hs.fromString "BakeMacaroonResponse")

instance HsProtobuf.HasDefault BakeMacaroonResponse

instance HsProtobuf.Message BakeMacaroonResponse where
  encodeMessage
    _
    BakeMacaroonResponse
      { bakeMacaroonResponseMacaroon =
          bakeMacaroonResponseMacaroon
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                bakeMacaroonResponseMacaroon
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure BakeMacaroonResponse)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "macaroon")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB BakeMacaroonResponse where
  toJSONPB (BakeMacaroonResponse f1) =
    (HsJSONPB.object ["macaroon" .= f1])
  toEncodingPB (BakeMacaroonResponse f1) =
    (HsJSONPB.pairs ["macaroon" .= f1])

instance HsJSONPB.FromJSONPB BakeMacaroonResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "BakeMacaroonResponse"
        (\obj -> (Hs.pure BakeMacaroonResponse) <*> obj .: "macaroon")
    )

instance HsJSONPB.ToJSON BakeMacaroonResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON BakeMacaroonResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema BakeMacaroonResponse where
  declareNamedSchema _ =
    do
      let declare_macaroon = HsJSONPB.declareSchemaRef
      bakeMacaroonResponseMacaroon <- declare_macaroon Proxy.Proxy
      let _ =
            Hs.pure BakeMacaroonResponse
              <*> HsJSONPB.asProxy declare_macaroon
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "BakeMacaroonResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "macaroon",
                            bakeMacaroonResponseMacaroon
                          )
                        ]
                  }
            }
        )

data Failure
  = Failure
      { failureCode ::
          HsProtobuf.Enumerated
            LndGrpc.Failure_FailureCode,
        failureChannelUpdate :: Hs.Maybe LndGrpc.ChannelUpdate,
        failureHtlcMsat :: Hs.Word64,
        failureOnionSha256 :: Hs.ByteString,
        failureCltvExpiry :: Hs.Word32,
        failureFlags :: Hs.Word32,
        failureFailureSourceIndex :: Hs.Word32,
        failureHeight :: Hs.Word32
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Failure where
  nameOf _ = (Hs.fromString "Failure")

instance HsProtobuf.HasDefault Failure

instance HsProtobuf.Message Failure where
  encodeMessage
    _
    Failure
      { failureCode = failureCode,
        failureChannelUpdate = failureChannelUpdate,
        failureHtlcMsat = failureHtlcMsat,
        failureOnionSha256 = failureOnionSha256,
        failureCltvExpiry = failureCltvExpiry,
        failureFlags = failureFlags,
        failureFailureSourceIndex = failureFailureSourceIndex,
        failureHeight = failureHeight
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                failureCode
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                ( Hs.coerce @(Hs.Maybe LndGrpc.ChannelUpdate)
                    @(HsProtobuf.Nested LndGrpc.ChannelUpdate)
                    failureChannelUpdate
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                failureHtlcMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                failureOnionSha256
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                failureCltvExpiry
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                failureFlags
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                failureFailureSourceIndex
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                failureHeight
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure Failure)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested LndGrpc.ChannelUpdate))
              @(_ (Hs.Maybe LndGrpc.ChannelUpdate))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "FailureCode"))
          )
          (HsProtobuf.Single "code")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "ChannelUpdate"))
          )
          (HsProtobuf.Single "channel_update")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "htlc_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "onion_sha_256")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "cltv_expiry")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "flags")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "failure_source_index")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "height")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB Failure where
  toJSONPB (Failure f1 f3 f4 f5 f6 f7 f8 f9) =
    ( HsJSONPB.object
        [ "code" .= f1,
          "channel_update" .= f3,
          "htlc_msat" .= f4,
          "onion_sha_256" .= f5,
          "cltv_expiry" .= f6,
          "flags" .= f7,
          "failure_source_index" .= f8,
          "height" .= f9
        ]
    )
  toEncodingPB (Failure f1 f3 f4 f5 f6 f7 f8 f9) =
    ( HsJSONPB.pairs
        [ "code" .= f1,
          "channel_update" .= f3,
          "htlc_msat" .= f4,
          "onion_sha_256" .= f5,
          "cltv_expiry" .= f6,
          "flags" .= f7,
          "failure_source_index" .= f8,
          "height" .= f9
        ]
    )

instance HsJSONPB.FromJSONPB Failure where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Failure"
        ( \obj ->
            (Hs.pure Failure) <*> obj .: "code" <*> obj .: "channel_update"
              <*> obj .: "htlc_msat"
              <*> obj .: "onion_sha_256"
              <*> obj .: "cltv_expiry"
              <*> obj .: "flags"
              <*> obj .: "failure_source_index"
              <*> obj .: "height"
        )
    )

instance HsJSONPB.ToJSON Failure where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Failure where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema Failure where
  declareNamedSchema _ =
    do
      let declare_code = HsJSONPB.declareSchemaRef
      failureCode <- declare_code Proxy.Proxy
      let declare_channel_update = HsJSONPB.declareSchemaRef
      failureChannelUpdate <- declare_channel_update Proxy.Proxy
      let declare_htlc_msat = HsJSONPB.declareSchemaRef
      failureHtlcMsat <- declare_htlc_msat Proxy.Proxy
      let declare_onion_sha_256 = HsJSONPB.declareSchemaRef
      failureOnionSha256 <- declare_onion_sha_256 Proxy.Proxy
      let declare_cltv_expiry = HsJSONPB.declareSchemaRef
      failureCltvExpiry <- declare_cltv_expiry Proxy.Proxy
      let declare_flags = HsJSONPB.declareSchemaRef
      failureFlags <- declare_flags Proxy.Proxy
      let declare_failure_source_index = HsJSONPB.declareSchemaRef
      failureFailureSourceIndex <-
        declare_failure_source_index
          Proxy.Proxy
      let declare_height = HsJSONPB.declareSchemaRef
      failureHeight <- declare_height Proxy.Proxy
      let _ =
            Hs.pure Failure <*> HsJSONPB.asProxy declare_code
              <*> HsJSONPB.asProxy declare_channel_update
              <*> HsJSONPB.asProxy declare_htlc_msat
              <*> HsJSONPB.asProxy declare_onion_sha_256
              <*> HsJSONPB.asProxy declare_cltv_expiry
              <*> HsJSONPB.asProxy declare_flags
              <*> HsJSONPB.asProxy declare_failure_source_index
              <*> HsJSONPB.asProxy declare_height
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "Failure",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("code", failureCode),
                          ("channel_update", failureChannelUpdate),
                          ("htlc_msat", failureHtlcMsat),
                          ("onion_sha_256", failureOnionSha256),
                          ("cltv_expiry", failureCltvExpiry),
                          ("flags", failureFlags),
                          ( "failure_source_index",
                            failureFailureSourceIndex
                          ),
                          ("height", failureHeight)
                        ]
                  }
            }
        )

data Failure_FailureCode
  = Failure_FailureCodeRESERVED
  | Failure_FailureCodeINCORRECT_OR_UNKNOWN_PAYMENT_DETAILS
  | Failure_FailureCodeINCORRECT_PAYMENT_AMOUNT
  | Failure_FailureCodeFINAL_INCORRECT_CLTV_EXPIRY
  | Failure_FailureCodeFINAL_INCORRECT_HTLC_AMOUNT
  | Failure_FailureCodeFINAL_EXPIRY_TOO_SOON
  | Failure_FailureCodeINVALID_REALM
  | Failure_FailureCodeEXPIRY_TOO_SOON
  | Failure_FailureCodeINVALID_ONION_VERSION
  | Failure_FailureCodeINVALID_ONION_HMAC
  | Failure_FailureCodeINVALID_ONION_KEY
  | Failure_FailureCodeAMOUNT_BELOW_MINIMUM
  | Failure_FailureCodeFEE_INSUFFICIENT
  | Failure_FailureCodeINCORRECT_CLTV_EXPIRY
  | Failure_FailureCodeCHANNEL_DISABLED
  | Failure_FailureCodeTEMPORARY_CHANNEL_FAILURE
  | Failure_FailureCodeREQUIRED_NODE_FEATURE_MISSING
  | Failure_FailureCodeREQUIRED_CHANNEL_FEATURE_MISSING
  | Failure_FailureCodeUNKNOWN_NEXT_PEER
  | Failure_FailureCodeTEMPORARY_NODE_FAILURE
  | Failure_FailureCodePERMANENT_NODE_FAILURE
  | Failure_FailureCodePERMANENT_CHANNEL_FAILURE
  | Failure_FailureCodeEXPIRY_TOO_FAR
  | Failure_FailureCodeMPP_TIMEOUT
  | Failure_FailureCodeINTERNAL_FAILURE
  | Failure_FailureCodeUNKNOWN_FAILURE
  | Failure_FailureCodeUNREADABLE_FAILURE
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Failure_FailureCode where
  nameOf _ = (Hs.fromString "Failure_FailureCode")

instance HsProtobuf.HasDefault Failure_FailureCode

instance Hs.Bounded Failure_FailureCode where
  minBound = Failure_FailureCodeRESERVED
  maxBound = Failure_FailureCodeUNREADABLE_FAILURE

instance Hs.Ord Failure_FailureCode where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum Failure_FailureCode where
  toProtoEnumMay 0 = Hs.Just Failure_FailureCodeRESERVED
  toProtoEnumMay 1 =
    Hs.Just Failure_FailureCodeINCORRECT_OR_UNKNOWN_PAYMENT_DETAILS
  toProtoEnumMay 2 =
    Hs.Just Failure_FailureCodeINCORRECT_PAYMENT_AMOUNT
  toProtoEnumMay 3 =
    Hs.Just Failure_FailureCodeFINAL_INCORRECT_CLTV_EXPIRY
  toProtoEnumMay 4 =
    Hs.Just Failure_FailureCodeFINAL_INCORRECT_HTLC_AMOUNT
  toProtoEnumMay 5 = Hs.Just Failure_FailureCodeFINAL_EXPIRY_TOO_SOON
  toProtoEnumMay 6 = Hs.Just Failure_FailureCodeINVALID_REALM
  toProtoEnumMay 7 = Hs.Just Failure_FailureCodeEXPIRY_TOO_SOON
  toProtoEnumMay 8 = Hs.Just Failure_FailureCodeINVALID_ONION_VERSION
  toProtoEnumMay 9 = Hs.Just Failure_FailureCodeINVALID_ONION_HMAC
  toProtoEnumMay 10 = Hs.Just Failure_FailureCodeINVALID_ONION_KEY
  toProtoEnumMay 11 = Hs.Just Failure_FailureCodeAMOUNT_BELOW_MINIMUM
  toProtoEnumMay 12 = Hs.Just Failure_FailureCodeFEE_INSUFFICIENT
  toProtoEnumMay 13 =
    Hs.Just Failure_FailureCodeINCORRECT_CLTV_EXPIRY
  toProtoEnumMay 14 = Hs.Just Failure_FailureCodeCHANNEL_DISABLED
  toProtoEnumMay 15 =
    Hs.Just Failure_FailureCodeTEMPORARY_CHANNEL_FAILURE
  toProtoEnumMay 16 =
    Hs.Just Failure_FailureCodeREQUIRED_NODE_FEATURE_MISSING
  toProtoEnumMay 17 =
    Hs.Just Failure_FailureCodeREQUIRED_CHANNEL_FEATURE_MISSING
  toProtoEnumMay 18 = Hs.Just Failure_FailureCodeUNKNOWN_NEXT_PEER
  toProtoEnumMay 19 =
    Hs.Just Failure_FailureCodeTEMPORARY_NODE_FAILURE
  toProtoEnumMay 20 =
    Hs.Just Failure_FailureCodePERMANENT_NODE_FAILURE
  toProtoEnumMay 21 =
    Hs.Just Failure_FailureCodePERMANENT_CHANNEL_FAILURE
  toProtoEnumMay 22 = Hs.Just Failure_FailureCodeEXPIRY_TOO_FAR
  toProtoEnumMay 23 = Hs.Just Failure_FailureCodeMPP_TIMEOUT
  toProtoEnumMay 997 = Hs.Just Failure_FailureCodeINTERNAL_FAILURE
  toProtoEnumMay 998 = Hs.Just Failure_FailureCodeUNKNOWN_FAILURE
  toProtoEnumMay 999 = Hs.Just Failure_FailureCodeUNREADABLE_FAILURE
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (Failure_FailureCodeRESERVED) = 0
  fromProtoEnum (Failure_FailureCodeINCORRECT_OR_UNKNOWN_PAYMENT_DETAILS) = 1
  fromProtoEnum (Failure_FailureCodeINCORRECT_PAYMENT_AMOUNT) = 2
  fromProtoEnum (Failure_FailureCodeFINAL_INCORRECT_CLTV_EXPIRY) = 3
  fromProtoEnum (Failure_FailureCodeFINAL_INCORRECT_HTLC_AMOUNT) = 4
  fromProtoEnum (Failure_FailureCodeFINAL_EXPIRY_TOO_SOON) = 5
  fromProtoEnum (Failure_FailureCodeINVALID_REALM) = 6
  fromProtoEnum (Failure_FailureCodeEXPIRY_TOO_SOON) = 7
  fromProtoEnum (Failure_FailureCodeINVALID_ONION_VERSION) = 8
  fromProtoEnum (Failure_FailureCodeINVALID_ONION_HMAC) = 9
  fromProtoEnum (Failure_FailureCodeINVALID_ONION_KEY) = 10
  fromProtoEnum (Failure_FailureCodeAMOUNT_BELOW_MINIMUM) = 11
  fromProtoEnum (Failure_FailureCodeFEE_INSUFFICIENT) = 12
  fromProtoEnum (Failure_FailureCodeINCORRECT_CLTV_EXPIRY) = 13
  fromProtoEnum (Failure_FailureCodeCHANNEL_DISABLED) = 14
  fromProtoEnum (Failure_FailureCodeTEMPORARY_CHANNEL_FAILURE) = 15
  fromProtoEnum (Failure_FailureCodeREQUIRED_NODE_FEATURE_MISSING) =
    16
  fromProtoEnum (Failure_FailureCodeREQUIRED_CHANNEL_FEATURE_MISSING) =
    17
  fromProtoEnum (Failure_FailureCodeUNKNOWN_NEXT_PEER) = 18
  fromProtoEnum (Failure_FailureCodeTEMPORARY_NODE_FAILURE) = 19
  fromProtoEnum (Failure_FailureCodePERMANENT_NODE_FAILURE) = 20
  fromProtoEnum (Failure_FailureCodePERMANENT_CHANNEL_FAILURE) = 21
  fromProtoEnum (Failure_FailureCodeEXPIRY_TOO_FAR) = 22
  fromProtoEnum (Failure_FailureCodeMPP_TIMEOUT) = 23
  fromProtoEnum (Failure_FailureCodeINTERNAL_FAILURE) = 997
  fromProtoEnum (Failure_FailureCodeUNKNOWN_FAILURE) = 998
  fromProtoEnum (Failure_FailureCodeUNREADABLE_FAILURE) = 999

instance HsJSONPB.ToJSONPB Failure_FailureCode where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB Failure_FailureCode where
  parseJSONPB (HsJSONPB.String "RESERVED") =
    Hs.pure Failure_FailureCodeRESERVED
  parseJSONPB (HsJSONPB.String "INCORRECT_OR_UNKNOWN_PAYMENT_DETAILS") =
    Hs.pure Failure_FailureCodeINCORRECT_OR_UNKNOWN_PAYMENT_DETAILS
  parseJSONPB (HsJSONPB.String "INCORRECT_PAYMENT_AMOUNT") =
    Hs.pure Failure_FailureCodeINCORRECT_PAYMENT_AMOUNT
  parseJSONPB (HsJSONPB.String "FINAL_INCORRECT_CLTV_EXPIRY") =
    Hs.pure Failure_FailureCodeFINAL_INCORRECT_CLTV_EXPIRY
  parseJSONPB (HsJSONPB.String "FINAL_INCORRECT_HTLC_AMOUNT") =
    Hs.pure Failure_FailureCodeFINAL_INCORRECT_HTLC_AMOUNT
  parseJSONPB (HsJSONPB.String "FINAL_EXPIRY_TOO_SOON") =
    Hs.pure Failure_FailureCodeFINAL_EXPIRY_TOO_SOON
  parseJSONPB (HsJSONPB.String "INVALID_REALM") =
    Hs.pure Failure_FailureCodeINVALID_REALM
  parseJSONPB (HsJSONPB.String "EXPIRY_TOO_SOON") =
    Hs.pure Failure_FailureCodeEXPIRY_TOO_SOON
  parseJSONPB (HsJSONPB.String "INVALID_ONION_VERSION") =
    Hs.pure Failure_FailureCodeINVALID_ONION_VERSION
  parseJSONPB (HsJSONPB.String "INVALID_ONION_HMAC") =
    Hs.pure Failure_FailureCodeINVALID_ONION_HMAC
  parseJSONPB (HsJSONPB.String "INVALID_ONION_KEY") =
    Hs.pure Failure_FailureCodeINVALID_ONION_KEY
  parseJSONPB (HsJSONPB.String "AMOUNT_BELOW_MINIMUM") =
    Hs.pure Failure_FailureCodeAMOUNT_BELOW_MINIMUM
  parseJSONPB (HsJSONPB.String "FEE_INSUFFICIENT") =
    Hs.pure Failure_FailureCodeFEE_INSUFFICIENT
  parseJSONPB (HsJSONPB.String "INCORRECT_CLTV_EXPIRY") =
    Hs.pure Failure_FailureCodeINCORRECT_CLTV_EXPIRY
  parseJSONPB (HsJSONPB.String "CHANNEL_DISABLED") =
    Hs.pure Failure_FailureCodeCHANNEL_DISABLED
  parseJSONPB (HsJSONPB.String "TEMPORARY_CHANNEL_FAILURE") =
    Hs.pure Failure_FailureCodeTEMPORARY_CHANNEL_FAILURE
  parseJSONPB (HsJSONPB.String "REQUIRED_NODE_FEATURE_MISSING") =
    Hs.pure Failure_FailureCodeREQUIRED_NODE_FEATURE_MISSING
  parseJSONPB (HsJSONPB.String "REQUIRED_CHANNEL_FEATURE_MISSING") =
    Hs.pure Failure_FailureCodeREQUIRED_CHANNEL_FEATURE_MISSING
  parseJSONPB (HsJSONPB.String "UNKNOWN_NEXT_PEER") =
    Hs.pure Failure_FailureCodeUNKNOWN_NEXT_PEER
  parseJSONPB (HsJSONPB.String "TEMPORARY_NODE_FAILURE") =
    Hs.pure Failure_FailureCodeTEMPORARY_NODE_FAILURE
  parseJSONPB (HsJSONPB.String "PERMANENT_NODE_FAILURE") =
    Hs.pure Failure_FailureCodePERMANENT_NODE_FAILURE
  parseJSONPB (HsJSONPB.String "PERMANENT_CHANNEL_FAILURE") =
    Hs.pure Failure_FailureCodePERMANENT_CHANNEL_FAILURE
  parseJSONPB (HsJSONPB.String "EXPIRY_TOO_FAR") =
    Hs.pure Failure_FailureCodeEXPIRY_TOO_FAR
  parseJSONPB (HsJSONPB.String "MPP_TIMEOUT") =
    Hs.pure Failure_FailureCodeMPP_TIMEOUT
  parseJSONPB (HsJSONPB.String "INTERNAL_FAILURE") =
    Hs.pure Failure_FailureCodeINTERNAL_FAILURE
  parseJSONPB (HsJSONPB.String "UNKNOWN_FAILURE") =
    Hs.pure Failure_FailureCodeUNKNOWN_FAILURE
  parseJSONPB (HsJSONPB.String "UNREADABLE_FAILURE") =
    Hs.pure Failure_FailureCodeUNREADABLE_FAILURE
  parseJSONPB v = (HsJSONPB.typeMismatch "Failure_FailureCode" v)

instance HsJSONPB.ToJSON Failure_FailureCode where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Failure_FailureCode where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite Failure_FailureCode

data ChannelUpdate
  = ChannelUpdate
      { channelUpdateSignature ::
          Hs.ByteString,
        channelUpdateChainHash :: Hs.ByteString,
        channelUpdateChanId :: Hs.Word64,
        channelUpdateTimestamp :: Hs.Word32,
        channelUpdateMessageFlags :: Hs.Word32,
        channelUpdateChannelFlags :: Hs.Word32,
        channelUpdateTimeLockDelta :: Hs.Word32,
        channelUpdateHtlcMinimumMsat :: Hs.Word64,
        channelUpdateBaseFee :: Hs.Word32,
        channelUpdateFeeRate :: Hs.Word32,
        channelUpdateHtlcMaximumMsat :: Hs.Word64,
        channelUpdateExtraOpaqueData :: Hs.ByteString
      }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChannelUpdate where
  nameOf _ = (Hs.fromString "ChannelUpdate")

instance HsProtobuf.HasDefault ChannelUpdate

instance HsProtobuf.Message ChannelUpdate where
  encodeMessage
    _
    ChannelUpdate
      { channelUpdateSignature = channelUpdateSignature,
        channelUpdateChainHash = channelUpdateChainHash,
        channelUpdateChanId = channelUpdateChanId,
        channelUpdateTimestamp = channelUpdateTimestamp,
        channelUpdateMessageFlags = channelUpdateMessageFlags,
        channelUpdateChannelFlags = channelUpdateChannelFlags,
        channelUpdateTimeLockDelta = channelUpdateTimeLockDelta,
        channelUpdateHtlcMinimumMsat = channelUpdateHtlcMinimumMsat,
        channelUpdateBaseFee = channelUpdateBaseFee,
        channelUpdateFeeRate = channelUpdateFeeRate,
        channelUpdateHtlcMaximumMsat = channelUpdateHtlcMaximumMsat,
        channelUpdateExtraOpaqueData = channelUpdateExtraOpaqueData
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                channelUpdateSignature
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                channelUpdateChainHash
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                channelUpdateChanId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                channelUpdateTimestamp
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                channelUpdateMessageFlags
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                channelUpdateChannelFlags
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                channelUpdateTimeLockDelta
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                channelUpdateHtlcMinimumMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                channelUpdateBaseFee
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                channelUpdateFeeRate
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                channelUpdateHtlcMaximumMsat
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 12)
                channelUpdateExtraOpaqueData
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChannelUpdate)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 10)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 11)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 12)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "signature")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "chain_hash")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "chan_id")
          [ ( HsProtobuf.DotProtoOption
                (HsProtobuf.Single "jstype")
                (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING"))
            )
          ]
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "timestamp")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "message_flags")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "channel_flags")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "time_lock_delta")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "htlc_minimum_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "base_fee")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "fee_rate")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "htlc_maximum_msat")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 12)
          (HsProtobuf.Prim HsProtobuf.Bytes)
          (HsProtobuf.Single "extra_opaque_data")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChannelUpdate where
  toJSONPB (ChannelUpdate f1 f2 f3 f4 f10 f5 f6 f7 f8 f9 f11 f12) =
    ( HsJSONPB.object
        [ "signature" .= f1,
          "chain_hash" .= f2,
          "chan_id" .= f3,
          "timestamp" .= f4,
          "message_flags" .= f10,
          "channel_flags" .= f5,
          "time_lock_delta" .= f6,
          "htlc_minimum_msat" .= f7,
          "base_fee" .= f8,
          "fee_rate" .= f9,
          "htlc_maximum_msat" .= f11,
          "extra_opaque_data" .= f12
        ]
    )
  toEncodingPB (ChannelUpdate f1 f2 f3 f4 f10 f5 f6 f7 f8 f9 f11 f12) =
    ( HsJSONPB.pairs
        [ "signature" .= f1,
          "chain_hash" .= f2,
          "chan_id" .= f3,
          "timestamp" .= f4,
          "message_flags" .= f10,
          "channel_flags" .= f5,
          "time_lock_delta" .= f6,
          "htlc_minimum_msat" .= f7,
          "base_fee" .= f8,
          "fee_rate" .= f9,
          "htlc_maximum_msat" .= f11,
          "extra_opaque_data" .= f12
        ]
    )

instance HsJSONPB.FromJSONPB ChannelUpdate where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChannelUpdate"
        ( \obj ->
            (Hs.pure ChannelUpdate) <*> obj .: "signature"
              <*> obj .: "chain_hash"
              <*> obj .: "chan_id"
              <*> obj .: "timestamp"
              <*> obj .: "message_flags"
              <*> obj .: "channel_flags"
              <*> obj .: "time_lock_delta"
              <*> obj .: "htlc_minimum_msat"
              <*> obj .: "base_fee"
              <*> obj .: "fee_rate"
              <*> obj .: "htlc_maximum_msat"
              <*> obj .: "extra_opaque_data"
        )
    )

instance HsJSONPB.ToJSON ChannelUpdate where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChannelUpdate where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChannelUpdate where
  declareNamedSchema _ =
    do
      let declare_signature = HsJSONPB.declareSchemaRef
      channelUpdateSignature <- declare_signature Proxy.Proxy
      let declare_chain_hash = HsJSONPB.declareSchemaRef
      channelUpdateChainHash <- declare_chain_hash Proxy.Proxy
      let declare_chan_id = HsJSONPB.declareSchemaRef
      channelUpdateChanId <- declare_chan_id Proxy.Proxy
      let declare_timestamp = HsJSONPB.declareSchemaRef
      channelUpdateTimestamp <- declare_timestamp Proxy.Proxy
      let declare_message_flags = HsJSONPB.declareSchemaRef
      channelUpdateMessageFlags <- declare_message_flags Proxy.Proxy
      let declare_channel_flags = HsJSONPB.declareSchemaRef
      channelUpdateChannelFlags <- declare_channel_flags Proxy.Proxy
      let declare_time_lock_delta = HsJSONPB.declareSchemaRef
      channelUpdateTimeLockDelta <- declare_time_lock_delta Proxy.Proxy
      let declare_htlc_minimum_msat = HsJSONPB.declareSchemaRef
      channelUpdateHtlcMinimumMsat <-
        declare_htlc_minimum_msat
          Proxy.Proxy
      let declare_base_fee = HsJSONPB.declareSchemaRef
      channelUpdateBaseFee <- declare_base_fee Proxy.Proxy
      let declare_fee_rate = HsJSONPB.declareSchemaRef
      channelUpdateFeeRate <- declare_fee_rate Proxy.Proxy
      let declare_htlc_maximum_msat = HsJSONPB.declareSchemaRef
      channelUpdateHtlcMaximumMsat <-
        declare_htlc_maximum_msat
          Proxy.Proxy
      let declare_extra_opaque_data = HsJSONPB.declareSchemaRef
      channelUpdateExtraOpaqueData <-
        declare_extra_opaque_data
          Proxy.Proxy
      let _ =
            Hs.pure ChannelUpdate
              <*> HsJSONPB.asProxy declare_signature
              <*> HsJSONPB.asProxy declare_chain_hash
              <*> HsJSONPB.asProxy declare_chan_id
              <*> HsJSONPB.asProxy declare_timestamp
              <*> HsJSONPB.asProxy declare_message_flags
              <*> HsJSONPB.asProxy declare_channel_flags
              <*> HsJSONPB.asProxy declare_time_lock_delta
              <*> HsJSONPB.asProxy declare_htlc_minimum_msat
              <*> HsJSONPB.asProxy declare_base_fee
              <*> HsJSONPB.asProxy declare_fee_rate
              <*> HsJSONPB.asProxy declare_htlc_maximum_msat
              <*> HsJSONPB.asProxy declare_extra_opaque_data
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChannelUpdate",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("signature", channelUpdateSignature),
                          ("chain_hash", channelUpdateChainHash),
                          ("chan_id", channelUpdateChanId),
                          ("timestamp", channelUpdateTimestamp),
                          ( "message_flags",
                            channelUpdateMessageFlags
                          ),
                          ( "channel_flags",
                            channelUpdateChannelFlags
                          ),
                          ( "time_lock_delta",
                            channelUpdateTimeLockDelta
                          ),
                          ( "htlc_minimum_msat",
                            channelUpdateHtlcMinimumMsat
                          ),
                          ("base_fee", channelUpdateBaseFee),
                          ("fee_rate", channelUpdateFeeRate),
                          ( "htlc_maximum_msat",
                            channelUpdateHtlcMaximumMsat
                          ),
                          ( "extra_opaque_data",
                            channelUpdateExtraOpaqueData
                          )
                        ]
                  }
            }
        )
